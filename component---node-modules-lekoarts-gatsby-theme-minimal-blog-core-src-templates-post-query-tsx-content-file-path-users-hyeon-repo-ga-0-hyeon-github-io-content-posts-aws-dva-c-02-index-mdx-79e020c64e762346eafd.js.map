{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-users-hyeon-repo-ga-0-hyeon-github-io-content-posts-aws-dva-c-02-index-mdx-79e020c64e762346eafd.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/aws-DVA-C02/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    br: \"br\",\n    strong: \"strong\",\n    code: \"code\",\n    h2: \"h2\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"들어가며\"), \"\\n\", React.createElement(_components.p, null, \"이전에 GCP 시험을 본 적이 있습니다. 처음에는 덤프 보지 않겠어!! 공부해서 시험을 볼거야!! 라며 디데이도 계산하고 공부 일정도 짜고 그랬는데요. (예상되시겠지만) 그렇게 시험 직전까지 한번도 공부하지 않았고... 결국 전날에 덤프를 열심히 외우고 갔습니다.\", React.createElement(_components.br), \"\\n\", \"그리고 시간이 흘러 AWS 시험을 보게 되었는데... 또 다시 아무것도 공부하지 않은 채로 시험 직전이 되었습니다. 그래도 전처럼 디데이를 세거나 공부 일정은 짜거나 하지 않은 저를 기특(?)해하면서요.\"), \"\\n\", React.createElement(_components.p, null, \"GCP 준비할 때의 경험(?)을 바탕으로 저는 자격증 준비를 통해 남는 지식은 거의 없다는 생각을 하고 있었는데요. 그렇게 하루 버리는 셈 치고 시험 전날 덤프를 읽는데 전에 GCP 시험을 볼 때와는 조금 느낌이 다르더라고요.\", React.createElement(_components.br), \"\\n\", \"경험해본 AWS 서비스의 갯수도 \", React.createElement(_components.strong, null, \"아주 조금\"), \" 늘어났고, 옆에서 주워 들은 것들도 조금씩 쌓인 상태라 그런걸까요? \", React.createElement(_components.code, null, \"오~~ 이럴때 이거 쓰면 좋겠구나, 이거 다른 서비스랑은 어떻게 붙여서 응용하지?\"), \" 라는 생각이 들어 찾아보게 만드는 문항이 종종 보였어요.\"), \"\\n\", React.createElement(_components.p, null, \"이건 기억해둬야지하고 이면지에 적다보니... 이렇게 써놔도 나중에 보지 않겠다 싶어 아까운 마음이 들어 포스트를 작성하면서 공부하기로했습니다 😀\"), \"\\n\", React.createElement(_components.h1, null, \"기록\"), \"\\n\", React.createElement(_components.h2, null, \"아는 것과 모르는 것 식별하기\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://d1.awsstatic.com/ko_KR/training-and-certification/docs-dev-associate/AWS-Certified-Developer-Associate_Exam-Guide.pdf\"\n  }, \"시험 가이드\"), \"를 열어보면 이 시험에 포함된 AWS 서비스 목록이 명시되어 있는데요.\\n시험 문제 자체가 상황을 주고 그에 적합한 서비스의 조합을 선택하게 하는 패턴이라, 각 서비스가 어떤 용도로 쓰이는지 정도는 한 번 식별하고 덤프 외우기를 시작해도 좋을 것 같아 잠시 시간을 내어 종이에 정리를 해봤어요.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"정확하게 아는 것\"), \"(\", React.createElement(_components.code, null, \"사용해본 것\"), \"), \", React.createElement(_components.code, null, \"대충 아는 것\"), \"(\", React.createElement(_components.code, null, \"들어는 본 것\"), \"), \", React.createElement(_components.code, null, \"모르는 것\"), \"을 표시하고 추가로 \", React.createElement(_components.code, null, \"대충 알지만 비슷한 이름/용도의 다른 서비스와 구분할 정도로는 알지 못하는 것\"), \"(ex - 맨날 헷갈리는 \", React.createElement(_components.code, null, \"ECR\"), \" \", React.createElement(_components.code, null, \"ECS\"), \" \", React.createElement(_components.code, null, \"EKS\"), \" 🤦‍♀️) 정도를 묶어두니 한결 AWS에 대한 막연한 두려움의 장벽이 낮아지는 것을 느낄 수 있었습니다.\"), \"\\n\", React.createElement(_components.p, null, \"어떤 분야에 대한 공부를 시작할 때 \", React.createElement(_components.code, null, \"내가 모르는게 있기 때문\"), \"에 두렵고 막연한게 아니라 \", React.createElement(_components.code, null, \"내가 아는 것과 모르는 것이 무엇인지 모르기 때문\"), \"에 도전하기 어렵다는 것을 오랜만에 다시 경험해서 개인적으로는 자격증 취득 여부와 관련 없이 보람찬 기분을 느낄 수 있었던 것 같아요.\\n추가로 오랜만에 아침 일찍 도서관에 가본 것도 보람을 더하는데 한 몫 했지만요 ㅎㅎ\"), \"\\n\", React.createElement(_components.h2, null, \"주어진 문제상황 - 제안된 해결방법 - 내 생각\"), \"\\n\", React.createElement(_components.p, null, \"선택지를 보기 전에 먼저 나라면 어떻게 할까 생각을 해봤는데, 제가 택한 방향이 민망해지는 답안이 몇 개 있어서 나중을 위해 기록해보았습니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"문제) S3 특정 경로의 파일에 대한 접근 권한을 사용자 별로 제한해야됨\"), \"\\n\", React.createElement(_components.li, null, \"해결) Cognito를 쓰고 있다면, S3 폴더별 IAM 정책을 Cognito Identity Prefix 로 제한할 수 있음\"), \"\\n\", React.createElement(_components.li, null, \"내생각) 평소에 AWS 권한에 대해 제가 관여한건 새로운 기능 개발하다가 권한 에러 떨어질때가 전부인데요. 그마저도 확신 없이 CDS 분들께 \\\"권한 빠진것 같아요..\\\" 라고 슬랙 보내는게 전부였어요. 이 문항 보고 문제 상황에 대해 다각도로 접근해야겠다는 생각을 했습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"문제) 일반정보와 개인정보가 섞여서 적혀있는 원본 파일이 S3에 올라가 있는데, 개인정보를 제거하여 제3자에게 제공해야함. 개발자가 파일 읽어서 개인정보 제거하는 람다까지는 개발해뒀음.\"), \"\\n\", React.createElement(_components.li, null, \"해결) S3 Object lambda access point 를 생성하여 제3자에게 람다를 거친 S3 파일에 접근하는 방법을 제공할 수 있음\"), \"\\n\", React.createElement(_components.li, null, \"내생각) 이거 읽자마자 아 쉽네 lambda trigger 해서 파일 두벌씩 보관하면 되지~ 생각했는데요 ㅋㅋㅋㅋㅋ ㅠㅠ 답 보고 너무 부끄럽더라고요.\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"문제) 캐싱을 통해 DB 접근을 줄여 성능향상을 꾀하고 있는데, 이 데이터는 정렬되어있어야함\"), \"\\n\", React.createElement(_components.li, null, \"해결) ElastiCache for Redis instance를 사용\"), \"\\n\", React.createElement(_components.li, null, \"내생각) 동일한 문장인데 Redis 인지 Memcached 인지만 다른 두 답안이 있었는데요. Redis 는 몇 가지 유용한 자료구조를 제공하기 때문에 \\\"정렬\\\" 이 보장된 데이터를 캐싱하고자 한다면 Redis 를 선택해야했습니다. 항상 기계적으로 Redis를 선택했었는데, 사실 String Value만 저장한다면 Memcached 도 후보에 넣어 고민해봤어야 하는거 아닌가 반성했습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"문제) 정적 웹사이트를 HTTPS로 호스팅 하고 싶으며 여러 종류의 repository를 사용하고 있음. 가장 손이 덜 가게 호스팅하려면?\"), \"\\n\", React.createElement(_components.li, null, \"해결) AWS Amplify를 사용\"), \"\\n\", React.createElement(_components.li, null, \"내생각) 정적 웹사이트를 보고 바로 S3지 라고 생각했는데, 간과한 것이 있었습니다. \", React.createElement(_components.strong, null, \"S3 정적 호스팅 만으로는 HTTP지원이 되지 않기 때문\"), \"에 CloudFront를 붙여야한다는 사실을요... \", React.createElement(_components.a, {\n    href: \"https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html\"\n  }, \"이 곳\"), \"에 친절히 적혀있습니다. ㅎㅎ\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"느낀점\"), \"\\n\", React.createElement(_components.p, null, \"AWS의 서비스 모듈을 연결할 때 트리거에 기반한 AWS 서비스 간의 연동을 우선으로 고려해보아야지 다짐했습니다.\", React.createElement(_components.br), \"\\n\", \"세부 기능 개발을 하다보면 단일 모듈에 대해서만 집중하게 되는 경향이 있는 것 같습니다. 그래서 각 모듈을 서로 연결해야하는 경우 큐나 배치잡 등 연결고리를 추가하여 문제를 해결하려고하게 되는데요. 알고있던 것보다 다양한 방식으로 트리거를 할 수 있더라고요.\"), \"\\n\", React.createElement(_components.h1, null, \"마치며\"), \"\\n\", React.createElement(_components.p, null, \"저는 사실상 개발 업무와 클라우드 인프라 담당 업무가 분리된 환경에서 일을 하고 있는데요. 인프라 담당자와 협업할 때 생각보다 대화의 핀트가 맞지 않을 때가 많아 (오히려 기획자와 이야기가 통하는 편) 초반에 당황했던 기억이 있습니다.\", React.createElement(_components.br), \"\\n\", \"저는 클라우드를 잘 모르고 인프라 담당자는 개발을 잘 몰라서 그랬다는 것을 얼마 지나지 않아 깨닫고 이제 어디가서 풀스택이라는 말은 하지 말아야지 다짐했었는데요.😅 시험 준비하면서 또 그때 생각이 또 났습니다.\"), \"\\n\", React.createElement(_components.p, null, \"그럼,, 다음 시험을 볼 때도 아마 저는 덤프를 읽고 있겠지만 이번처럼 의외로 더 얻어가는게 있을지도 모른다는 기대를 해보며 이만 시험을 보러 가보겠습니다. 준비 시간에 비하면 양심 없지만 부디 붙기를 🙏\"), \"\\n\", React.createElement(_components.p, null, \"(23.05.27 추가) 다행히 패스 하였습니다 🤤\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/hyeon/repo/ga0hyeon.github.io/content/posts/aws-DVA-C02/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h1","p","br","strong","code","h2","ul","li","hr","_provideComponents","components","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}