{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-users-hyeon-repo-ga-0-hyeon-github-io-content-posts-jpa-index-mdx-72a1558a40337f87fd42.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/jpa/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    hr: \"hr\",\n    a: \"a\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    br: \"br\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Motivation\"), \"\\n\", React.createElement(_components.p, null, \"저는 JPA를 써본적이 없는데요. JPA를 사용해본/하고있는 사람들에게 JPA를 설명해달라고 하면 \\\"하... 너넨 이런거 하지마라 🚬\\\" 느낌으로다가 별로라고 말해주곤 하더라구요.\\n하지 말라고 하면 더 해보고 싶어서 한 번 간단한 샘플을 띄워보기로 했습니다.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"Spring Initializer 로 프로젝트 뼈대 생성\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://start.spring.io/\"\n  }, \"Initializer\"), \"로 프로젝트 뼈대를 생성합니다.\"), \"\\n\", React.createElement(_components.p, null, \"언어 옵션 중 Kotlin이 아주 잠깐 궁금했으나 잘 참고 Java를 고릅니다 ㅎㅎ 왜냐면 아직 Java도 아직 잘모르기 때문이죠 🤦‍♀️\\nDependency는 각자 필요한 것을 선택하면 되는데, 저는 Lombok, JPA, Flyway, Web 을 골랐습니다.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"Application.yaml 설정\"), \"\\n\", React.createElement(_components.p, null, \"Initializer로 만든 폴더 안에는 application.properties가 기본으로 생성되어있으나 저는 가독성 때문에 yaml 포맷을 선호하므로 application.yaml 파일을 만들어줍니다.\\n아래와 같이 application.yaml를 설정해주면 \", React.createElement(_components.code, null, \"MySQL - JPA - flyway\"), \" 는 잘 연동이 됩니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"server:\\n  address: localhost\\n  port: 8080\\n\\nspring:\\n  flyway:\\n    enabled: true\\n    locations: classpath:db/migration\\n    schemas: coworksaga\\n    baseline-on-migrate: true\\n    url: &db-url jdbc:mysql://localhost:3306/coworksaga?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true\\n    user: &db-user coworksaga\\n    password: &db-pwd root1234\\n    create-schemas: true\\n  jpa:\\n    database: mysql\\n    hibernate:\\n      ddl-auto: validate\\n    show-sql: true\\n    format-sql: true\\n    use-sql-comments: true\\n    properties:\\n      hibernate:\\n        temp:\\n          use_jdbc_metadata_defaults: false\\n  datasource:\\n      url: *db-url\\n      username: *db-user\\n      password: *db-pwd\\n      driver-class-name: com.mysql.cj.jdbc.Driver\\n\\n\\nlogging:\\n  level:\\n    org.hibernate.SQL: DEBUG\\n    org.hibernate.type: TRACE\\n\")), \"\\n\", React.createElement(_components.p, null, \"+) 깨달은점\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"&, * 페어로 변수를 선언하고 불러다 쓸 수 있습니다. 굿굿\"), \"\\n\", React.createElement(_components.li, null, \"DB 스키마가 없을때 자동으로 생성하도록 하기 위해서는 jdbc url에 \", React.createElement(_components.code, null, \"createDatabaseIfNotExist=true\"), \" 옵션을 주면 됩니다.\"), \"\\n\", React.createElement(_components.li, null, \"JPA를 사용하면 기본 옵션으로 서버가 뜰때 자동으로 DB Connection을 맺어주는데요. 위에서 말한대로 저는 서버 기동 시점에 DB 스키마가 없는 상황을 가정하고 jdbc url에 옵션을 줬으므로 이 기본 동작을 꺼줘야합니다. \", React.createElement(_components.a, {\n    href: \"https://www.baeldung.com/spring-data-jpa-run-app-without-db\"\n  }, \"baeldung 아티클\"), \" 에 내용 밎 설정 방법이 잘 설명되어 있습니다.\"), \"\\n\", React.createElement(_components.li, null, \"JPA에 대해 정말 지식이 없어서... 단순히 특정 규칙을 가진 메소드 명으로 쿼리 만들어주는 기능만 하는 줄 알았는데, DDL 자동 생성 기능도 있어서 신기했습니다. 오히려 불편할 것 같다는 생각이 들어 꺼두었지만요 ㅎㅎ\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"+) 궁금한점\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"비슷한 카테고리 같은데 왜 depth가 왜 다른걸까요? jpa.hibernate랑 jpa.properties.hibernate 처럼.\"), \"\\n\", React.createElement(_components.li, null, \"url username passwork 이거 다 datasource, flyway에 두 번씩 쓰게 되어있는데.. 변수로 정리해두긴 했으나, 두 옵션이 한 값을 바라보도록 바로 설정은 안되는걸까요?\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"Layer 별 폴더 트리 생성\"), \"\\n\", React.createElement(_components.p, null, \"이제 로컬에 서버를 띄울 수 있는 상태가 되었으니 실제로 기능 개발을 할 수 있도록 폴더를 생성합니다.\"), \"\\n\", React.createElement(_components.p, null, \"매번 Layer (Controller, Service, Repository) 별로 폴더링을 했는데 문득 다른 사람들은 어쩌고 있나 싶어 찾아보니 Entity/Domain별로 묶는 방법도 쓰이고 있네요. 사실 폴더로 묶으면 한 패키지가 되니, 패키지랑 맥락이 비슷한 개념은 Layer보단 Entity/Domain인 것 같기도 하고 고민이 되긴 합니다. 그렇다고 실제로 패키지별로 따로 묶어서 배포/공유하는 것도 아니니 생각보다 엄청나게 메리트가 있을 것 같지 않기는 하지만요.\"), \"\\n\", React.createElement(_components.p, null, \"우선 이번에도 Layer로 폴더를 나누도록 합니다.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"첫번째 flyway 스크립트와 REST api 만들기\"), \"\\n\", React.createElement(_components.p, null, \"이제 첫번째 REST API를 만들어봅니다.\", React.createElement(_components.br), \"\\n\", \"uuid를 넘기면 workspace 이름을 조회하는 API이며, 그러려면 우선 workspace 테이블을 생성해주어야하겠습니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"V0_1_0__create_workspaces.sql\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"CREATE TABLE workspaces (\\n\\tworkspace_id INT UNSIGNED auto_increment NOT NULL PRIMARY KEY,\\n\\tworkspace_name varchar(100) NOT NULL,\\n\\tworkspace_uuid varchar(36) NOT NULL,\\n\\tworkspace_password varchar(10) NULL,\\n\\tcreated_at DATETIME NOT NULL DEFAULT NOW(),\\n\\tupdated_at DATETIME NOT NULL DEFAULT NOW() ON UPDATE NOW()\\n)\\nENGINE=InnoDB\\nDEFAULT CHARSET=utf8mb4\\nCOLLATE=utf8mb4_unicode_ci\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"V0_1_1__insert_workspaces.sql\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sql\"\n  }, \"INSERT INTO workspaces\\n(workspace_id, workspace_name, workspace_uuid, workspace_password, created_at, updated_at)\\nVALUES(1, \\\"HYEON's workspace\\\", '2a2ba386-1ca1-49c6-8573-076916ac6139', 'Password', now(), now());\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이제 Entity를 생성합니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Workspace\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@Entity\\n@Table(name = \\\"workspaces\\\")\\n@Builder\\n@AllArgsConstructor\\n@NoArgsConstructor\\n@Getter\\npublic class Workspace {\\n    @Id\\n    private Integer id;\\n    private String name;\\n    @Column(name = \\\"uuid\\\", unique = true)\\n    private String uuid;\\n    private String password;\\n    private String createdAt;\\n    private String updatedAt;\\n}\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"그리고 차례대로 Repository, Service, Controller를 만들어줍니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"WorkspaceRepository\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@Repository\\npublic interface WorkspaceRepository extends JpaRepository<Workspace, Integer> {\\n    Workspace findByUuid(String uuid);\\n}\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"WorkspaceService\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@Service\\n@RequiredArgsConstructor\\npublic class WorkspaceService {\\n    private final WorkspaceRepository workspaceRepository;\\n\\n    public Workspace getWorkspace(String uuid) {\\n        return workspaceRepository.findByUuid(uuid);\\n    }\\n}\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"WorkspaceController\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-java\"\n  }, \"@RestController\\n@RequiredArgsConstructor\\npublic class WorkspaceController {\\n    private final WorkspaceService workspaceService;\\n\\n    @GetMapping(\\\"/workspaces/{uuid}\\\")\\n    public Workspace workspaceDetail(@PathVariable @Length(min=16, max=16) String uuid) {\\n        return workspaceService.getWorkspace(uuid);\\n    }\\n}\\n\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"+) 쿼리 결과는 정상적이지만 API 응답이 그냥  \", React.createElement(_components.code, null, \"{}\"), \" 로 떨어지는 경우\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"return 한 Entity에 public getter가 없어서 그럴 수 있습니다. \", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/49117622/spring-rest-controller-returns-empty-json-iterable-data-structure-why\"\n  }, \"참고\")), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, null, \"마치며\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"처음부터 해보면 머리에 확실히 잘 들오는 것 같습니다 👍 get api 하나 만드는데 생각보다 많은 것을 배웠네요.\"), \"\\n\", React.createElement(_components.li, null, \"너무 간단한 예제만 만들어서 아직은 왜 \\\"하... 너넨 이런거(JPA) 하지마라 🚬\\\" 하는건 지 못 느꼈어요. 더 써봐야되겠습니다.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/hyeon/repo/ga0hyeon.github.io/content/posts/jpa/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h1","p","hr","code","pre","ul","li","br","_provideComponents","components","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}