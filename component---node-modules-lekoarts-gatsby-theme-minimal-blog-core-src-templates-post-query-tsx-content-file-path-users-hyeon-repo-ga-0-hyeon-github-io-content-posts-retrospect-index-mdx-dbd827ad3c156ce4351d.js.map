{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-users-hyeon-repo-ga-0-hyeon-github-io-content-posts-retrospect-index-mdx-dbd827ad3c156ce4351d.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/retrospect/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    br: \"br\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"~ 4월\"), \"\\n\", React.createElement(_components.p, null, \"올 상반기 대부분은 작년 하반기부터 투입되어있던 프로젝트에서 시간을 보냈습니다.\"), \"\\n\", React.createElement(_components.p, null, \"아쉬운 점이 참 많았는데 그 중 일하는 방식에 대한 부분이 가장 아쉬웠던 것 같습니다.\"), \"\\n\", React.createElement(_components.p, null, \"저는 평소 '구현할 수 없다'는 말을 쓰지 않으려고 하는데요.\", React.createElement(_components.br), \"\\n\", \"실제로 제가 만드는 프로덕트에 구현할 수 없을 정도로 신박하게 복잡하거나 고도화된 기능이 없기도 하거니와, 대부분 '구현은 할 수 있는데 비용(인력/시간/돈)이 많이 들어요'나 '구현을 할 수 있는지 검토하려면 비용이 많이 들어요' 가 더 정확하고 책임감있는 표현이라고 생각하기 때문입니다.\"), \"\\n\", React.createElement(_components.p, null, \"하지만 안타깝게도 처음에는 고객이 '비용이 얼마가 들어도 좋으니 구현 또는 검토해주세요' 라고 했다가 결국에는 'N월 N일 전에 반드시 되어야합니다' 또는 '현재 개발인력 내에서 반드시 되어야합니다' 또는 '추가 라이센스 비용 없이 반드시 되어야합니다' 등등 말을 바꾸는 경험을 여러번 겪다보니\", React.createElement(_components.br), \"\\n\", \"앞뒤 생략하고 '(인력/시간/돈 그 어느것도 늘려주지 않을 것을 알고 있으니)구현할 수 없다'가 먼저 나오게 되는 것 같습니다.\", React.createElement(_components.br), \"\\n\", \"개발팀의 사기도 떨어지고 고객의 신뢰도 떨어지니 프로젝트의 분위기가 점점 더 안좋아지는 것은 당연한 수순이겠죠.\"), \"\\n\", React.createElement(_components.p, null, \"투입된 시점에 이미 이런 분위기가 있었고, 저도 별 다른 노력 없이 그냥 분위기에 맞춰서 소극적으로 일했습니다. 시간이 좀 지나서야 적극적으로 일하기 시작했지만 역부족이었던 것 같구요.\"), \"\\n\", React.createElement(_components.p, null, \"나에게 이 판의 분위기를 바꿀만한 리더십과 커뮤니케이션 능력이 있었으면 조금 괜찮았을까 아쉬운 프로젝트였습니다. 다음엔 잘할 수 있을까요?\"), \"\\n\", React.createElement(_components.h1, null, \"5월\"), \"\\n\", React.createElement(_components.p, null, \"안식휴가를 다녀왔습니다. 입사한지 5년이 넘었다니 흑흑\"), \"\\n\", React.createElement(_components.h1, null, \"6월 ~\"), \"\\n\", React.createElement(_components.p, null, \"새 프로젝트에 투입되었습니다. 인원이 많은 프로젝트라 두근두근 했던 것 같아요. 느낀점도 많구요. 나열해보자면...\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"개발자 입장에서 스토리에 좁게 몰입하다보면 스스로 도출해낸 해결방법 두세가지가 나름 막상막하 처럼 보여서 고민이 길어지곤 하는데요. 리뷰어 입장에서 보면 생각보다 그 중 가장 합리적인 한 개가 눈에 확 띄더라구요. 쓸데없는 고민을 했던거죠 ㅋㅋ 의도적으로 한발 물러서서 고민하는 습관을 들여야겠다는 생각을 했습니다.\"), \"\\n\", React.createElement(_components.li, null, \"SA 입장에서 개발자가 자유롭게 정할 수 있도록 풀어줘야하는 영역과 규칙을 정해 제한해야하는 영역을 명확히 하기가 굉장히 어렵다는 생각을 했습니다. 자유도를 높이면 개발자가 스토리를 이상하게 해석하는 경우가 생겨버리고 (뒷처리는 덤...ㅜㅜ), 제한을 높이면 리뷰가 저의 주 업무가 되어버림 + 스토리에 deep dive 해서 떠올려낼 수 있는 아이디어나 구멍을 놓치게 됨 + 개발자들의 불만 증폭 등등 추가적인 문제가 또 생기니 어느 쪽도 정답이라고 할 수 없겠더라구요. 적당한 선에서 개발자들의 성향을 봐가며 해야하는데... 아직 많이 부족한 것 같습니다.\"), \"\\n\", React.createElement(_components.li, null, \"협상 스킬이 중요하다는 생각을 했습니다. 욕을 먹지 않으면서 일을 덜 할 수도 있고, 욕을 먹으면서 일을 더 할 수도 있다는거!\"), \"\\n\", React.createElement(_components.li, null, \"개발자들의 성향은 참 다양하고, 나만 저 개발자를 그렇게 생각하는게 아니고, 내가 느낀 분위기를 다들 느끼고 있고, 역시 사람하고 하는 일은 관계와 분위기가 중요하다는 생각을 했습니다.\"), \"\\n\", React.createElement(_components.li, null, \"스트레스가 높아지면 기억력 & 꼼꼼함이 급격히 감퇴하는 것을 몸소 체험했습니다. 오래 잘 일하기 위해서는 정말 정신건강이 중요한 것 같아요.\"), \"\\n\", React.createElement(_components.li, null, \"아직 프론트엔드, 백엔드 어느쪽에서도 특출난 전문가가 되지 못한 것 같습니다. 분발해야겠습니다.\"), \"\\n\", React.createElement(_components.li, null, \"ERD 설계 능력이 조금 늘어난 것 같습니다. 테이블을 어떻게 설계하냐에 따라서 무한히 확장할 수도 있고, 요건 하나만 바뀌어도 대응을 못하게 될 수도 있다는 점도 느꼈고요. 또 Spring이다 React다 프레임워크/라이브러리 공부만 했는데 SQL이 정말 중요하다는 것도 느꼈습니다. 기본적인 성능은 SQL을 잘 짜는것부터..\"), \"\\n\", React.createElement(_components.li, null, \"새로 만나는 모든 분에게는 배울 점이 한 개씩은 있는 것 같습니다! 많이 배웠습니다.\"), \"\\n\", React.createElement(_components.li, null, \"뭐든지 내가 내 언어로 설명할 수 있을 정도로 이해를 하고 써야 진짜라는 걸 다시 한번 다짐했습니다. 생각보다 이해 못하고 쓰는 사람도 많다는 점도 새삼 느꼈고, 거기에 휩쓸려서 나까지 이해 못하고 쓰는 사람이 되지 않도록 조심해야겠다고 생각했습니다. 더 연차가 쌓여도 모르면 모른다고, 이해 안되었으면 이해 안되었다고 말할거에요.\"), \"\\n\", React.createElement(_components.li, null, \"측정 -> 개선 -> 측정 -> 개선 -> .. 여러 번의 테스트를 걸처 성능을 개선해나가는 작업이 정말 어렵다는 것을 느꼈습니다. 테스트를 하는게 어려운게 아니라 그 끈기가요. '이 정도면 되지 않을까요?' 라고 농담으로라도 말하지 않겠다고 다짐했습니다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"11월\"), \"\\n\", React.createElement(_components.p, null, \"회사에서 발표형 시험을 봤습니다. 프로젝트 중간이라 제대로 준비하지 못했는데도 불구하고 참여만으로 느낀점이 많았습니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"저는 발표를 매우 못합니다. ㅋㅋㅋㅋㅋㅋ 🥲\"), \"\\n\", React.createElement(_components.li, null, \"나도 모르게 우물 안 개구리가 되어가고 있었던 것 같습니다. 부지런하게 찾아보고, 읽어보고, 써봐야겠습니다. ㅜㅜ\"), \"\\n\", React.createElement(_components.li, null, \"개발자에서 아키텍트로 진화하는 과정이 생각보다 심오한 것 같습니다. 개발자가 연차가 쌓이면 자연스럽게 아키텍트가 되는건가 막연히 생각해왔는데 (ㅋㅋ 글로 써놓고 보니 정말 말도 안되는..) 두 롤의 문제 접근방식이 많이 다른 것 같아요.\"), \"\\n\", React.createElement(_components.li, null, \"'지금 이 구조에서 잘 구현하는 법이 뭘까?' 고민하는게 일상이라 잊고 있었는데, '더 나은 구조는 뭐였을까?' 고민한지가 정말 오래된 것 같아요. 프로젝트마다 짧게는 몇 달, 길게는 몇 년 기간이 길기도 하고 비슷한 인원이 프로젝트 세팅을 하게 되면 기존에 익숙했던 아키텍처를 재활용하는 습관이 들어서 그런걸까요? 색다른 아키텍처를 경험할 기회가 많지 않기 때문에 이런 고민이 더욱 가치 있는 것 같은데 말이죠.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"마무리\"), \"\\n\", React.createElement(_components.p, null, \"아직 한 달 남았는데, 올해도 아쉬운 점 가득이네요! 내년에는 올해보다 좀 더 잘할 수 있을것같아요. 화이팅 ✌️\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/hyeon/repo/ga0hyeon.github.io/content/posts/retrospect/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h1","p","br","ul","li","_provideComponents","components","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}