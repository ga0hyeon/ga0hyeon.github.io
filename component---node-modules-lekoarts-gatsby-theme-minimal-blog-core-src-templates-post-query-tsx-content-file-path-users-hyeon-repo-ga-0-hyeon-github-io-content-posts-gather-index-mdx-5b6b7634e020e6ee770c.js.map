{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-users-hyeon-repo-ga-0-hyeon-github-io-content-posts-gather-index-mdx-5b6b7634e020e6ee770c.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://minimal-blog/./content/posts/gather/index.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    br: \"br\",\n    hr: \"hr\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    a: \"a\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"들어가며\"), \"\\n\", React.createElement(_components.p, null, \"원격근무 중 가장 유용하게 사용한 협업 도구를 꼽아보라면 저는 단연 개더타운 인데요. 귀여운 캐릭터와 직관적인 사용방법 때문인지, 사용하다보면 문득 문득 \\\"이거 만들어보면 재미있겠는데\\\" 생각이 들 때가 많았어요.\", React.createElement(_components.br), \"\\n\", \"그래서 이번 포스트에서는 실제로 개더타운을 클론코딩하는 사이드 프로젝트를 진행하고 배운점을 기록해보려고 합니다. 😎\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, null, \"어떤 기능을 구현할까요?\"), \"\\n\", React.createElement(_components.p, null, \"개더타운에 있는 모든 기능을 구현하는데에는 무리가 있기 때문에, 그 중 필수 기능이라고 생각되는 기능들을 정리해봤습니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"캐릭터 생성\"), \"\\n\", React.createElement(_components.li, null, \"맵 및 회의실 구현\"), \"\\n\", React.createElement(_components.li, null, \"캐릭터 이동 구현\"), \"\\n\", React.createElement(_components.li, null, \"실시간 음성 공유\"), \"\\n\", React.createElement(_components.li, null, \"실시간 영상 공유\"), \"\\n\", React.createElement(_components.li, null, \"실시간 텍스트 공유\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, null, \"무엇으로 구현할까요?\"), \"\\n\", React.createElement(_components.p, null, \"하는김에 써보고 싶었던 것을 모두 넣어보자고 생각했고, 그 결과 \", React.createElement(_components.code, null, \"Vite + React + Zustand\"), \" 로 구성된 FE와, \", React.createElement(_components.code, null, \"Express\"), \" 로 구성된 BE가 monorepo 에 담겨있는 형태의 프로젝트 뼈대가 갖추어졌습니다.\"), \"\\n\", React.createElement(_components.p, null, \"추가로, 기능을 구현하기 위해서 특별히 필요한 라이브러리는 다음과 같습니다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"캐릭터, 맵, 이동을 구현하기 위한 \", React.createElement(_components.a, {\n    href: \"https://pixijs.com/\"\n  }, \"Pixi.js\")), \"\\n\", React.createElement(_components.li, null, \"실시간 통신을 위한 \", React.createElement(_components.a, {\n    href: \"https://socket.io/\"\n  }, \"socket.io\")), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, null, \"개발환경 세팅 - BE\"), \"\\n\", React.createElement(_components.p, null, \"패키지 관리자는 \", React.createElement(_components.a, {\n    href: \"https://bun.sh/\"\n  }, \"bun\"), \"을 사용했습니다.\"), \"\\n\", React.createElement(_components.p, null, \"아래 명령어로\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"typescript를 사용하기 위해 @types/node, typescript를\"), \"\\n\", React.createElement(_components.li, null, \"편리한 개발환경을 위해 nodemon과 ts-node를\"), \"\\n\", React.createElement(_components.li, null, \"http 서버 구축을 위해 express, @types/express를\"), \"\\n\", React.createElement(_components.li, null, \"socket 서버 구축을 위해 socket.io, @types/socket.io를\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"설치해줍니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"bun init\\nbun add -d @types/node typescript nodemon ts-node express @types/express socket.io @types/socket.io\\n\")), \"\\n\", React.createElement(_components.p, null, \"src 폴더를 생성하여 기본으로 생성된 index.ts 파일을 옮겨주고, \", React.createElement(_components.code, null, \"package.json\"), \" 파일에 아래와 같이 명령어를 추가해줍니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"nodemon --exec node --loader ts-node/esm src/index.ts\\\", \\n    \\\"build\\\": \\\"tsc\\\"\\n  }\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"tsconfig.json\"), \" 파일에 아래와 같이 빌드 결과물을 담아줄 경로도 추가해줍니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"\\\"outDir\\\": \\\"./build\\\",\\n\")), \"\\n\", React.createElement(_components.p, null, \"이제 아래 명령어로 dev 서버를 실행한 뒤, \", React.createElement(_components.code, null, \"src/index.ts\"), \" 파일의 내용을 변경하면 nodemon이 변경사항을 감지하여 자동으로 서버가 새로고침되는 것을 확인할 수 있습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"bun run start\\n\")), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h2, null, \"개발환경 세팅 - FE\"), \"\\n\", React.createElement(_components.p, null, \"FE도 마찬가지로, 패키지 관리자는 \", React.createElement(_components.a, {\n    href: \"https://bun.sh/\"\n  }, \"bun\"), \"을 사용했습니다.\"), \"\\n\", React.createElement(_components.p, null, \"아래 명령어로 React + Typescript 샘플 프로젝트를 생성합니다. 상태관리에 사용할 Zustand와 통신에 사용할 axios, socket.io 패키지도 함께 추가합니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"npm create vite@latest . -- --template react-ts\\nbun init\\nbun add zustand axios socket.io -d @types/socket.io \\n\")), \"\\n\", React.createElement(_components.p, null, \"아래 명령어로 dev 서버를 실행한 뒤, \", React.createElement(_components.code, null, \"src/App.tsx\"), \" 파일의 내용을 변경하면 vite가 변경사항을 감지하여 자동으로 서버가 새로고침되는 것을 확인할 수 있습니다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"bun run dev\\n\")), \"\\n\", React.createElement(_components.h2));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/hyeon/repo/ga0hyeon.github.io/content/posts/gather/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Post","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","t","_t$styles","styles","to","replaceSlashes","name","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","Object","assign","h2","p","br","hr","ul","li","code","pre","_provideComponents","components","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}