{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":1,"renderable":1},{"_id":"source/images/webrtc_layout.png","path":"images/webrtc_layout.png","modified":1,"renderable":0},{"_id":"source/images/ocr_result_1.png","path":"images/ocr_result_1.png","modified":1,"renderable":0},{"_id":"source/images/profile.png","path":"images/profile.png","modified":1,"renderable":0},{"_id":"source/images/gather_clone_coding/1.png","path":"images/gather_clone_coding/1.png","modified":1,"renderable":0},{"_id":"source/images/gather_clone_coding/2.png","path":"images/gather_clone_coding/2.png","modified":1,"renderable":0},{"_id":"source/images/gather_clone_coding/3.png","path":"images/gather_clone_coding/3.png","modified":1,"renderable":0},{"_id":"source/images/gather_clone_coding/5.png","path":"images/gather_clone_coding/5.png","modified":1,"renderable":0},{"_id":"source/images/gather_clone_coding/4.png","path":"images/gather_clone_coding/4.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_data/head.njk","hash":"f1134f412c08ccf1ce1c27dc4e22919e3c49df43","modified":1673559490593},{"_id":"source/_data/styles.styl","hash":"bbe00eb72a0c727a4c2d1671ccb7527b582627a5","modified":1673560171065},{"_id":"source/_data/variables.styl","hash":"1859347c05e63b3f54ef27cc5d7dcf717f45edb7","modified":1673559490593},{"_id":"source/_drafts/MLOps.md","hash":"bf124f6e9e1b2f995d728c8ffa85277f0e7d464d","modified":1673559490594},{"_id":"source/_drafts/flutter-intro.md","hash":"8c5a6a0eb0b3d08187d66f9fa142b27f0cb736a1","modified":1673559490594},{"_id":"source/categories/index.md","hash":"329d1878379a913cf65927394404acabbd2c3f7c","modified":1673559490602},{"_id":"source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1673559490602},{"_id":"source/images/profile.png","hash":"8d17c501b982e391c9334a162f2d494540012ebe","modified":1673559490614},{"_id":"source/about/__index.html","hash":"6867c09ab7a362ea1a3b1c00362cfb49bcd10e73","modified":1673559490602},{"_id":"source/about/index.md","hash":"2d921211e69614d0bd1964cafe00128dd54f25a0","modified":1674396627932},{"_id":"source/playground/index.md","hash":"da204f81a27b60e289604a97a5e491a7fbad519d","modified":1673559490620},{"_id":"source/tags/index.md","hash":"4206603713f16413918178f7df3b8d6f1da1a562","modified":1673559490621},{"_id":"source/_posts/Diary/220906.md","hash":"c6cec887577a18bf5dfb6fb42a211146c96784e0","modified":1674395930506},{"_id":"source/_posts/Diary/220826.md","hash":"59184e2c8f695c92fc7405ac70976f0e35fed5a8","modified":1674395930506},{"_id":"source/_posts/Diary/220915.md","hash":"c80b75b38897548369b3eea5790312464bb56575","modified":1674395930506},{"_id":"source/_posts/Diary/230113.md","hash":"da76f522cb93a80ea41f7752398578cd36bb8681","modified":1674395930506},{"_id":"source/_posts/Diary/230122.md","hash":"2269de8e794f4669dfaf7193020442fb0ea60997","modified":1674395930505},{"_id":"source/playground/design/icons.html","hash":"2fd542724962f2f3d254098cf2465dd71ec6c9a0","modified":1673559490620},{"_id":"source/playground/react/render.html","hash":"a671d616fdeb805b8ec0c9df8d8b58bfa75e6622","modified":1673559490621},{"_id":"source/_posts/Tech/JavaScript/asynchronous-programming.md","hash":"1e9946c34be054c49474d98a3f1a149ea06e3647","modified":1674396292335},{"_id":"source/_posts/Tech/SpringBoot/setting-JPA.md","hash":"969ef754e03f2119ada1e5783e72526fa1a7d345","modified":1674396340858},{"_id":"source/_posts/Tech/SpringBoot/spring-validation.md","hash":"cb3bd18e638ed68081c846062ebaaafdbd7cab90","modified":1674396352813},{"_id":"source/_posts/Tech/AI_MLOps/ai-csp.md","hash":"3c25639274c30218c1e740e6d5415c9e944d1696","modified":1674396266989},{"_id":"source/_posts/Tech/AI_MLOps/ocr.md","hash":"d534817037ec8920bb3fe8206b62cb0e2bbe8a66","modified":1674396272039},{"_id":"source/_posts/Tech/ReactNative/RN-ios-image-not-showing.md","hash":"ac4a1bd127b56a51d0adaff4aa5a194911772dd1","modified":1674396298954},{"_id":"source/_posts/Tech/ReactNative/RN-publishing-align-center.md","hash":"772d84c06ad481869a688ef242e8afbf9d0a7168","modified":1674396303466},{"_id":"source/_posts/Tech/ReactNative/RN-publishing-branch-os.md","hash":"50d76ca43a4dccacffe33faa9ee4dce16b7b71b0","modified":1674396308571},{"_id":"source/_posts/Tech/ReactNative/RN-publishing-hide-scrollbar.md","hash":"b4b643d416fb21523c22f71481d3fededfa54de7","modified":1674396311668},{"_id":"source/_posts/Tech/ReactNative/RN-publishing-scrollview-sticky.md","hash":"c2f7313e5239af2c0d506f9ac2bf51586a44d21c","modified":1674396314643},{"_id":"source/_posts/Tech/ReactNative/RN-setup.md","hash":"d91dca3cac16a71500100965ab36bf6e00c267a6","modified":1674396318192},{"_id":"source/_posts/ToyProjects/Blog/Resume.md","hash":"1eb3ef79704ef56f13982f117687ee71b8cdf94f","modified":1674396129716},{"_id":"source/_posts/ToyProjects/Blog/hexo.md","hash":"5b0b3eaa905917c34e2e96c169791ce7c02d443d","modified":1674396122922},{"_id":"source/_posts/ToyProjects/Gather/gather-clonecoding-1.md","hash":"9fb5a6181c43c4274ccaf1cddd6ab36a3da6e944","modified":1674396099421},{"_id":"source/_posts/ToyProjects/Gather/gather-clonecoding-2.md","hash":"a21624d06cdb0aafb177d3da260eb7e9f54e39d1","modified":1674396103144},{"_id":"source/_posts/ToyProjects/Gather/gather-clonecoding-3.md","hash":"32ddc4268a8f40d3fe1461bf35e15eda6e3acce4","modified":1674396105251},{"_id":"source/_posts/ToyProjects/Gather/gather-clonecoding-4.md","hash":"56c1a56542678488c7b15726e8347a76326cfc96","modified":1674396107782},{"_id":"source/images/gather_clone_coding/2.png","hash":"aab29ff538d1c214d9e77b8e456f8c73ae563334","modified":1673559490606},{"_id":"source/images/gather_clone_coding/3.png","hash":"07239512b4c17c7822f606fd469d66bf89a19dac","modified":1673559490607},{"_id":"source/images/gather_clone_coding/5.png","hash":"1d3ce9e9d12eb6727589a85224f15ed96e8996af","modified":1673559490609},{"_id":"source/images/gather_clone_coding/4.png","hash":"84bb55acacd4815c06d547a0514d91d7e96acc19","modified":1673559490608},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1673559336350},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"932e4a95dbf5a20e28eff736b45b71f5a5715c74","modified":1673559336371},{"_id":"node_modules/hexo-theme-next/README.md","hash":"36c4b25587ca494102323dab5a38de5490451a64","modified":1673559336351},{"_id":"node_modules/hexo-theme-next/package.json","hash":"67f1da4652c23470632b45e1bfc3f1357d1c0f21","modified":1673559336349},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"c27e934f63440d62a8258194001ae2ba6118b87c","modified":1673559336371},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1673559336350},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1673559336350},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1673559336371},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1673559336350},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"46026e98fe279a9db5d68bf91afa5d8e41f9ccfb","modified":1673559336371},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"c4fc18c338309271d1afe737e6c404a6fa313bbc","modified":1673559336371},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"4bbdb4284afe495437cf7817b97b45f60e12d1e4","modified":1673559336371},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"8b6d4a8a056df4362d20ae1f6ac7a590dd7246e5","modified":1673559336372},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"1e256c8df039ddeba66526c5eb2d6c79177a7fc6","modified":1673559336372},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"2436942610e38b73b175cb0f8ed1f8f23d42a7ce","modified":1673559336372},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"c4bad93b23c7eefa730fd7fec5b05ace3ce9ca4d","modified":1673559336372},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"4d6efcdaea89dfe751b7707d91858bf33d3538b7","modified":1673559336372},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"25ee0d5b9a0464a91af7d2efb33293c09ad5abdf","modified":1673559336372},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"a0906702d3c87d0e1661e300ad0bdf7e679a3d91","modified":1673559336372},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"10d80915c41328f31a4f2d8ac736bba020f373d8","modified":1673559336372},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"fa7c43ec872aee2739b25dd7260e0764ea9e26fd","modified":1673559336372},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"8a4da307b4a19e3c96b90a07a2da8dc5d50e5d9e","modified":1673559336372},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"16b96783ba363255b4c8156c3e1efebdb37676f8","modified":1673559336373},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"034c5a0df49144e8f16ae2300dba9fde58b9329e","modified":1673559336373},{"_id":"node_modules/hexo-theme-next/languages/tk.yml","hash":"37d9af426b040004841273d163059cd49cd67d65","modified":1673559336373},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"890f87f6a33ad8452b771607d4c3ff14810b35fa","modified":1673559336373},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"fbaed3039ed8605b81422003a4ecb2a6514e339d","modified":1673559336373},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"a6ba04c743a5b494ac56612ce6b858d9ae3ae1bd","modified":1673559336373},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"5cebea74f3198a4a20cacf23069c3b91e4f03d85","modified":1673559336374},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"8ab7219563dab13885840207a86055000d173465","modified":1673559336374},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"9fdce9d316e205fc132b2181254ef3b04007a97d","modified":1673559336374},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"fc0a45112f2dcfc2642404e8934ea32a793c3bd7","modified":1673559336351},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1673559336352},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1673559336355},{"_id":"node_modules/hexo-theme-next/languages/th.yml","hash":"4fac74a39d3906c4a727476be4750530a505933a","modified":1673559336373},{"_id":"node_modules/hexo-theme-next/languages/bn.yml","hash":"74133a827c104d1d84509177f283947fe9327a80","modified":1673559336371},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1673559336351},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"ac3c4a7616ea80f0d32d68d6e53233952ba756dc","modified":1673559336350},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":1673559336350},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1673559336350},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"9bbdbb0656505acceef9b9895a576164175fe888","modified":1673559336350},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":1673559336357},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"547c62ab14d9e05d2d9116db9048a677fbe1fb6d","modified":1673559336358},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"d0c470b0f6690aa217e9ada848c5e2e73fb27c6f","modified":1673559336353},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1673559336355},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"bc719473ed5948ab6859449d60b8d36cfc1542b4","modified":1673559336357},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"0bfce9f133f501a9a4837257e3b862b3bbca15be","modified":1673559336358},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1673559336359},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"b0660b2af0ac7d3fda14ca4d9f2c9e79ef06c6f9","modified":1673559336357},{"_id":"node_modules/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1673559336353},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"bd9ea82376cd87df611ea3ae077875c7c595a3df","modified":1673559336344},{"_id":"node_modules/hexo-theme-next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1673559336356},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1673559336358},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1673559336342},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1673559336346},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"ce8477e7fb226525bae5872cd68a1c2c23ad50c8","modified":1673559336346},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"fdc8a0af90035e89c3fcb754a0eb189b8951a2bc","modified":1673559336348},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"d292b78485e8e8055712b0ed6de7cf559c5fbdcd","modified":1673559336343},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1673559336343},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":1673559336354},{"_id":"node_modules/hexo-theme-next/scripts/helpers/navigation.js","hash":"78107021101553c3d23e89290f7530b60cf4aa86","modified":1673559336347},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"7e8268fd5cbd552322b276f52459fd187c2453d2","modified":1673559336358},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-paginator.js","hash":"e86c764b546e4fbb87970cabc4135a56f9ef9fe1","modified":1673559336347},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"fd24abfaba4d91923ddb6aecf0268b216678c8bd","modified":1673559336347},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"226fccbe9c93265e65a300e3cb4bf6f9065cfdd7","modified":1673559336347},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":1673559336347},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"aa37f8e98208177b63e3328d6e53b022c6edf3b2","modified":1673559336354},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1673559336341},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1673559336341},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1673559336341},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"9ed799c329abf830f623689d7e136991256a24ca","modified":1673559336344},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":1673559336344},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1673559336345},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1673559336345},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1673559336346},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1673559336348},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1673559336347},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1673559336348},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1673559336349},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1673559336360},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"04a07a4dbeb00683d783eff26c44492c35b924e0","modified":1673559336362},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"921a58577f411cf4eb5cfd66db0a241f8f88578c","modified":1673559336366},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"dadc81256afb127b77eac6763d5ee0ec9c77f0a3","modified":1673559336367},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1673559336360},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1673559336340},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1673559336360},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1673559336360},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1673559336371},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1673559336371},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1673559336341},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1673559336342},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1673559336342},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1673559336342},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"770d63c26f22705311028a36b52e999cc8a2da82","modified":1673559336346},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1673559336347},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"90fb7f346f777434ea68ab4e4be1d7b999ad63ac","modified":1673559336348},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1673559336348},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"af59257e46d25dda62967c35a65e2efcbd90d3bc","modified":1673559336349},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"8da52a144060db1a0a088ccb2e6cc8376d1fce70","modified":1673559336354},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"c40760b559c516677c8b11a00ba50c011f2079fd","modified":1673559336353},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1673559336354},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"41a8b0cc16f60fa085cb719d07216d86b6bc4bf8","modified":1673559336356},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"06480d8ec5f0b87eafd47f082f07968d7282dd5c","modified":1673559336359},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"89825e75cc45e9709fa6ba89883669eedaff6f46","modified":1673559336352},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"e7f988ecddb2159313699a00827a45eca5622bd4","modified":1673559336359},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1673559336352},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1673559336357},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1673559336359},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"5388b157bba4a40b9312f4a45c6678974ccf0837","modified":1673559336354},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"dd9c4c03e99dfde0dfb8edefcb2c933f2f560efc","modified":1673559336352},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"ee6fc2f111572d3eeab0a2fecbb2d6b3e37ab26b","modified":1673559336356},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1673559336359},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"0f4bc8e257da60f77c0c1738607b2bde55810684","modified":1673559336358},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":1673559336357},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"c1e33b4889f75acc490af3c8bde0ec56c518ff41","modified":1673559336357},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"e0986db00a0201dd3c60570f964829c84ba5bc68","modified":1673559336358},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"e8b8a7c41e9ec612d0c0c73419529d55d1c16256","modified":1673559336358},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-share.njk","hash":"3f28cc4411c0ffc0e41b7970d5ab329c7e46f497","modified":1673559336358},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1673559336356},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1673559336358},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1673559336351},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1673559336354},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"a5b8297c2c383124dd6a56e256ecc0c0dcf489be","modified":1673559336352},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1673559336353},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1673559336354},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/matomo.njk","hash":"4e89648a8ec8194c5823064cbca39c938a799006","modified":1673559336356},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"70342218473a6e6aa9148de06bfffe121afb8548","modified":1673559336359},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"9dc00fcb0a05899f048eace9f9160b78956655d5","modified":1673559336356},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/plausible.njk","hash":"bb664a2327b5cf4745895f63f25f9296e9dea6e2","modified":1673559336357},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/umami.njk","hash":"4ca17a5241c6079d03f6297ba1ae3821c00136ea","modified":1673559336359},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"f900306497b133e8b098bd9f4b96b93d1d96c185","modified":1673559336354},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1673559336359},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1673559336351},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1673559336352},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1673559336352},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/gitter.njk","hash":"f8cc14b7aa949999a1faaeb7855e2f20b59a386d","modified":1673559336353},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1673559336353},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1673559336355},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1673559336359},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1673559336353},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1673559336356},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1673559336355},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1673559336355},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"1ebf658690468ea197bdd0416eb7cfa4bd0b083a","modified":1673559336355},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1673559336353},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1673559336352},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1673559336353},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1673559336356},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1673559336355},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"9ec51eb61f7fee612ffc5252f489003a0fa301fc","modified":1673559336342},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1673559336344},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1673559336356},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1673559336344},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/navigation.js","hash":"dd3562686d95a50375e6fd32e717ccb0d99c1e3d","modified":1673559336347},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"ec996d0673f766167c86df0966e9da1ae036e103","modified":1673559336349},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"64e4024376b51fe81be7ad80235abdf0a83853bd","modified":1673559336349},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1673559336351},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"5798cfc8f63665031dd3e01debed051628cec319","modified":1673559336341},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1673559336357},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1673559336342},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1673559336343},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"19a402a225c31edffc50f202a14e0d582d3db23e","modified":1673559336342},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"a600a98e7436edeb31e291abca359885567df3c9","modified":1673559336343},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1673559336355},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1673559336344},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1673559336345},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1673559336345},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1673559336349},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1673559336364},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"a1418c9dc8c0f1a0ad4ded0f4627c45bf0db1a10","modified":1673559336367},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1673559336367},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"48f4f277946a168d0db1ea02804e85c22ca2c7db","modified":1673559336368},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"9845209c54174a42cbff5b5efd5e2e2fb7e60589","modified":1673559336363},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","hash":"0c490e9ba82efbb8bdf8465e6b537fafd51e1ed7","modified":1673559336346},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1673559336343},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1673559336348},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1673559336348},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"7664491542046df9a3887cf40a06e00c0b4086a9","modified":1673559336362},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"2298e521253b3bf376a2412271bc2a7d305051f3","modified":1673559336365},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1673559336369},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"d0a7c99095f490b0d2ed6b1be43d435960798cec","modified":1673559336363},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1673559336363},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1673559336364},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1673559336366},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1673559336367},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"f4228c759db4a650c8d38745c2edd1dc83c45687","modified":1673559336367},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1673559336370},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"782ee1fc5e669d3ddbfeb82b73ad7fe561f1a4fb","modified":1673559336370},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1673559336365},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"64775c729512b30b144ab5ae9dc4a4dfd4e13f35","modified":1673559336367},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"77b85d4de5ab747e04008ab31200311b29748740","modified":1673559336361},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"fa4fd8f76464e214fb7318f325b13c2b62f4b478","modified":1673559336361},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"fb550935d374e0bdf1097fce187337dc05cad3e1","modified":1673559336361},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"485d23ccb42c0d0c8ead7ea8930dd3e06d79a285","modified":1673559336362},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1673559336366},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"d856127cd7e0a28a88edf0b2eb860ede9c3fdb60","modified":1673559336361},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"7fecfb76420f786d6bf60218a81705bb48fb1d18","modified":1673559336361},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"b7f48be3c43bfa393d62142544a5487a67871713","modified":1673559336361},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"cef9c5f9524fd01b59b0a89e51904b42cbdedc8c","modified":1673559336362},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1673559336362},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1673559336366},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"ac2dc0ce9c775a83ef7132ae957b54539366ac9c","modified":1673559336361},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"9f77d8c07dff6944b577110fb22f8f7c407a107b","modified":1673559336361},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1673559336362},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"91dbf3ca5c3a613d4e30618c120da535bf2d0336","modified":1673559336362},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1673559336362},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1673559336366},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"338a560e89d2d8ca8531af8d4f04f429b244b6d2","modified":1673559336366},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1673559336341},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1673559336344},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1673559336344},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1673559336346},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1673559336342},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1673559336344},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1673559336349},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1673559336342},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1673559336343},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"1e826dea3f684c0515f362dc1352447a1f0eae71","modified":1673559336343},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1673559336344},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1673559336345},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1673559336345},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1673559336349},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1673559336345},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1673559336346},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1673559336340},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1673559336345},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"6e0682bb42170d61b13b786295f45f9c785f8b73","modified":1673559336343},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1673559336345},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"f27d817b0c2138dd3215b1f46af0753f60a008f3","modified":1673559336346},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1673559336348},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/disqusjs.styl","hash":"877a537d5b95beb048142e4fdee6f17e6ef9c7bb","modified":1673559336364},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"8f094c4ac17e2ab45569b12d157747f9c7333c12","modified":1673559336364},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitter.styl","hash":"35104dc6883a61c31e0e368dac8ac2f697be62fe","modified":1673559336364},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"77550e0d3e029b7458e35d8c5ae1fbd612c9673b","modified":1673559336365},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1673559336367},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"e72799ce3f9b79753e365b2f8c8ef6c310668d4a","modified":1673559336369},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1673559336371},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1673559336363},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1673559336363},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1673559336365},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1673559336369},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1673559336370},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"098d4bd034e986fcf7e443eac4fc2193935461b7","modified":1673559336365},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"d757768a58743601d0d84158ba955eb15d4c3c01","modified":1673559336368},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":1673559336368},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"1ecfd64507954810b07a9d21fb5305b5378feda0","modified":1673559336368},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"11497388f124bfbb4001495a67d3629a9f618405","modified":1673559336368},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1673559336368},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"010c901e4ef49a606f8a350efbf09044e76d2ff3","modified":1673559336368},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1673559336368},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"04cf4a69537fc14d3b8904f965d283356853847f","modified":1673559336368},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"40c9839d3288c3b7de0bf38ac2e18f6c8eba6227","modified":1673559336369},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"670fc109b56a010b166b86b616823a1aae97a738","modified":1673559336364},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"9056be572ec1cfa429abb22be4b45a662d5b0fb1","modified":1673559336366},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1673559336363},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1673559336364},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"3f76c73a891bbc10679753e702feba9e8a5ffdd2","modified":1673559336366},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1673559336366},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1673559336366},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1673559336367},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"98d4c20aff0f0fcfe1824017fb06ab21ef0d218e","modified":1673559336367},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1673559336368},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"7a39bcce7274284e87388743db62afc847fe6897","modified":1673559336370},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"0c79462439b1361034a03590cd69a8abb3a678a6","modified":1673559336365},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1673559336363},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1673559336364},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"6e0d0796ef7fbbb62ffdfb448753a850de82c74f","modified":1673559336365},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"b750af2fb833c10c4313b5a4258237161a7833d7","modified":1673559336367},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"a851e9d5aefcd027c95eeb323860b6da70f202d1","modified":1673559336370},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1673559336370},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"da5e88f8debd5ac8d7af5c6ba6240df66104955f","modified":1673559336365},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":1673559336369},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/related-posts.styl","hash":"b05908f04ef95f2d91e6eba89b12411c378d050f","modified":1673559336369},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1673559336369},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"c6a27beb3f741211a14576026f3b4cfc44cc6407","modified":1673559336369},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"b926e368f702f8686aaa2eb98d3d2e533418958c","modified":1673559336369},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"f3506fd0c0303ea365de1c7774d98a1a3f3027cf","modified":1673559336370},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"021a37cf178440cc341940a299d3bca359996c6b","modified":1673559336370},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"9a7c71560fbdc936ad4e736fe15063ea3e8a644b","modified":1673559336370},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1673559336370},{"_id":"source/images/gather_clone_coding/1.png","hash":"8a9cf8d25ab8717447b5a19024456fa693dba5fa","modified":1673559490605},{"_id":"source/images/ocr_result_1.png","hash":"bf9358c62fabaf35d0fc6f69d530bd1b8a606302","modified":1673559490614},{"_id":"source/images/webrtc_layout.png","hash":"f36d6e1685e5ccbc13c73a23464c1884e1a86328","modified":1673559490620},{"_id":"public/search.xml","hash":"3ee2f2188d5fe977605f3ff38e5ec4c52b9f7429","modified":1674398229268},{"_id":"public/categories/index.html","hash":"3a9b409f50291703c22b97f5b1de613d0abb04c2","modified":1674398229268},{"_id":"public/about/index.html","hash":"b7406fe74f4292c0d5aef1e12f3f0e8cfa6ac84a","modified":1674398229268},{"_id":"public/playground/index.html","hash":"f39e9e0991c9ee87584baf05a568909d671ba81d","modified":1674398229268},{"_id":"public/tags/index.html","hash":"79e5a27ec5f3740a06f7057bc015a7385e26c6d0","modified":1674398229268},{"_id":"public/playground/react/render.html","hash":"3738697155517425d1ccf5b9aff7ada3f92f38df","modified":1674398229268},{"_id":"public/2022/09/15/Diary/220915/index.html","hash":"53b0020cc12cbe82bb101741bd75f27db0f3b408","modified":1674398229268},{"_id":"public/2022/09/06/Diary/220906/index.html","hash":"691b768450f36f2ee0f3d193de38a03dd2e12b80","modified":1674398229268},{"_id":"public/2022/04/12/Tech/ReactNative/RN-publishing-hide-scrollbar/index.html","hash":"1c1078f1ff065f75cd8c62545bfc69e599652a9c","modified":1674398229268},{"_id":"public/archives/page/3/index.html","hash":"e4532dfab000ca3398411f777034f7ed56397e2c","modified":1674398229268},{"_id":"public/archives/2022/01/index.html","hash":"a139062a0d4508574a5fe90fa1413f5a0e2db645","modified":1674398229268},{"_id":"public/archives/2022/02/index.html","hash":"4b83018a1be61366c072f6560c2f526f09460344","modified":1674398229268},{"_id":"public/archives/2022/03/index.html","hash":"4bff61d4d5bc70ed8ccfe8df481a7e564cf08d21","modified":1674398229268},{"_id":"public/archives/2022/04/index.html","hash":"e18c8928c837068da2756d8bc8d3db65cd2377f9","modified":1674398229268},{"_id":"public/archives/2022/05/index.html","hash":"647ff7a8bf5322bf5fff1b77c4905f4e31401eaf","modified":1674398229268},{"_id":"public/archives/2022/07/index.html","hash":"ea39b7a59e07233718d8412bb46063792bc5dd96","modified":1674398229268},{"_id":"public/archives/2022/08/index.html","hash":"8c9a4642b360f7814fe82e2e1f54fbb7e4aa822f","modified":1674398229268},{"_id":"public/archives/2022/09/index.html","hash":"17b452fa6a9ed35191bf3df440d30c764cde456e","modified":1674398229268},{"_id":"public/archives/2022/11/index.html","hash":"ede27a049f006b8c6886ebcd4d4f8f92c2261add","modified":1674398229268},{"_id":"public/archives/2023/index.html","hash":"5705455be90a67d7894dd4dc4c2690828bf74e04","modified":1674398229268},{"_id":"public/archives/2023/01/index.html","hash":"7c13725966920cbac58e2583b04296a1c892e3d7","modified":1674398229268},{"_id":"public/categories/Diary/index.html","hash":"a0d910717195c5b955c2e0df1156433c23b57085","modified":1674398229268},{"_id":"public/categories/Tech/page/2/index.html","hash":"295ef1cc7f94b8fa4aa4b12d25ff60dcb1daeb7b","modified":1674398229268},{"_id":"public/categories/Tech/React-Native/index.html","hash":"9fcdb33f225a604e130058936b010caa18efb20c","modified":1674398229268},{"_id":"public/categories/Tech/JavaScript/index.html","hash":"fbd80c5f32659eb5d3e4f15682f7febb6645926b","modified":1674398229268},{"_id":"public/categories/Tech/Spring-Boot/index.html","hash":"e7296e59fb151ed9df3883adb6ff263f11bfcb52","modified":1674398229268},{"_id":"public/categories/개발일지/index.html","hash":"9fe84cb2b52df940dfe3fbd99a834f09672b71aa","modified":1674398229268},{"_id":"public/categories/Tech/MLOps/index.html","hash":"8cc9355ad3800b34206f3be8c1e83319dde10400","modified":1674398229268},{"_id":"public/categories/Tech/OCR/index.html","hash":"a75f99e9225dd3c8cb4e287b2ed5645f27510899","modified":1674398229268},{"_id":"public/categories/개발일지/블로그/index.html","hash":"0c4dc291ac64e94bbed5eeb2fb6e885aff39ab2f","modified":1674398229268},{"_id":"public/categories/개발일지/개더타운-클론코딩/index.html","hash":"748909abfbda887bbcc1c647bf6efffcd452a0c8","modified":1674398229268},{"_id":"public/tags/Diary/index.html","hash":"8e45ac99851e5f2ce63ddf04ed00c0180da88c81","modified":1674398229268},{"_id":"public/tags/JavaScript/index.html","hash":"865a4e9148c502542a488f8016ac73b926ba806c","modified":1674398229268},{"_id":"public/tags/Spring-Boot/index.html","hash":"324a98786cbf0bac57c8cb05c9f26b834e04acc9","modified":1674398229268},{"_id":"public/tags/MySQL/index.html","hash":"576698d7c09a3d5806ec84184e71a7f3631328e5","modified":1674398229268},{"_id":"public/tags/JPA/index.html","hash":"5d31e150a0b2aaf7a19aef439734475c0790275c","modified":1674398229268},{"_id":"public/tags/Flyway/index.html","hash":"20b434d56fda67d8c4608b3e5901de4aac8cc151","modified":1674398229268},{"_id":"public/tags/Valid/index.html","hash":"df5a286e8b0977ac47ede9dbbee9daae123f145f","modified":1674398229268},{"_id":"public/tags/Spring/index.html","hash":"ff94c3c60a71bbcf20bcf4242ca2dec1398a5a47","modified":1674398229268},{"_id":"public/tags/Annotation/index.html","hash":"47b29e24364cde914b218f681e8fba6c5ee22c3e","modified":1674398229268},{"_id":"public/tags/MLOps/index.html","hash":"93278061082f4680fac0d9152f4a575d29848c45","modified":1674398229268},{"_id":"public/tags/AI/index.html","hash":"1b8f5756157e8398576fee6d9f9fe66a5f87890b","modified":1674398229268},{"_id":"public/tags/Cloud/index.html","hash":"b6a61e26bfe5e7bca0b93d6823cf1f0ff4254fea","modified":1674398229268},{"_id":"public/tags/javascript/index.html","hash":"bbcc3e8ae43b3af6ee6d67dbeeb1a183c97cd38f","modified":1674398229268},{"_id":"public/tags/React-Native/index.html","hash":"f1f2d36f903a20ffc59875459c35a4cd19c1c9d6","modified":1674398229268},{"_id":"public/tags/Hexo/index.html","hash":"496e659fad7de471388834eae0f807c463404c34","modified":1674398229268},{"_id":"public/tags/React/index.html","hash":"5f07627ed8127e18b13d8bf9abfffb1f55c83073","modified":1674398229268},{"_id":"public/tags/UI-UX/index.html","hash":"2b57a946a5c3d26b4c3795456fbe79006e71ecf3","modified":1674398229268},{"_id":"public/tags/NexT/index.html","hash":"04ed11308f7150c665c24abc049af4cedf2e64cb","modified":1674398229268},{"_id":"public/tags/토이프로젝트/index.html","hash":"fa072971132aec3b552546f96910fd6e991c7252","modified":1674398229268},{"_id":"public/tags/WebRTC/index.html","hash":"21eac2587f273c5dcea0584f7201ffff3f14fe6c","modified":1674398229268},{"_id":"public/tags/Phaser/index.html","hash":"4d2bdb9aed8ce8bbffae0729cf58ea462557b4d7","modified":1674398229268},{"_id":"public/playground/design/icons.html","hash":"7f002a2008770e9643c039dff91bc79c8887af66","modified":1674398229268},{"_id":"public/2023/01/22/Diary/230122/index.html","hash":"daaad6e0fbbc359b5d9881890549934137ac6773","modified":1674398229268},{"_id":"public/2023/01/18/Diary/230113/index.html","hash":"9ad8ea6dd5a5cea2ae07e75aeb002b3bd15fafab","modified":1674398229268},{"_id":"public/2022/11/15/Tech/SpringBoot/setting-JPA/index.html","hash":"b91c07ccdcc1d21649888080f14adf97d3cf41c6","modified":1674398229268},{"_id":"public/2022/08/28/ToyProjects/Gather/gather-clonecoding-4/index.html","hash":"575cd100473bd90b0d100fda7738bd4505a4dfe4","modified":1674398229268},{"_id":"public/2022/08/26/Diary/220826/index.html","hash":"55c4b9db9e1e20613cc62a8e768bf47394764d40","modified":1674398229268},{"_id":"public/2022/08/25/ToyProjects/Gather/gather-clonecoding-3/index.html","hash":"de36c4a3f16456a3fccff480ab4d486418b5043c","modified":1674398229268},{"_id":"public/2022/07/28/ToyProjects/Gather/gather-clonecoding-2/index.html","hash":"dd26114d5a6af27693861db62a4a8052251ab33f","modified":1674398229268},{"_id":"public/2022/07/20/ToyProjects/Gather/gather-clonecoding-1/index.html","hash":"fc23197cce898a1378fda5fa9b5e0b21c04f6a09","modified":1674398229268},{"_id":"public/2022/05/22/Tech/AI_MLOps/ocr/index.html","hash":"8547ceb6f736152ae249dbca3eefee45bc659492","modified":1674398229268},{"_id":"public/2022/04/10/Tech/ReactNative/RN-publishing-scrollview-sticky/index.html","hash":"d4c3f53c1ef98b66ef169424cc59e6dc8cbfe74d","modified":1674398229268},{"_id":"public/2022/04/08/Tech/ReactNative/RN-ios-image-not-showing/index.html","hash":"f08f023200e2cff7f6bf31a84816dac24366a42a","modified":1674398229268},{"_id":"public/2022/04/08/Tech/ReactNative/RN-publishing-align-center/index.html","hash":"a59a84f6b51ac03b01fbfa49eea8bd8ee8617ca4","modified":1674398229268},{"_id":"public/2022/04/08/Tech/ReactNative/RN-publishing-branch-os/index.html","hash":"63993e8b8078d7e1be939187793f783e5fea8379","modified":1674398229268},{"_id":"public/2022/04/05/Tech/JavaScript/asynchronous-programming/index.html","hash":"44be8f2c9ed0ccabd7e76370aae520ca1d916424","modified":1674398229268},{"_id":"public/2022/03/06/Tech/AI_MLOps/ai-csp/index.html","hash":"4e4e3412370d077db8081c7131328b342a992d53","modified":1674398229268},{"_id":"public/2022/02/18/Tech/SpringBoot/spring-validation/index.html","hash":"c2015effd6ffa25445b369113ee7323aa29c02d8","modified":1674398229268},{"_id":"public/2022/01/13/Tech/ReactNative/RN-setup/index.html","hash":"c3160961dc75c6f138fc712243eed9a3a72e0b98","modified":1674398229268},{"_id":"public/2022/01/22/ToyProjects/Blog/Resume/index.html","hash":"337cda4638036130186cb50175860f35fb7218ad","modified":1674398229268},{"_id":"public/2022/01/12/ToyProjects/Blog/hexo/index.html","hash":"0e4716d35aed6c2c640c377971e4c42a3da4d313","modified":1674398229268},{"_id":"public/archives/index.html","hash":"17efd1bc398716722fff06c350e9f1ccecd1f441","modified":1674398229268},{"_id":"public/archives/page/2/index.html","hash":"a29d61aea3b6e8604a13e8ae421fcd376539029b","modified":1674398229268},{"_id":"public/archives/2022/index.html","hash":"85ae4679574777f70cb0f6dcf30a84c34ce2a887","modified":1674398229268},{"_id":"public/archives/2022/page/2/index.html","hash":"d80ffec0625220d58750bd83102e153e8c0288c0","modified":1674398229268},{"_id":"public/categories/Tech/index.html","hash":"d6e284de192cc7777b2a61dd9651c6f9858d3494","modified":1674398229268},{"_id":"public/index.html","hash":"ac502cce655cca0d9cfb765ee5559fc89c1f1989","modified":1674398229268},{"_id":"public/page/2/index.html","hash":"66da21988ae1f541480b6fc534ab0243875dcb3f","modified":1674398229268},{"_id":"public/page/3/index.html","hash":"bc7cc55864a6004c6f704d6371e1721ddccb2086","modified":1674398229268},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1674398229268},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1674398229268},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1674398229268},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1674398229268},{"_id":"public/images/logo.svg","hash":"099e11ab995a2c8981427a85476d082609848c77","modified":1674398229268},{"_id":"public/images/profile.png","hash":"8d17c501b982e391c9334a162f2d494540012ebe","modified":1674398229268},{"_id":"public/images/gather_clone_coding/2.png","hash":"aab29ff538d1c214d9e77b8e456f8c73ae563334","modified":1674398229268},{"_id":"public/images/gather_clone_coding/3.png","hash":"07239512b4c17c7822f606fd469d66bf89a19dac","modified":1674398229268},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1674398229268},{"_id":"public/css/noscript.css","hash":"4cd5301e478e0e0d4b176740ec314087ec5cb707","modified":1674398229268},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1674398229268},{"_id":"public/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1674398229268},{"_id":"public/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1674398229268},{"_id":"public/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1674398229268},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1674398229268},{"_id":"public/css/main.css","hash":"c5e1069ad765c94630be591d4ea7f8c5e82590a5","modified":1674398229268},{"_id":"public/js/utils.js","hash":"af59257e46d25dda62967c35a65e2efcbd90d3bc","modified":1674398229268},{"_id":"public/images/gather_clone_coding/5.png","hash":"1d3ce9e9d12eb6727589a85224f15ed96e8996af","modified":1674398229268},{"_id":"public/images/gather_clone_coding/4.png","hash":"84bb55acacd4815c06d547a0514d91d7e96acc19","modified":1674398229268},{"_id":"public/images/gather_clone_coding/1.png","hash":"8a9cf8d25ab8717447b5a19024456fa693dba5fa","modified":1674398229268},{"_id":"public/images/ocr_result_1.png","hash":"bf9358c62fabaf35d0fc6f69d530bd1b8a606302","modified":1674398229268},{"_id":"public/images/webrtc_layout.png","hash":"f36d6e1685e5ccbc13c73a23464c1884e1a86328","modified":1674398229268}],"Category":[{"name":"Flutter","_id":"cld7hh2rp0006tqwe2g8d7kho"},{"name":"Diary","_id":"cld7hh2rs000etqwedtjq71k6"},{"name":"Tech","_id":"cld7hh2s00013tqwegh0q9iad"},{"name":"React Native","parent":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2s7001ytqweenmy9hmw"},{"name":"JavaScript","parent":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2s70021tqwe0psfacbs"},{"name":"Spring Boot","parent":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2s9002etqwe0fbfbnvo"},{"name":"개발일지","_id":"cld7hh2sa002otqwe3pmvc6je"},{"name":"MLOps","parent":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2sb0036tqwe8od31w54"},{"name":"OCR","parent":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2sc003itqwe9w4q4bbt"},{"name":"블로그","parent":"cld7hh2sa002otqwe3pmvc6je","_id":"cld7hh2se003ttqwe78xahb7t"},{"name":"개더타운 클론코딩","parent":"cld7hh2sa002otqwe3pmvc6je","_id":"cld7hh2sf0044tqweeamwaiuk"}],"Data":[{"_id":"head","data":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n"},{"_id":"styles","data":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n"},{"_id":"variables","data":""}],"Page":[{"title":"카테고리","date":"2022-01-12T03:46:58.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 카테고리\ndate: 2022-01-12 12:46:58\ntype: categories\n---\n","updated":"2023-01-12T21:38:10.602Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cld7hh2rj0000tqwecths13hw","content":"","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":""},{"title":"","date":"2022-01-12T03:46:34.000Z","type":"about","_content":"## Gayoung Hyeon ✌️ ## \n\n재미있어 보이는 것들을 공부합니다.\n일기처럼 개발일지를 씁니다. 그냥 일기도 씁니다.\n\n[📝 공부했던 것들](/categories/Tech/)\n[👩‍🔬 일기같은 개발일지](/categories/%EA%B0%9C%EB%B0%9C%EC%9D%BC%EC%A7%80/)\n[📔 그냥 일기](/categories/Diary/)\n","source":"about/index.md","raw":"---\ntitle: \ndate: 2022-01-12 12:46:34\ntype: about\n---\n## Gayoung Hyeon ✌️ ## \n\n재미있어 보이는 것들을 공부합니다.\n일기처럼 개발일지를 씁니다. 그냥 일기도 씁니다.\n\n[📝 공부했던 것들](/categories/Tech/)\n[👩‍🔬 일기같은 개발일지](/categories/%EA%B0%9C%EB%B0%9C%EC%9D%BC%EC%A7%80/)\n[📔 그냥 일기](/categories/Diary/)\n","updated":"2023-01-22T14:10:27.932Z","path":"about/index.html","comments":1,"layout":"page","_id":"cld7hh2rm0002tqwe6sdqh73r","content":"<h2 id=\"Gayoung-Hyeon-✌️\"><a href=\"#Gayoung-Hyeon-✌️\" class=\"headerlink\" title=\"Gayoung Hyeon ✌️\"></a>Gayoung Hyeon ✌️</h2><p>재미있어 보이는 것들을 공부합니다.<br>일기처럼 개발일지를 씁니다. 그냥 일기도 씁니다.</p>\n<p><a href=\"/categories/Tech/\">📝 공부했던 것들</a><br><a href=\"/categories/%EA%B0%9C%EB%B0%9C%EC%9D%BC%EC%A7%80/\">👩‍🔬 일기같은 개발일지</a><br><a href=\"/categories/Diary/\">📔 그냥 일기</a></p>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h2 id=\"Gayoung-Hyeon-✌️\"><a href=\"#Gayoung-Hyeon-✌️\" class=\"headerlink\" title=\"Gayoung Hyeon ✌️\"></a>Gayoung Hyeon ✌️</h2><p>재미있어 보이는 것들을 공부합니다.<br>일기처럼 개발일지를 씁니다. 그냥 일기도 씁니다.</p>\n<p><a href=\"/categories/Tech/\">📝 공부했던 것들</a><br><a href=\"/categories/%EA%B0%9C%EB%B0%9C%EC%9D%BC%EC%A7%80/\">👩‍🔬 일기같은 개발일지</a><br><a href=\"/categories/Diary/\">📔 그냥 일기</a></p>\n"},{"title":"놀이터","date":"2022-01-12T03:46:58.000Z","_content":"\n# React\n\n- [렌더링 최적화](react/render.html)\n\n# Design\n\n- [아이콘셋](design/icons.html)\n","source":"playground/index.md","raw":"---\ntitle: 놀이터\ndate: 2022-01-12 12:46:58\n---\n\n# React\n\n- [렌더링 최적화](react/render.html)\n\n# Design\n\n- [아이콘셋](design/icons.html)\n","updated":"2023-01-12T21:38:10.620Z","path":"playground/index.html","comments":1,"layout":"page","_id":"cld7hh2ro0004tqwe5lolazdr","content":"<h1 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h1><ul>\n<li><a href=\"react/render.html\">렌더링 최적화</a></li>\n</ul>\n<h1 id=\"Design\"><a href=\"#Design\" class=\"headerlink\" title=\"Design\"></a>Design</h1><ul>\n<li><a href=\"design/icons.html\">아이콘셋</a></li>\n</ul>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h1><ul>\n<li><a href=\"react/render.html\">렌더링 최적화</a></li>\n</ul>\n<h1 id=\"Design\"><a href=\"#Design\" class=\"headerlink\" title=\"Design\"></a>Design</h1><ul>\n<li><a href=\"design/icons.html\">아이콘셋</a></li>\n</ul>\n"},{"title":"태그","date":"2022-01-12T03:46:28.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 태그\ndate: 2022-01-12 12:46:28\ntype: tags\n---\n","updated":"2023-01-12T21:38:10.621Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cld7hh2rq0008tqweep0g0h8e","content":"","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":""},{"_content":"<div>\n  <button>HI</button>\n</div>\n","source":"playground/react/render.html","raw":"<div>\n  <button>HI</button>\n</div>\n","date":"2023-01-12T21:38:10.621Z","updated":"2023-01-12T21:38:10.621Z","path":"playground/react/render.html","title":"","comments":1,"layout":"page","_id":"cld7hh2rr000atqwehynu32nd","content":"<div>\n  <button>HI</button>\n</div>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<div>\n  <button>HI</button>\n</div>\n"},{"_content":"<h1>놀이터 THEME</h1>\n<div>\n  <b>Reference : </b>\n  <b>날씨</b>\n  <div>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M19.1985 25.2591C23.8182 18.7886 29.6564 16 37.3066 16C44.9568 16 50.5126 18.8841 55.0449 25.2591C57.8787 29.245 58.2261 32.785 59.11 37.1108C60.9817 46.2696 54.2118 53.5682 45.4367 56.7401C40.2779 58.6048 36.6741 58.2244 31.3938 56.7401C24.2514 54.7324 18.5072 52.3381 16.2423 45.2588C14.039 38.3723 14.6142 31.6803 19.1985 25.2591Z\"\n        fill=\"#FCDD3D\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M27.1218 14.8992C31.108 9.379 36.1456 7 42.7467 7C49.3478 7 54.1417 9.46052 58.0525 14.8992C60.4977 18.2997 60.7974 21.3198 61.5602 25.0102C63.1751 32.8238 57.3336 39.0505 49.7619 41.7565C45.3105 43.3474 42.2009 43.0228 37.6447 41.7565C31.4818 40.0437 26.5253 38.0011 24.571 31.9615C22.6699 26.0864 23.1661 20.3773 27.1218 14.8992Z\"\n        fill=\"#FCDD3D\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M30.2178 21.9768C27.0259 20.9981 24.8052 20.798 21.6575 21.9768C19.0454 22.9551 17.404 24.2374 16.4694 26.8314C15.5111 29.4912 17.507 33.9856 17.507 33.9856C17.507 33.9856 8.72893 33.4249 6.87145 37.3072C5.79181 39.5637 5.63003 41.5205 6.87145 43.6948C8.14037 45.9173 12.5783 47.0164 12.5783 47.0164H18.5446C18.5446 47.0164 18.394 50.3271 19.5823 51.871C21.504 54.3678 25.7821 54.6798 28.9208 54.1706C31.6927 53.7208 31.9186 53.2254 34.3683 51.871C36.3535 50.7735 39.0376 47.0164 39.0376 47.0164C39.0376 47.0164 42.3464 50.4534 45.0039 51.871C49.0045 54.0051 51.9638 55.0853 56.4177 54.1706C61.0987 53.2091 64.8537 50.7354 66.2751 47.0164C67.7331 43.2014 66.2777 38.6887 62.384 37.3072C59.7669 36.3786 55.3801 38.5847 55.3801 38.5847C55.3801 38.5847 55.9822 35.6809 55.3801 33.9856C54.4292 31.3084 52.42 30.2379 49.6732 29.3865C46.0152 28.2526 40.0752 31.4305 40.0752 31.4305C40.0752 31.4305 38.3332 27.2936 36.1841 25.5539C34.2213 23.965 32.8222 22.7755 30.2178 21.9768Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M25.0323 59.9824V63.0526V66M42.3871 60.228V66M51 59V61.7017V64.4035M16 55.614V59.9824M16 65V67.5M34 57.5V64.4035M34 69V70.5M59 57.5V66\"\n        stroke=\"#5A9CFF\"\n        stroke-width=\"3\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M36.5557 9.90793C33.6165 8.81195 31.5715 8.58795 28.673 9.90791C26.2676 11.0033 24.7562 12.4391 23.8955 15.3439C23.0131 18.3221 24.851 23.3548 24.851 23.3548C24.851 23.3548 16.7677 22.727 15.0573 27.0741C14.0631 29.6009 13.9141 31.7921 15.0573 34.2267C16.2257 36.7153 20.3124 37.9461 20.3124 37.9461H25.8065C25.8065 37.9461 25.6678 41.6533 26.762 43.382C28.5316 46.1779 32.4711 46.5272 35.3614 45.957C37.9138 45.4534 38.1219 44.8986 40.3777 43.382C42.2057 42.1531 44.6774 37.9461 44.6774 37.9461C44.6774 37.9461 47.7243 41.7947 50.1714 43.382C53.8554 45.7717 56.5805 46.9813 60.6818 45.957C64.9923 44.8804 68.4501 42.1104 69.7589 37.9461C71.1016 33.6742 69.7613 28.6211 66.1758 27.0741C63.7659 26.0344 59.7263 28.5047 59.7263 28.5047C59.7263 28.5047 60.2808 25.2531 59.7263 23.3548C58.8507 20.3569 57.0005 19.1583 54.4711 18.2049C51.1027 16.9352 45.6329 20.4937 45.6329 20.4937C45.6329 20.4937 44.0287 15.8614 42.0498 13.9134C40.2423 12.1341 38.954 10.8022 36.5557 9.90793Z\"\n        fill=\"#9DBAD1\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M28.3009 19.1496C25.3617 18.0717 23.3167 17.8514 20.4182 19.1495C18.0128 20.2268 16.5014 21.6389 15.6407 24.4956C14.7583 27.4246 16.5962 32.3741 16.5962 32.3741C16.5962 32.3741 8.51293 31.7567 6.80247 36.0319C5.80829 38.5169 5.65932 40.6719 6.80247 43.0663C7.97096 45.5138 12.0577 46.7241 12.0577 46.7241H17.5517C17.5517 46.7241 17.413 50.37 18.5072 52.0702C20.2768 54.8198 24.2163 55.1634 27.1066 54.6026C29.6591 54.1073 29.8671 53.5617 32.1229 52.0702C33.9509 50.8616 36.4226 46.7241 36.4226 46.7241C36.4226 46.7241 39.4695 50.5091 41.9166 52.0702C45.6006 54.4204 48.3257 55.61 52.427 54.6026C56.7375 53.5438 60.1953 50.8196 61.5041 46.7241C62.8468 42.5229 61.5065 37.5533 57.9211 36.0319C55.5111 35.0094 51.4715 37.4388 51.4715 37.4388C51.4715 37.4388 52.026 34.2411 51.4715 32.3741C50.5959 29.4258 48.7457 28.247 46.2163 27.3094C42.8479 26.0607 37.3781 29.5604 37.3781 29.5604C37.3781 29.5604 35.7739 25.0046 33.795 23.0888C31.9875 21.339 30.6992 20.029 28.3009 19.1496Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M25.0323 59.9824V63.0526V66M42.3871 60.228V66M51 59V61.7017V64.4035M16 55.614V59.9824M16 65V67.5M34 57.5V64.4035M34 69V70.5M59 57.5V66\"\n        stroke=\"#5A9CFF\"\n        stroke-width=\"3\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M27.4018 22.7784C31.3212 17.3426 36.2743 15 42.7648 15C49.2554 15 53.9689 17.4229 57.8142 22.7784C60.2184 26.1268 60.5131 29.1007 61.2631 32.7347C62.851 40.4288 57.1073 46.5602 49.6625 49.2248C45.2857 50.7914 42.2283 50.4717 37.7484 49.2248C31.6887 47.5382 26.8153 45.5269 24.8937 39.5797C23.0244 33.7945 23.5124 28.1726 27.4018 22.7784Z\"\n        fill=\"#FCDD3D\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M30.6246 29.4319C27.5109 28.4665 25.3445 28.2692 22.274 29.4319C19.7258 30.3968 18.1247 31.6617 17.213 34.2204C16.2782 36.8439 18.2252 41.2771 18.2252 41.2771C18.2252 41.2771 9.66209 40.7241 7.8501 44.5535C6.79691 46.7793 6.6391 48.7095 7.8501 50.8541C9.08794 53.0463 13.4172 54.1305 13.4172 54.1305H19.2374C19.2374 54.1305 19.0904 57.3961 20.2496 58.919C22.1242 61.3818 26.2975 61.6895 29.3594 61.1872C32.0634 60.7436 32.2837 60.2549 34.6734 58.919C36.61 57.8364 39.2284 54.1305 39.2284 54.1305C39.2284 54.1305 42.4561 57.5207 45.0485 58.919C48.9511 61.024 51.838 62.0895 56.1827 61.1872C60.7491 60.2389 64.4121 57.7988 65.7986 54.1305C67.221 50.3674 65.8012 45.9162 62.0029 44.5535C59.4499 43.6376 55.1705 45.8136 55.1705 45.8136C55.1705 45.8136 55.7579 42.9494 55.1705 41.2771C54.243 38.6364 52.2829 37.5805 49.6034 36.7407C46.035 35.6222 40.2406 38.7569 40.2406 38.7569C40.2406 38.7569 38.5412 34.6763 36.4448 32.9603C34.53 31.393 33.1652 30.2197 30.6246 29.4319Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M35.9583 13.8226C33.1727 12.8296 31.2346 12.6267 28.4876 13.8225C26.208 14.8149 24.7756 16.1158 23.96 18.7474C23.1237 21.4456 24.8655 26.005 24.8655 26.005C24.8655 26.005 17.2048 25.4363 15.5838 29.3747C14.6416 31.6638 14.5004 33.649 15.5838 35.8547C16.6912 38.1094 20.5642 39.2244 20.5642 39.2244H25.771C25.771 39.2244 25.6396 42.583 26.6766 44.1492C28.3536 46.6822 32.0872 46.9986 34.8264 46.482C37.2454 46.0258 37.4426 45.5232 39.5804 44.1492C41.3129 43.0358 43.6553 39.2244 43.6553 39.2244C43.6553 39.2244 46.543 42.7111 48.8622 44.1492C52.3535 46.3142 54.9361 47.41 58.823 46.482C62.9082 45.5067 66.1852 42.9971 67.4256 39.2244C68.6981 35.3541 67.4279 30.7762 64.0299 29.3747C61.7459 28.4327 57.9175 30.6707 57.9175 30.6707C57.9175 30.6707 58.443 27.7249 57.9175 26.005C57.0877 23.2891 55.3342 22.2032 52.9371 21.3394C49.7447 20.1891 44.5609 23.413 44.5609 23.413C44.5609 23.413 43.0406 19.2162 41.1651 17.4514C39.4521 15.8394 38.2312 14.6327 35.9583 13.8226Z\"\n        fill=\"#9DBAD1\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M28.135 23.1998C25.3494 22.2253 23.4114 22.0261 20.6644 23.1998C18.3848 24.1738 16.9524 25.4506 16.1367 28.0335C15.3004 30.6817 17.0423 35.1567 17.0423 35.1567C17.0423 35.1567 9.38155 34.5985 7.76052 38.464C6.81831 40.7107 6.67713 42.6591 7.76052 44.824C8.86792 47.0369 12.741 48.1312 12.741 48.1312H17.9478C17.9478 48.1312 17.8163 51.4276 18.8533 52.9649C20.5304 55.4509 24.264 55.7615 27.0031 55.2545C29.4222 54.8067 29.6193 54.3134 31.7572 52.9649C33.4896 51.8721 35.8321 48.1312 35.8321 48.1312C35.8321 48.1312 38.7197 51.5534 41.0389 52.9649C44.5303 55.0898 47.1129 56.1653 50.9998 55.2545C55.085 54.2972 58.362 51.8341 59.6024 48.1312C60.8749 44.3327 59.6047 39.8395 56.2066 38.464C53.9227 37.5394 50.0943 39.736 50.0943 39.736C50.0943 39.736 50.6197 36.8447 50.0943 35.1567C49.2645 32.4911 47.511 31.4253 45.1138 30.5775C41.9215 29.4485 36.7376 32.6127 36.7376 32.6127C36.7376 32.6127 35.2174 28.4936 33.3419 26.7615C31.6289 25.1794 30.4079 23.995 28.135 23.1998Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M35.7106 68.7299L39.4864 55.3714H33.8228L39.4864 42.4304H47.793L41.7518 51.6143H46.2827L35.7106 68.7299Z\"\n        fill=\"#FCDD3D\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M29.7984 17.9974C26.3981 16.7934 24.0324 16.5474 20.6794 17.9973C17.8967 19.2007 16.1483 20.778 15.1527 23.9688C14.1319 27.2405 16.258 32.769 16.258 32.769C16.258 32.769 6.90703 32.0793 4.92832 36.8547C3.77823 39.6304 3.60589 42.0374 4.92832 44.712C6.28006 47.4457 11.0077 48.7977 11.0077 48.7977H17.3634C17.3634 48.7977 17.2029 52.8701 18.4687 54.7692C20.5158 57.8405 25.0732 58.2242 28.4167 57.5978C31.3695 57.0446 31.6101 56.4352 34.2197 54.7692C36.3344 53.4192 39.1938 48.7977 39.1938 48.7977C39.1938 48.7977 42.7185 53.0255 45.5494 54.7692C49.8111 57.3943 52.9636 58.723 57.7081 57.5978C62.6946 56.4152 66.6947 53.3723 68.2088 48.7977C69.7621 44.105 68.2116 38.5541 64.0638 36.8547C61.2759 35.7125 56.6028 38.4262 56.6028 38.4262C56.6028 38.4262 57.2442 34.8543 56.6028 32.769C55.5899 29.4758 53.4495 28.1591 50.5234 27.1117C46.6267 25.717 40.2991 29.6261 40.2991 29.6261C40.2991 29.6261 38.4434 24.5373 36.1541 22.3974C34.0631 20.4429 32.5727 18.9797 29.7984 17.9974Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M36.0188 13.9203C32.969 12.8094 30.8472 12.5823 27.8397 13.9202C25.344 15.0305 23.7758 16.4859 22.8828 19.4301C21.9672 22.4488 23.8742 27.5499 23.8742 27.5499C23.8742 27.5499 15.4871 26.9136 13.7123 31.3198C12.6808 33.8809 12.5262 36.1019 13.7123 38.5696C14.9247 41.0921 19.165 42.3396 19.165 42.3396H24.8656C24.8656 42.3396 24.7216 46.0971 25.857 47.8494C27.693 50.6833 31.7806 51.0373 34.7795 50.4593C37.4279 49.9489 37.6438 49.3866 39.9844 47.8494C41.8811 46.6037 44.4457 42.3396 44.4457 42.3396C44.4457 42.3396 47.6071 46.2405 50.1462 47.8494C53.9686 50.2716 56.7961 51.4976 61.0516 50.4593C65.5241 49.3682 69.1118 46.5605 70.4698 42.3396C71.863 38.0096 70.4723 32.8878 66.7521 31.3198C64.2516 30.2659 60.0602 32.7698 60.0602 32.7698C60.0602 32.7698 60.6355 29.4741 60.0602 27.5499C59.1517 24.5113 57.2319 23.2964 54.6075 22.33C51.1124 21.0431 45.4371 24.65 45.4371 24.65C45.4371 24.65 43.7726 19.9546 41.7193 17.9801C39.8439 16.1767 38.5071 14.8267 36.0188 13.9203Z\"\n        fill=\"#9DBAD1\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M27.1391 24.97C24.0893 23.8862 21.9675 23.6647 18.96 24.97C16.4643 26.0532 14.8961 27.4731 14.0031 30.3455C13.0875 33.2906 14.9945 38.2673 14.9945 38.2673C14.9945 38.2673 6.60737 37.6464 4.83263 41.9452C3.80109 44.4438 3.64651 46.6106 4.83263 49.0182C6.04503 51.4791 10.2853 52.6962 10.2853 52.6962H15.9859C15.9859 52.6962 15.8419 56.3621 16.9773 58.0717C18.8133 60.8364 22.9009 61.1818 25.8998 60.6179C28.5482 60.12 28.7641 59.5714 31.1047 58.0717C33.0014 56.8563 35.566 52.6962 35.566 52.6962C35.566 52.6962 38.7274 56.5019 41.2665 58.0717C45.0889 60.4347 47.9164 61.6308 52.1719 60.6179C56.6444 59.5534 60.2321 56.8142 61.5901 52.6962C62.9833 48.4718 61.5926 43.475 57.8724 41.9452C55.3719 40.917 51.1805 43.3598 51.1805 43.3598C51.1805 43.3598 51.7558 40.1445 51.1805 38.2673C50.272 35.3028 48.3522 34.1175 45.7278 33.1747C42.2327 31.9191 36.5574 35.4381 36.5574 35.4381C36.5574 35.4381 34.8929 30.8572 32.8396 28.9309C30.9642 27.1715 29.6274 25.8543 27.1391 24.97Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M20.5034 25.9951C20.5034 28.9441 24.4056 33.6719 26.7597 35.5891C23.6315 38.2358 22.6572 38.8006 20.5034 41.8749C18.4757 44.7691 17.7572 47.0105 18.0703 50.4764C18.4084 54.2182 19.6454 56.5768 22.5888 59.0779C26.2481 62.1874 29.8757 63.219 34.7539 63.7095C40.5724 64.2947 44.9079 64.2584 49.6997 61.0629C53.153 58.76 54.5704 56.3513 55.6085 52.4614C56.6825 48.4368 56.6161 45.5401 54.5658 41.8749C51.9824 37.2566 45.5287 34.5966 45.5287 34.5966C45.5287 34.5966 48.331 31.8647 49.6997 28.6417C50.8697 25.8868 50.7103 23.8442 49.6997 21.0327C47.8351 15.845 43.2755 13.5434 37.5346 13.0928C32.0814 12.6648 26.1475 13.6173 23.2839 18.0552C22.5888 19.1324 20.5034 20.7019 20.5034 25.9951Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M30.1852 22.4597V24.1048M41.5 23.2823L41.9352 23.6935M26.7597 35.5891C24.4056 33.6719 20.5034 28.9441 20.5034 25.9951C20.5034 20.7019 22.5888 19.1324 23.2839 18.0552C26.1475 13.6173 32.0814 12.6648 37.5346 13.0928C43.2755 13.5434 47.8351 15.845 49.6997 21.0327C50.7103 23.8442 50.8697 25.8868 49.6997 28.6417C48.331 31.8647 45.5287 34.5966 45.5287 34.5966C45.5287 34.5966 51.9824 37.2566 54.5658 41.8749C56.6161 45.5401 56.6825 48.4368 55.6085 52.4614C54.5704 56.3513 53.1531 58.76 49.6997 61.0629C44.9079 64.2584 40.5724 64.2947 34.7539 63.7095C29.8757 63.219 26.2481 62.1874 22.5888 59.0779C19.6454 56.5768 18.4084 54.2182 18.0703 50.4764C17.7572 47.0105 18.4757 44.7691 20.5034 41.8749C22.6572 38.8006 23.6315 38.2358 26.7597 35.5891Z\"\n        stroke=\"black\"\n        stroke-width=\"6\"\n        stroke-linecap=\"round\"\n      />\n      <path\n        d=\"M46.2871 33.1532L61.0834 29.0403M46.2871 33.1532L65 37.6774M46.2871 33.1532L48.8982 35.2097L21.9906 36.2632V33.579L46.2871 33.1532Z\"\n        stroke=\"#E94848\"\n        stroke-width=\"6\"\n        stroke-linecap=\"round\"\n      />\n    </svg>\n\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14 26.3651C14 26.3651 19.8053 17.502 25.2316 16.1721C32.8256 14.3108 38.9161 28.1639 46.6737 28.1639C59.4368 28.1639 62.5 18.5704 62.5 18.5704M14 40.7553C14 40.7553 19.8053 31.8922 25.2316 30.5623C32.8256 28.701 38.9161 42.5541 46.6737 42.5541C59.4368 42.5541 62.5 32.9606 62.5 32.9606M14 56.3447C14 56.3447 19.8053 47.4816 25.2316 46.1516C32.8256 44.2904 38.9161 58.1435 46.6737 58.1435C59.4368 58.1435 62.5 48.55 62.5 48.55\"\n        stroke=\"#9DBAD1\"\n        stroke-width=\"6\"\n        stroke-linecap=\"round\"\n      />\n    </svg>\n  </div>\n  <b>감정</b>\n  <div>\n    <svg\n      width=\"383\"\n      height=\"75\"\n      viewBox=\"0 0 383 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M19.3476 25.2591C24.1312 18.7886 30.1767 16 38.0984 16C46.0202 16 51.7732 18.8841 56.4664 25.2591C59.4008 29.245 59.7605 32.785 60.6759 37.1108C62.6139 46.2696 56.0865 55.3281 47 58.5C41.6581 60.3647 35.9678 59.9843 30.5 58.5C23.1041 56.4923 18.6317 52.3381 16.2864 45.2588C14.0049 38.3723 14.6005 31.6803 19.3476 25.2591Z\"\n        fill=\"#5A9CFF\"\n      />\n      <path\n        d=\"M19.3476 25.2591L21.7599 27.0425L19.3476 25.2591ZM16.2864 45.2588L19.1342 44.3153L16.2864 45.2588ZM30.5 58.5L31.2859 55.6048L30.5 58.5ZM47 58.5L47.9887 61.3324L47 58.5ZM60.6759 37.1108L63.6109 36.4897L60.6759 37.1108ZM56.4664 25.2591L54.0505 27.0377L56.4664 25.2591ZM30.1858 28.0067C29.0849 26.7684 27.1886 26.6571 25.9504 27.758C24.7122 28.8589 24.6008 30.7551 25.7017 31.9933L30.1858 28.0067ZM31.5 34L33.2059 36.4678C33.9127 35.9792 34.3761 35.211 34.4786 34.3579C34.5811 33.5049 34.3129 32.6488 33.742 32.0067L31.5 34ZM25.2941 34.643C23.9312 35.5852 23.5901 37.4538 24.5322 38.8167C25.4744 40.1796 27.343 40.5207 28.7059 39.5785L25.2941 34.643ZM50.7346 32.1609C51.9281 31.0116 51.9639 29.1125 50.8146 27.919C49.6653 26.7256 47.7662 26.6898 46.5727 27.8391L50.7346 32.1609ZM44.5 34L42.419 31.8391C41.7852 32.4494 41.4513 33.3073 41.5057 34.1855C41.5601 35.0637 41.9974 35.8738 42.7017 36.4012L44.5 34ZM46.8553 39.512C48.1815 40.5052 50.0617 40.2353 51.0549 38.9091C52.0481 37.5829 51.7782 35.7027 50.452 34.7095L46.8553 39.512ZM32.1532 42.1698C30.9995 40.9807 29.1002 40.9519 27.911 42.1056C26.7219 43.2593 26.6931 45.1586 27.8468 46.3478L32.1532 42.1698ZM33.5 47L32.2069 49.707V49.707L33.5 47ZM38 48L38.1164 45.0023L38 48ZM43.5 47L41.9953 44.4046H41.9953L43.5 47ZM48.932 45.7566C49.9021 44.4134 49.5997 42.5382 48.2566 41.568C46.9134 40.5979 45.0382 40.9003 44.068 42.2434L48.932 45.7566ZM38.0984 13C29.2924 13 22.3234 16.1874 16.9352 23.4757L21.7599 27.0425C25.939 21.3897 31.0609 19 38.0984 19V13ZM16.9352 23.4757C11.5502 30.7597 10.8826 38.487 13.4386 46.2022L19.1342 44.3153C17.1273 38.2576 17.6507 32.6008 21.7599 27.0425L16.9352 23.4757ZM13.4386 46.2022C14.7393 50.1284 16.6857 53.3989 19.4551 55.9771C22.2201 58.5511 25.6527 60.2927 29.7141 61.3952L31.2859 55.6048C27.9514 54.6996 25.4498 53.3603 23.5433 51.5855C21.6412 49.8148 20.1788 47.4685 19.1342 44.3153L13.4386 46.2022ZM29.7141 61.3952C35.536 62.9756 41.8851 63.463 47.9887 61.3324L46.0113 55.6676C41.431 57.2665 36.3996 56.9929 31.2859 55.6048L29.7141 61.3952ZM47.9887 61.3324C58.1204 57.7957 65.9382 47.4881 63.6109 36.4897L57.7408 37.7318C59.2897 45.0511 54.0527 52.8605 46.0113 55.6676L47.9887 61.3324ZM63.6109 36.4897C62.7539 32.4399 62.293 28.1133 58.8824 23.4805L54.0505 27.0377C56.5087 30.3767 56.7671 33.1301 57.7408 37.7318L63.6109 36.4897ZM58.8824 23.4805C56.3106 19.9872 53.3541 17.3274 49.8421 15.5593C46.3312 13.7918 42.4328 13 38.0984 13V19C41.6859 19 44.6249 19.6503 47.1442 20.9185C49.6625 22.1863 51.9291 24.1561 54.0505 27.0377L58.8824 23.4805ZM25.7017 31.9933L29.258 35.9933L33.742 32.0067L30.1858 28.0067L25.7017 31.9933ZM29.7941 31.5322L25.2941 34.643L28.7059 39.5785L33.2059 36.4678L29.7941 31.5322ZM46.5727 27.8391L42.419 31.8391L46.581 36.1609L50.7346 32.1609L46.5727 27.8391ZM42.7017 36.4012L46.8553 39.512L50.452 34.7095L46.2983 31.5988L42.7017 36.4012ZM30 44.2588C27.8468 46.3478 27.847 46.348 27.8473 46.3482C27.8474 46.3483 27.8476 46.3486 27.8478 46.3488C27.8481 46.3491 27.8485 46.3495 27.849 46.35C27.8498 46.3508 27.8507 46.3518 27.8518 46.3529C27.854 46.3551 27.8566 46.3578 27.8597 46.361C27.8659 46.3673 27.8739 46.3755 27.8838 46.3856C27.9036 46.4056 27.9306 46.4329 27.9643 46.4667C28.0317 46.5341 28.1263 46.6276 28.2434 46.7407C28.4765 46.9656 28.8053 47.2739 29.1918 47.6107C29.9053 48.2324 31.0354 49.1474 32.2069 49.707L34.7931 44.293C34.398 44.1043 33.7781 43.6487 33.1333 43.0869C32.8406 42.8319 32.5881 42.5952 32.4097 42.423C32.3211 42.3376 32.2524 42.2696 32.208 42.2251C32.1858 42.2029 32.1697 42.1866 32.1604 42.1771C32.1557 42.1724 32.1527 42.1694 32.1515 42.1681C32.1509 42.1675 32.1507 42.1673 32.151 42.1676C32.1511 42.1677 32.1514 42.168 32.1518 42.1684C32.1519 42.1685 32.1521 42.1688 32.1524 42.169C32.1525 42.1691 32.1527 42.1693 32.1528 42.1694C32.153 42.1696 32.1532 42.1698 30 44.2588ZM32.2069 49.707C34.3272 50.7199 35.8468 50.9186 37.8836 50.9977L38.1164 45.0023C36.5554 44.9416 35.9216 44.8321 34.7931 44.293L32.2069 49.707ZM37.8836 50.9977C40.1374 51.0853 42.3237 51.1497 45.0047 49.5954L41.9953 44.4046C40.899 45.0403 40.2255 45.0842 38.1164 45.0023L37.8836 50.9977ZM45.0047 49.5954C46.1648 48.9228 47.1808 47.8595 47.7858 47.1746C48.1197 46.7967 48.3989 46.4519 48.5955 46.2006C48.6944 46.0742 48.7741 45.9693 48.831 45.8933C48.8596 45.8552 48.8825 45.8242 48.8994 45.8012C48.9079 45.7896 48.9149 45.7801 48.9203 45.7726C48.923 45.7689 48.9254 45.7657 48.9273 45.763C48.9283 45.7617 48.9292 45.7605 48.9299 45.7594C48.9303 45.7588 48.9307 45.7583 48.931 45.7579C48.9312 45.7576 48.9314 45.7573 48.9315 45.7572C48.9317 45.7569 48.932 45.7566 46.5 44C44.068 42.2434 44.0682 42.2431 44.0685 42.2428C44.0685 42.2428 44.0687 42.2425 44.0688 42.2423C44.0691 42.242 44.0693 42.2417 44.0695 42.2414C44.0699 42.2409 44.0702 42.2404 44.0704 42.2402C44.0708 42.2396 44.0709 42.2395 44.0706 42.2399C44.07 42.2407 44.068 42.2434 44.0647 42.248C44.058 42.2571 44.0458 42.2735 44.0287 42.2964C43.9944 42.3422 43.9405 42.4133 43.8701 42.5032C43.7282 42.6845 43.5262 42.9339 43.2892 43.2021C42.7526 43.8095 42.2686 44.2462 41.9953 44.4046L45.0047 49.5954Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M96.3476 25.2591C101.131 18.7886 107.177 16 115.098 16C123.02 16 128.773 18.8841 133.466 25.2591C136.401 29.245 136.76 32.785 137.676 37.1108C139.614 46.2696 133.087 55.3281 124 58.5C118.658 60.3647 112.968 59.9843 107.5 58.5C100.104 56.4923 95.6317 52.3381 93.2864 45.2588C91.0049 38.3723 91.6005 31.6803 96.3476 25.2591Z\"\n        fill=\"#70C253\"\n      />\n      <path\n        d=\"M96.3476 25.2591L98.7599 27.0425L96.3476 25.2591ZM93.2864 45.2588L96.1342 44.3153L93.2864 45.2588ZM107.5 58.5L108.286 55.6048L107.5 58.5ZM124 58.5L124.989 61.3324L124 58.5ZM137.676 37.1108L140.611 36.4897L137.676 37.1108ZM133.466 25.2591L131.051 27.0377L133.466 25.2591ZM104.5 34C104.5 35.6569 105.843 37 107.5 37C109.157 37 110.5 35.6569 110.5 34H104.5ZM110.5 33C110.5 31.3431 109.157 30 107.5 30C105.843 30 104.5 31.3431 104.5 33H110.5ZM125.5 33C125.5 31.3431 124.157 30 122.5 30C120.843 30 119.5 31.3431 119.5 33H125.5ZM119.5 34C119.5 35.6569 120.843 37 122.5 37C124.157 37 125.5 35.6569 125.5 34H119.5ZM109.153 42.1698C107.999 40.9807 106.1 40.9519 104.911 42.1056C103.722 43.2593 103.693 45.1586 104.847 46.3478L109.153 42.1698ZM110.5 47L109.207 49.707V49.707L110.5 47ZM115 48L115.116 45.0023L115 48ZM120.5 47L118.995 44.4046H118.995L120.5 47ZM125.932 45.7566C126.902 44.4134 126.6 42.5382 125.257 41.568C123.913 40.5979 122.038 40.9003 121.068 42.2434L125.932 45.7566ZM115.098 13C106.292 13 99.3234 16.1874 93.9352 23.4757L98.7599 27.0425C102.939 21.3897 108.061 19 115.098 19V13ZM93.9352 23.4757C88.5502 30.7597 87.8826 38.487 90.4386 46.2022L96.1342 44.3153C94.1273 38.2576 94.6507 32.6008 98.7599 27.0425L93.9352 23.4757ZM90.4386 46.2022C91.7393 50.1284 93.6857 53.3989 96.4551 55.9771C99.2201 58.5511 102.653 60.2927 106.714 61.3952L108.286 55.6048C104.951 54.6996 102.45 53.3603 100.543 51.5855C98.6412 49.8148 97.1788 47.4685 96.1342 44.3153L90.4386 46.2022ZM106.714 61.3952C112.536 62.9756 118.885 63.463 124.989 61.3324L123.011 55.6676C118.431 57.2665 113.4 56.9929 108.286 55.6048L106.714 61.3952ZM124.989 61.3324C135.12 57.7957 142.938 47.4881 140.611 36.4897L134.741 37.7318C136.29 45.0511 131.053 52.8605 123.011 55.6676L124.989 61.3324ZM140.611 36.4897C139.754 32.4399 139.293 28.1133 135.882 23.4805L131.051 27.0377C133.509 30.3767 133.767 33.1301 134.741 37.7318L140.611 36.4897ZM135.882 23.4805C133.311 19.9872 130.354 17.3274 126.842 15.5593C123.331 13.7918 119.433 13 115.098 13V19C118.686 19 121.625 19.6503 124.144 20.9185C126.662 22.1863 128.929 24.1561 131.051 27.0377L135.882 23.4805ZM110.5 34V33H104.5V34H110.5ZM119.5 33V34H125.5V33H119.5ZM107 44.2588C104.847 46.3478 104.847 46.348 104.847 46.3482C104.847 46.3483 104.848 46.3486 104.848 46.3488C104.848 46.3491 104.849 46.3495 104.849 46.35C104.85 46.3508 104.851 46.3518 104.852 46.3529C104.854 46.3551 104.857 46.3578 104.86 46.361C104.866 46.3673 104.874 46.3755 104.884 46.3856C104.904 46.4056 104.931 46.4329 104.964 46.4667C105.032 46.5341 105.126 46.6276 105.243 46.7407C105.477 46.9656 105.805 47.2739 106.192 47.6107C106.905 48.2324 108.035 49.1474 109.207 49.707L111.793 44.293C111.398 44.1043 110.778 43.6487 110.133 43.0869C109.841 42.8319 109.588 42.5952 109.41 42.423C109.321 42.3376 109.252 42.2696 109.208 42.2251C109.186 42.2029 109.17 42.1866 109.16 42.1771C109.156 42.1724 109.153 42.1694 109.152 42.1681C109.151 42.1675 109.151 42.1673 109.151 42.1676C109.151 42.1677 109.151 42.168 109.152 42.1684C109.152 42.1685 109.152 42.1688 109.152 42.169C109.153 42.1691 109.153 42.1693 109.153 42.1694C109.153 42.1696 109.153 42.1698 107 44.2588ZM109.207 49.707C111.327 50.7199 112.847 50.9186 114.884 50.9977L115.116 45.0023C113.555 44.9416 112.922 44.8321 111.793 44.293L109.207 49.707ZM114.884 50.9977C117.137 51.0853 119.324 51.1497 122.005 49.5954L118.995 44.4046C117.899 45.0403 117.225 45.0842 115.116 45.0023L114.884 50.9977ZM122.005 49.5954C123.165 48.9228 124.181 47.8595 124.786 47.1746C125.12 46.7967 125.399 46.4519 125.596 46.2006C125.694 46.0742 125.774 45.9693 125.831 45.8933C125.86 45.8552 125.882 45.8242 125.899 45.8012C125.908 45.7896 125.915 45.7801 125.92 45.7726C125.923 45.7689 125.925 45.7657 125.927 45.763C125.928 45.7617 125.929 45.7605 125.93 45.7594C125.93 45.7588 125.931 45.7583 125.931 45.7579C125.931 45.7576 125.931 45.7573 125.932 45.7572C125.932 45.7569 125.932 45.7566 123.5 44C121.068 42.2434 121.068 42.2431 121.068 42.2428C121.069 42.2428 121.069 42.2425 121.069 42.2423C121.069 42.242 121.069 42.2417 121.069 42.2414C121.07 42.2409 121.07 42.2404 121.07 42.2402C121.071 42.2396 121.071 42.2395 121.071 42.2399C121.07 42.2407 121.068 42.2434 121.065 42.248C121.058 42.2571 121.046 42.2735 121.029 42.2964C120.994 42.3422 120.94 42.4133 120.87 42.5032C120.728 42.6845 120.526 42.9339 120.289 43.2021C119.753 43.8095 119.269 44.2462 118.995 44.4046L122.005 49.5954Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M250.348 25.2591C255.131 18.7886 261.177 16 269.098 16C277.02 16 282.773 18.8841 287.466 25.2591C290.401 29.245 290.76 32.785 291.676 37.1108C293.614 46.2696 287.087 55.3281 278 58.5C272.658 60.3647 266.968 59.9843 261.5 58.5C254.104 56.4923 249.632 52.3381 247.286 45.2588C245.005 38.3723 245.6 31.6803 250.348 25.2591Z\"\n        fill=\"#E94848\"\n      />\n      <path\n        d=\"M250.348 25.2591L252.76 27.0425L250.348 25.2591ZM247.286 45.2588L250.134 44.3153L247.286 45.2588ZM261.5 58.5L262.286 55.6048L261.5 58.5ZM278 58.5L278.989 61.3324L278 58.5ZM291.676 37.1108L294.611 36.4897L291.676 37.1108ZM287.466 25.2591L285.051 27.0377L287.466 25.2591ZM258.5 34C258.5 35.6569 259.843 37 261.5 37C263.157 37 264.5 35.6569 264.5 34H258.5ZM264.5 33C264.5 31.3431 263.157 30 261.5 30C259.843 30 258.5 31.3431 258.5 33H264.5ZM279.5 33C279.5 31.3431 278.157 30 276.5 30C274.843 30 273.5 31.3431 273.5 33H279.5ZM273.5 34C273.5 35.6569 274.843 37 276.5 37C278.157 37 279.5 35.6569 279.5 34H273.5ZM258.974 43.7877C257.752 44.9068 257.669 46.8045 258.788 48.0263C259.907 49.2481 261.805 49.3314 263.026 48.2123L258.974 43.7877ZM264.5 43.5L265.741 46.2312L264.5 43.5ZM269 42.5L269.064 45.4993H269.064L269 42.5ZM274 43.5L275.385 40.8386L274 43.5ZM274.789 48.0276C275.909 49.2487 277.806 49.3309 279.028 48.2111C280.249 47.0913 280.331 45.1935 279.211 43.9724L274.789 48.0276ZM269.098 13C260.292 13 253.323 16.1874 247.935 23.4757L252.76 27.0425C256.939 21.3897 262.061 19 269.098 19V13ZM247.935 23.4757C242.55 30.7597 241.883 38.487 244.439 46.2022L250.134 44.3153C248.127 38.2576 248.651 32.6008 252.76 27.0425L247.935 23.4757ZM244.439 46.2022C245.739 50.1284 247.686 53.3989 250.455 55.9771C253.22 58.5511 256.653 60.2927 260.714 61.3952L262.286 55.6048C258.951 54.6996 256.45 53.3603 254.543 51.5855C252.641 49.8148 251.179 47.4685 250.134 44.3153L244.439 46.2022ZM260.714 61.3952C266.536 62.9756 272.885 63.463 278.989 61.3324L277.011 55.6676C272.431 57.2665 267.4 56.9929 262.286 55.6048L260.714 61.3952ZM278.989 61.3324C289.12 57.7957 296.938 47.4881 294.611 36.4897L288.741 37.7318C290.29 45.0511 285.053 52.8605 277.011 55.6676L278.989 61.3324ZM294.611 36.4897C293.754 32.4399 293.293 28.1133 289.882 23.4805L285.051 27.0377C287.509 30.3767 287.767 33.1301 288.741 37.7318L294.611 36.4897ZM289.882 23.4805C287.311 19.9872 284.354 17.3274 280.842 15.5593C277.331 13.7918 273.433 13 269.098 13V19C272.686 19 275.625 19.6503 278.144 20.9185C280.662 22.1863 282.929 24.1561 285.051 27.0377L289.882 23.4805ZM264.5 34V33H258.5V34H264.5ZM273.5 33V34H279.5V33H273.5ZM261 46C263.026 48.2123 263.026 48.2124 263.026 48.2126C263.026 48.2127 263.026 48.2128 263.026 48.2129C263.025 48.2132 263.025 48.2133 263.025 48.2135C263.025 48.2138 263.024 48.214 263.024 48.2141C263.024 48.2142 263.024 48.214 263.025 48.2134C263.027 48.2121 263.03 48.2091 263.035 48.2047C263.045 48.1957 263.061 48.1807 263.084 48.1602C263.13 48.1191 263.201 48.0566 263.292 47.9782C263.475 47.8203 263.733 47.603 264.032 47.3681C264.683 46.8556 265.323 46.4213 265.741 46.2312L263.259 40.7688C262.148 41.2736 261.038 42.0893 260.321 42.653C259.936 42.9563 259.606 43.2337 259.372 43.436C259.254 43.5377 259.159 43.6216 259.091 43.682C259.057 43.7122 259.03 43.7366 259.01 43.7544C259 43.7634 258.992 43.7707 258.986 43.7763C258.983 43.779 258.981 43.7814 258.979 43.7833C258.977 43.7843 258.977 43.7851 258.976 43.7859C258.975 43.7862 258.975 43.7866 258.975 43.7869C258.974 43.787 258.974 43.7873 258.974 43.7873C258.974 43.7875 258.974 43.7877 261 46ZM265.741 46.2312C266.979 45.6687 267.635 45.5297 269.064 45.4993L268.936 39.5007C266.765 39.5469 265.299 39.8418 263.259 40.7688L265.741 46.2312ZM269.064 45.4993C270.783 45.4627 271.464 45.5625 272.615 46.1614L275.385 40.8386C273.003 39.5994 271.198 39.4526 268.936 39.5007L269.064 45.4993ZM272.615 46.1614C272.917 46.3182 273.423 46.7103 273.971 47.2168C274.216 47.4438 274.428 47.654 274.577 47.8067C274.652 47.8824 274.709 47.9424 274.745 47.9813C274.764 48.0007 274.777 48.0147 274.784 48.0227C274.788 48.0267 274.79 48.0291 274.791 48.03C274.791 48.0304 274.792 48.0304 274.791 48.03C274.791 48.0298 274.791 48.0295 274.79 48.0291C274.79 48.0289 274.79 48.0287 274.79 48.0284C274.79 48.0283 274.789 48.0281 274.789 48.028C274.789 48.0278 274.789 48.0276 277 46C279.211 43.9724 279.211 43.9722 279.211 43.9719C279.211 43.9718 279.21 43.9716 279.21 43.9714C279.21 43.971 279.209 43.9706 279.209 43.9702C279.208 43.9694 279.207 43.9684 279.206 43.9674C279.204 43.9652 279.202 43.9627 279.199 43.9597C279.194 43.9537 279.187 43.946 279.178 43.9366C279.161 43.918 279.137 43.8927 279.108 43.8616C279.049 43.7996 278.967 43.7137 278.866 43.6101C278.664 43.4039 278.379 43.1211 278.044 42.8111C277.43 42.2435 276.436 41.3857 275.385 40.8386L272.615 46.1614Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M327.348 25.2591C332.131 18.7886 338.177 16 346.098 16C354.02 16 359.773 18.8841 364.466 25.2591C367.401 29.245 367.76 32.785 368.676 37.1108C370.614 46.2696 364.087 55.3281 355 58.5C349.658 60.3647 343.968 59.9843 338.5 58.5C331.104 56.4923 326.632 52.3381 324.286 45.2588C322.005 38.3723 322.6 31.6803 327.348 25.2591Z\"\n        fill=\"#B160E2\"\n      />\n      <path\n        d=\"M327.348 25.2591L329.76 27.0425L327.348 25.2591ZM324.286 45.2588L327.134 44.3153L324.286 45.2588ZM338.5 58.5L339.286 55.6048L338.5 58.5ZM355 58.5L355.989 61.3324L355 58.5ZM368.676 37.1108L371.611 36.4897L368.676 37.1108ZM364.466 25.2591L362.051 27.0377L364.466 25.2591ZM335.551 31.6539C333.979 32.1779 333.13 33.8769 333.654 35.4487C334.178 37.0205 335.877 37.87 337.449 37.3461L335.551 31.6539ZM340.449 36.3461C342.021 35.8221 342.87 34.1231 342.346 32.5513C341.822 30.9795 340.123 30.13 338.551 30.6539L340.449 36.3461ZM352.949 30.6539C351.377 30.13 349.678 30.9795 349.154 32.5513C348.63 34.1231 349.479 35.8221 351.051 36.3461L352.949 30.6539ZM354.051 37.3461C355.623 37.87 357.322 37.0205 357.846 35.4487C358.37 33.8769 357.521 32.1779 355.949 31.6539L354.051 37.3461ZM335.974 43.7877C334.752 44.9068 334.669 46.8045 335.788 48.0263C336.907 49.2481 338.805 49.3314 340.026 48.2123L335.974 43.7877ZM341.5 43.5L342.741 46.2312L341.5 43.5ZM346 42.5L346.064 45.4993H346.064L346 42.5ZM351 43.5L352.385 40.8386L351 43.5ZM351.789 48.0276C352.909 49.2487 354.806 49.3309 356.028 48.2111C357.249 47.0913 357.331 45.1935 356.211 43.9724L351.789 48.0276ZM346.098 13C337.292 13 330.323 16.1874 324.935 23.4757L329.76 27.0425C333.939 21.3897 339.061 19 346.098 19V13ZM324.935 23.4757C319.55 30.7597 318.883 38.487 321.439 46.2022L327.134 44.3153C325.127 38.2576 325.651 32.6008 329.76 27.0425L324.935 23.4757ZM321.439 46.2022C322.739 50.1284 324.686 53.3989 327.455 55.9771C330.22 58.5511 333.653 60.2927 337.714 61.3952L339.286 55.6048C335.951 54.6996 333.45 53.3603 331.543 51.5855C329.641 49.8148 328.179 47.4685 327.134 44.3153L321.439 46.2022ZM337.714 61.3952C343.536 62.9756 349.885 63.463 355.989 61.3324L354.011 55.6676C349.431 57.2665 344.4 56.9929 339.286 55.6048L337.714 61.3952ZM355.989 61.3324C366.12 57.7957 373.938 47.4881 371.611 36.4897L365.741 37.7318C367.29 45.0511 362.053 52.8605 354.011 55.6676L355.989 61.3324ZM371.611 36.4897C370.754 32.4399 370.293 28.1133 366.882 23.4805L362.051 27.0377C364.509 30.3767 364.767 33.1301 365.741 37.7318L371.611 36.4897ZM366.882 23.4805C364.311 19.9872 361.354 17.3274 357.842 15.5593C354.331 13.7918 350.433 13 346.098 13V19C349.686 19 352.625 19.6503 355.144 20.9185C357.662 22.1863 359.929 24.1561 362.051 27.0377L366.882 23.4805ZM337.449 37.3461L340.449 36.3461L338.551 30.6539L335.551 31.6539L337.449 37.3461ZM351.051 36.3461L354.051 37.3461L355.949 31.6539L352.949 30.6539L351.051 36.3461ZM338 46C340.026 48.2123 340.026 48.2124 340.026 48.2126C340.026 48.2127 340.026 48.2128 340.026 48.2129C340.025 48.2132 340.025 48.2133 340.025 48.2135C340.025 48.2138 340.024 48.214 340.024 48.2141C340.024 48.2142 340.024 48.214 340.025 48.2134C340.027 48.2121 340.03 48.2091 340.035 48.2047C340.045 48.1957 340.061 48.1807 340.084 48.1602C340.13 48.1191 340.201 48.0566 340.292 47.9782C340.475 47.8203 340.733 47.603 341.032 47.3681C341.683 46.8556 342.323 46.4213 342.741 46.2312L340.259 40.7688C339.148 41.2736 338.038 42.0893 337.321 42.653C336.936 42.9563 336.606 43.2337 336.372 43.436C336.254 43.5377 336.159 43.6216 336.091 43.682C336.057 43.7122 336.03 43.7366 336.01 43.7544C336 43.7634 335.992 43.7707 335.986 43.7763C335.983 43.779 335.981 43.7814 335.979 43.7833C335.977 43.7843 335.977 43.7851 335.976 43.7859C335.975 43.7862 335.975 43.7866 335.975 43.7869C335.974 43.787 335.974 43.7873 335.974 43.7873C335.974 43.7875 335.974 43.7877 338 46ZM342.741 46.2312C343.979 45.6687 344.635 45.5297 346.064 45.4993L345.936 39.5007C343.765 39.5469 342.299 39.8418 340.259 40.7688L342.741 46.2312ZM346.064 45.4993C347.783 45.4627 348.464 45.5625 349.615 46.1614L352.385 40.8386C350.003 39.5994 348.198 39.4526 345.936 39.5007L346.064 45.4993ZM349.615 46.1614C349.917 46.3182 350.423 46.7103 350.971 47.2168C351.216 47.4438 351.428 47.654 351.577 47.8067C351.652 47.8824 351.709 47.9424 351.745 47.9813C351.764 48.0007 351.777 48.0147 351.784 48.0227C351.788 48.0267 351.79 48.0291 351.791 48.03C351.791 48.0304 351.792 48.0304 351.791 48.03C351.791 48.0298 351.791 48.0295 351.79 48.0291C351.79 48.0289 351.79 48.0287 351.79 48.0284C351.79 48.0283 351.789 48.0281 351.789 48.028C351.789 48.0278 351.789 48.0276 354 46C356.211 43.9724 356.211 43.9722 356.211 43.9719C356.211 43.9718 356.21 43.9716 356.21 43.9714C356.21 43.971 356.209 43.9706 356.209 43.9702C356.208 43.9694 356.207 43.9684 356.206 43.9674C356.204 43.9652 356.202 43.9627 356.199 43.9597C356.194 43.9537 356.187 43.946 356.178 43.9366C356.161 43.918 356.137 43.8927 356.108 43.8616C356.049 43.7996 355.967 43.7137 355.866 43.6101C355.664 43.4039 355.379 43.1211 355.044 42.8111C354.43 42.2435 353.436 41.3857 352.385 40.8386L349.615 46.1614Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M173.348 25.2591C178.131 18.7886 184.177 16 192.098 16C200.02 16 205.773 18.8841 210.466 25.2591C213.401 29.245 213.76 32.785 214.676 37.1108C216.614 46.2696 210.087 55.3281 201 58.5C195.658 60.3647 189.968 59.9843 184.5 58.5C177.104 56.4923 172.632 52.3381 170.286 45.2588C168.005 38.3723 168.6 31.6803 173.348 25.2591Z\"\n        fill=\"#FCDD3D\"\n      />\n      <path\n        d=\"M173.348 25.2591L175.76 27.0425L173.348 25.2591ZM170.286 45.2588L173.134 44.3153L170.286 45.2588ZM184.5 58.5L185.286 55.6048L184.5 58.5ZM201 58.5L201.989 61.3324L201 58.5ZM214.676 37.1108L217.611 36.4897L214.676 37.1108ZM210.466 25.2591L208.051 27.0377L210.466 25.2591ZM181.5 34C181.5 35.6569 182.843 37 184.5 37C186.157 37 187.5 35.6569 187.5 34H181.5ZM187.5 33C187.5 31.3431 186.157 30 184.5 30C182.843 30 181.5 31.3431 181.5 33H187.5ZM202.5 33C202.5 31.3431 201.157 30 199.5 30C197.843 30 196.5 31.3431 196.5 33H202.5ZM196.5 34C196.5 35.6569 197.843 37 199.5 37C201.157 37 202.5 35.6569 202.5 34H196.5ZM184.5 41C182.843 41 181.5 42.3431 181.5 44C181.5 45.6569 182.843 47 184.5 47V41ZM199.5 47C201.157 47 202.5 45.6569 202.5 44C202.5 42.3431 201.157 41 199.5 41V47ZM192.098 13C183.292 13 176.323 16.1874 170.935 23.4757L175.76 27.0425C179.939 21.3897 185.061 19 192.098 19V13ZM170.935 23.4757C165.55 30.7597 164.883 38.487 167.439 46.2022L173.134 44.3153C171.127 38.2576 171.651 32.6008 175.76 27.0425L170.935 23.4757ZM167.439 46.2022C168.739 50.1284 170.686 53.3989 173.455 55.9771C176.22 58.5511 179.653 60.2927 183.714 61.3952L185.286 55.6048C181.951 54.6996 179.45 53.3603 177.543 51.5855C175.641 49.8148 174.179 47.4685 173.134 44.3153L167.439 46.2022ZM183.714 61.3952C189.536 62.9756 195.885 63.463 201.989 61.3324L200.011 55.6676C195.431 57.2665 190.4 56.9929 185.286 55.6048L183.714 61.3952ZM201.989 61.3324C212.12 57.7957 219.938 47.4881 217.611 36.4897L211.741 37.7318C213.29 45.0511 208.053 52.8605 200.011 55.6676L201.989 61.3324ZM217.611 36.4897C216.754 32.4399 216.293 28.1133 212.882 23.4805L208.051 27.0377C210.509 30.3767 210.767 33.1301 211.741 37.7318L217.611 36.4897ZM212.882 23.4805C210.311 19.9872 207.354 17.3274 203.842 15.5593C200.331 13.7918 196.433 13 192.098 13V19C195.686 19 198.625 19.6503 201.144 20.9185C203.662 22.1863 205.929 24.1561 208.051 27.0377L212.882 23.4805ZM187.5 34V33H181.5V34H187.5ZM196.5 33V34H202.5V33H196.5ZM184.5 47H199.5V41H184.5V47Z\"\n        fill=\"#191919\"\n      />\n    </svg>\n  </div>\n</div>\n","source":"playground/design/icons.html","raw":"<h1>놀이터 THEME</h1>\n<div>\n  <b>Reference : </b>\n  <b>날씨</b>\n  <div>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M19.1985 25.2591C23.8182 18.7886 29.6564 16 37.3066 16C44.9568 16 50.5126 18.8841 55.0449 25.2591C57.8787 29.245 58.2261 32.785 59.11 37.1108C60.9817 46.2696 54.2118 53.5682 45.4367 56.7401C40.2779 58.6048 36.6741 58.2244 31.3938 56.7401C24.2514 54.7324 18.5072 52.3381 16.2423 45.2588C14.039 38.3723 14.6142 31.6803 19.1985 25.2591Z\"\n        fill=\"#FCDD3D\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M27.1218 14.8992C31.108 9.379 36.1456 7 42.7467 7C49.3478 7 54.1417 9.46052 58.0525 14.8992C60.4977 18.2997 60.7974 21.3198 61.5602 25.0102C63.1751 32.8238 57.3336 39.0505 49.7619 41.7565C45.3105 43.3474 42.2009 43.0228 37.6447 41.7565C31.4818 40.0437 26.5253 38.0011 24.571 31.9615C22.6699 26.0864 23.1661 20.3773 27.1218 14.8992Z\"\n        fill=\"#FCDD3D\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M30.2178 21.9768C27.0259 20.9981 24.8052 20.798 21.6575 21.9768C19.0454 22.9551 17.404 24.2374 16.4694 26.8314C15.5111 29.4912 17.507 33.9856 17.507 33.9856C17.507 33.9856 8.72893 33.4249 6.87145 37.3072C5.79181 39.5637 5.63003 41.5205 6.87145 43.6948C8.14037 45.9173 12.5783 47.0164 12.5783 47.0164H18.5446C18.5446 47.0164 18.394 50.3271 19.5823 51.871C21.504 54.3678 25.7821 54.6798 28.9208 54.1706C31.6927 53.7208 31.9186 53.2254 34.3683 51.871C36.3535 50.7735 39.0376 47.0164 39.0376 47.0164C39.0376 47.0164 42.3464 50.4534 45.0039 51.871C49.0045 54.0051 51.9638 55.0853 56.4177 54.1706C61.0987 53.2091 64.8537 50.7354 66.2751 47.0164C67.7331 43.2014 66.2777 38.6887 62.384 37.3072C59.7669 36.3786 55.3801 38.5847 55.3801 38.5847C55.3801 38.5847 55.9822 35.6809 55.3801 33.9856C54.4292 31.3084 52.42 30.2379 49.6732 29.3865C46.0152 28.2526 40.0752 31.4305 40.0752 31.4305C40.0752 31.4305 38.3332 27.2936 36.1841 25.5539C34.2213 23.965 32.8222 22.7755 30.2178 21.9768Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M25.0323 59.9824V63.0526V66M42.3871 60.228V66M51 59V61.7017V64.4035M16 55.614V59.9824M16 65V67.5M34 57.5V64.4035M34 69V70.5M59 57.5V66\"\n        stroke=\"#5A9CFF\"\n        stroke-width=\"3\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M36.5557 9.90793C33.6165 8.81195 31.5715 8.58795 28.673 9.90791C26.2676 11.0033 24.7562 12.4391 23.8955 15.3439C23.0131 18.3221 24.851 23.3548 24.851 23.3548C24.851 23.3548 16.7677 22.727 15.0573 27.0741C14.0631 29.6009 13.9141 31.7921 15.0573 34.2267C16.2257 36.7153 20.3124 37.9461 20.3124 37.9461H25.8065C25.8065 37.9461 25.6678 41.6533 26.762 43.382C28.5316 46.1779 32.4711 46.5272 35.3614 45.957C37.9138 45.4534 38.1219 44.8986 40.3777 43.382C42.2057 42.1531 44.6774 37.9461 44.6774 37.9461C44.6774 37.9461 47.7243 41.7947 50.1714 43.382C53.8554 45.7717 56.5805 46.9813 60.6818 45.957C64.9923 44.8804 68.4501 42.1104 69.7589 37.9461C71.1016 33.6742 69.7613 28.6211 66.1758 27.0741C63.7659 26.0344 59.7263 28.5047 59.7263 28.5047C59.7263 28.5047 60.2808 25.2531 59.7263 23.3548C58.8507 20.3569 57.0005 19.1583 54.4711 18.2049C51.1027 16.9352 45.6329 20.4937 45.6329 20.4937C45.6329 20.4937 44.0287 15.8614 42.0498 13.9134C40.2423 12.1341 38.954 10.8022 36.5557 9.90793Z\"\n        fill=\"#9DBAD1\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M28.3009 19.1496C25.3617 18.0717 23.3167 17.8514 20.4182 19.1495C18.0128 20.2268 16.5014 21.6389 15.6407 24.4956C14.7583 27.4246 16.5962 32.3741 16.5962 32.3741C16.5962 32.3741 8.51293 31.7567 6.80247 36.0319C5.80829 38.5169 5.65932 40.6719 6.80247 43.0663C7.97096 45.5138 12.0577 46.7241 12.0577 46.7241H17.5517C17.5517 46.7241 17.413 50.37 18.5072 52.0702C20.2768 54.8198 24.2163 55.1634 27.1066 54.6026C29.6591 54.1073 29.8671 53.5617 32.1229 52.0702C33.9509 50.8616 36.4226 46.7241 36.4226 46.7241C36.4226 46.7241 39.4695 50.5091 41.9166 52.0702C45.6006 54.4204 48.3257 55.61 52.427 54.6026C56.7375 53.5438 60.1953 50.8196 61.5041 46.7241C62.8468 42.5229 61.5065 37.5533 57.9211 36.0319C55.5111 35.0094 51.4715 37.4388 51.4715 37.4388C51.4715 37.4388 52.026 34.2411 51.4715 32.3741C50.5959 29.4258 48.7457 28.247 46.2163 27.3094C42.8479 26.0607 37.3781 29.5604 37.3781 29.5604C37.3781 29.5604 35.7739 25.0046 33.795 23.0888C31.9875 21.339 30.6992 20.029 28.3009 19.1496Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M25.0323 59.9824V63.0526V66M42.3871 60.228V66M51 59V61.7017V64.4035M16 55.614V59.9824M16 65V67.5M34 57.5V64.4035M34 69V70.5M59 57.5V66\"\n        stroke=\"#5A9CFF\"\n        stroke-width=\"3\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M27.4018 22.7784C31.3212 17.3426 36.2743 15 42.7648 15C49.2554 15 53.9689 17.4229 57.8142 22.7784C60.2184 26.1268 60.5131 29.1007 61.2631 32.7347C62.851 40.4288 57.1073 46.5602 49.6625 49.2248C45.2857 50.7914 42.2283 50.4717 37.7484 49.2248C31.6887 47.5382 26.8153 45.5269 24.8937 39.5797C23.0244 33.7945 23.5124 28.1726 27.4018 22.7784Z\"\n        fill=\"#FCDD3D\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M30.6246 29.4319C27.5109 28.4665 25.3445 28.2692 22.274 29.4319C19.7258 30.3968 18.1247 31.6617 17.213 34.2204C16.2782 36.8439 18.2252 41.2771 18.2252 41.2771C18.2252 41.2771 9.66209 40.7241 7.8501 44.5535C6.79691 46.7793 6.6391 48.7095 7.8501 50.8541C9.08794 53.0463 13.4172 54.1305 13.4172 54.1305H19.2374C19.2374 54.1305 19.0904 57.3961 20.2496 58.919C22.1242 61.3818 26.2975 61.6895 29.3594 61.1872C32.0634 60.7436 32.2837 60.2549 34.6734 58.919C36.61 57.8364 39.2284 54.1305 39.2284 54.1305C39.2284 54.1305 42.4561 57.5207 45.0485 58.919C48.9511 61.024 51.838 62.0895 56.1827 61.1872C60.7491 60.2389 64.4121 57.7988 65.7986 54.1305C67.221 50.3674 65.8012 45.9162 62.0029 44.5535C59.4499 43.6376 55.1705 45.8136 55.1705 45.8136C55.1705 45.8136 55.7579 42.9494 55.1705 41.2771C54.243 38.6364 52.2829 37.5805 49.6034 36.7407C46.035 35.6222 40.2406 38.7569 40.2406 38.7569C40.2406 38.7569 38.5412 34.6763 36.4448 32.9603C34.53 31.393 33.1652 30.2197 30.6246 29.4319Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M35.9583 13.8226C33.1727 12.8296 31.2346 12.6267 28.4876 13.8225C26.208 14.8149 24.7756 16.1158 23.96 18.7474C23.1237 21.4456 24.8655 26.005 24.8655 26.005C24.8655 26.005 17.2048 25.4363 15.5838 29.3747C14.6416 31.6638 14.5004 33.649 15.5838 35.8547C16.6912 38.1094 20.5642 39.2244 20.5642 39.2244H25.771C25.771 39.2244 25.6396 42.583 26.6766 44.1492C28.3536 46.6822 32.0872 46.9986 34.8264 46.482C37.2454 46.0258 37.4426 45.5232 39.5804 44.1492C41.3129 43.0358 43.6553 39.2244 43.6553 39.2244C43.6553 39.2244 46.543 42.7111 48.8622 44.1492C52.3535 46.3142 54.9361 47.41 58.823 46.482C62.9082 45.5067 66.1852 42.9971 67.4256 39.2244C68.6981 35.3541 67.4279 30.7762 64.0299 29.3747C61.7459 28.4327 57.9175 30.6707 57.9175 30.6707C57.9175 30.6707 58.443 27.7249 57.9175 26.005C57.0877 23.2891 55.3342 22.2032 52.9371 21.3394C49.7447 20.1891 44.5609 23.413 44.5609 23.413C44.5609 23.413 43.0406 19.2162 41.1651 17.4514C39.4521 15.8394 38.2312 14.6327 35.9583 13.8226Z\"\n        fill=\"#9DBAD1\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M28.135 23.1998C25.3494 22.2253 23.4114 22.0261 20.6644 23.1998C18.3848 24.1738 16.9524 25.4506 16.1367 28.0335C15.3004 30.6817 17.0423 35.1567 17.0423 35.1567C17.0423 35.1567 9.38155 34.5985 7.76052 38.464C6.81831 40.7107 6.67713 42.6591 7.76052 44.824C8.86792 47.0369 12.741 48.1312 12.741 48.1312H17.9478C17.9478 48.1312 17.8163 51.4276 18.8533 52.9649C20.5304 55.4509 24.264 55.7615 27.0031 55.2545C29.4222 54.8067 29.6193 54.3134 31.7572 52.9649C33.4896 51.8721 35.8321 48.1312 35.8321 48.1312C35.8321 48.1312 38.7197 51.5534 41.0389 52.9649C44.5303 55.0898 47.1129 56.1653 50.9998 55.2545C55.085 54.2972 58.362 51.8341 59.6024 48.1312C60.8749 44.3327 59.6047 39.8395 56.2066 38.464C53.9227 37.5394 50.0943 39.736 50.0943 39.736C50.0943 39.736 50.6197 36.8447 50.0943 35.1567C49.2645 32.4911 47.511 31.4253 45.1138 30.5775C41.9215 29.4485 36.7376 32.6127 36.7376 32.6127C36.7376 32.6127 35.2174 28.4936 33.3419 26.7615C31.6289 25.1794 30.4079 23.995 28.135 23.1998Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M35.7106 68.7299L39.4864 55.3714H33.8228L39.4864 42.4304H47.793L41.7518 51.6143H46.2827L35.7106 68.7299Z\"\n        fill=\"#FCDD3D\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M29.7984 17.9974C26.3981 16.7934 24.0324 16.5474 20.6794 17.9973C17.8967 19.2007 16.1483 20.778 15.1527 23.9688C14.1319 27.2405 16.258 32.769 16.258 32.769C16.258 32.769 6.90703 32.0793 4.92832 36.8547C3.77823 39.6304 3.60589 42.0374 4.92832 44.712C6.28006 47.4457 11.0077 48.7977 11.0077 48.7977H17.3634C17.3634 48.7977 17.2029 52.8701 18.4687 54.7692C20.5158 57.8405 25.0732 58.2242 28.4167 57.5978C31.3695 57.0446 31.6101 56.4352 34.2197 54.7692C36.3344 53.4192 39.1938 48.7977 39.1938 48.7977C39.1938 48.7977 42.7185 53.0255 45.5494 54.7692C49.8111 57.3943 52.9636 58.723 57.7081 57.5978C62.6946 56.4152 66.6947 53.3723 68.2088 48.7977C69.7621 44.105 68.2116 38.5541 64.0638 36.8547C61.2759 35.7125 56.6028 38.4262 56.6028 38.4262C56.6028 38.4262 57.2442 34.8543 56.6028 32.769C55.5899 29.4758 53.4495 28.1591 50.5234 27.1117C46.6267 25.717 40.2991 29.6261 40.2991 29.6261C40.2991 29.6261 38.4434 24.5373 36.1541 22.3974C34.0631 20.4429 32.5727 18.9797 29.7984 17.9974Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M36.0188 13.9203C32.969 12.8094 30.8472 12.5823 27.8397 13.9202C25.344 15.0305 23.7758 16.4859 22.8828 19.4301C21.9672 22.4488 23.8742 27.5499 23.8742 27.5499C23.8742 27.5499 15.4871 26.9136 13.7123 31.3198C12.6808 33.8809 12.5262 36.1019 13.7123 38.5696C14.9247 41.0921 19.165 42.3396 19.165 42.3396H24.8656C24.8656 42.3396 24.7216 46.0971 25.857 47.8494C27.693 50.6833 31.7806 51.0373 34.7795 50.4593C37.4279 49.9489 37.6438 49.3866 39.9844 47.8494C41.8811 46.6037 44.4457 42.3396 44.4457 42.3396C44.4457 42.3396 47.6071 46.2405 50.1462 47.8494C53.9686 50.2716 56.7961 51.4976 61.0516 50.4593C65.5241 49.3682 69.1118 46.5605 70.4698 42.3396C71.863 38.0096 70.4723 32.8878 66.7521 31.3198C64.2516 30.2659 60.0602 32.7698 60.0602 32.7698C60.0602 32.7698 60.6355 29.4741 60.0602 27.5499C59.1517 24.5113 57.2319 23.2964 54.6075 22.33C51.1124 21.0431 45.4371 24.65 45.4371 24.65C45.4371 24.65 43.7726 19.9546 41.7193 17.9801C39.8439 16.1767 38.5071 14.8267 36.0188 13.9203Z\"\n        fill=\"#9DBAD1\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M27.1391 24.97C24.0893 23.8862 21.9675 23.6647 18.96 24.97C16.4643 26.0532 14.8961 27.4731 14.0031 30.3455C13.0875 33.2906 14.9945 38.2673 14.9945 38.2673C14.9945 38.2673 6.60737 37.6464 4.83263 41.9452C3.80109 44.4438 3.64651 46.6106 4.83263 49.0182C6.04503 51.4791 10.2853 52.6962 10.2853 52.6962H15.9859C15.9859 52.6962 15.8419 56.3621 16.9773 58.0717C18.8133 60.8364 22.9009 61.1818 25.8998 60.6179C28.5482 60.12 28.7641 59.5714 31.1047 58.0717C33.0014 56.8563 35.566 52.6962 35.566 52.6962C35.566 52.6962 38.7274 56.5019 41.2665 58.0717C45.0889 60.4347 47.9164 61.6308 52.1719 60.6179C56.6444 59.5534 60.2321 56.8142 61.5901 52.6962C62.9833 48.4718 61.5926 43.475 57.8724 41.9452C55.3719 40.917 51.1805 43.3598 51.1805 43.3598C51.1805 43.3598 51.7558 40.1445 51.1805 38.2673C50.272 35.3028 48.3522 34.1175 45.7278 33.1747C42.2327 31.9191 36.5574 35.4381 36.5574 35.4381C36.5574 35.4381 34.8929 30.8572 32.8396 28.9309C30.9642 27.1715 29.6274 25.8543 27.1391 24.97Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M20.5034 25.9951C20.5034 28.9441 24.4056 33.6719 26.7597 35.5891C23.6315 38.2358 22.6572 38.8006 20.5034 41.8749C18.4757 44.7691 17.7572 47.0105 18.0703 50.4764C18.4084 54.2182 19.6454 56.5768 22.5888 59.0779C26.2481 62.1874 29.8757 63.219 34.7539 63.7095C40.5724 64.2947 44.9079 64.2584 49.6997 61.0629C53.153 58.76 54.5704 56.3513 55.6085 52.4614C56.6825 48.4368 56.6161 45.5401 54.5658 41.8749C51.9824 37.2566 45.5287 34.5966 45.5287 34.5966C45.5287 34.5966 48.331 31.8647 49.6997 28.6417C50.8697 25.8868 50.7103 23.8442 49.6997 21.0327C47.8351 15.845 43.2755 13.5434 37.5346 13.0928C32.0814 12.6648 26.1475 13.6173 23.2839 18.0552C22.5888 19.1324 20.5034 20.7019 20.5034 25.9951Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M30.1852 22.4597V24.1048M41.5 23.2823L41.9352 23.6935M26.7597 35.5891C24.4056 33.6719 20.5034 28.9441 20.5034 25.9951C20.5034 20.7019 22.5888 19.1324 23.2839 18.0552C26.1475 13.6173 32.0814 12.6648 37.5346 13.0928C43.2755 13.5434 47.8351 15.845 49.6997 21.0327C50.7103 23.8442 50.8697 25.8868 49.6997 28.6417C48.331 31.8647 45.5287 34.5966 45.5287 34.5966C45.5287 34.5966 51.9824 37.2566 54.5658 41.8749C56.6161 45.5401 56.6825 48.4368 55.6085 52.4614C54.5704 56.3513 53.1531 58.76 49.6997 61.0629C44.9079 64.2584 40.5724 64.2947 34.7539 63.7095C29.8757 63.219 26.2481 62.1874 22.5888 59.0779C19.6454 56.5768 18.4084 54.2182 18.0703 50.4764C17.7572 47.0105 18.4757 44.7691 20.5034 41.8749C22.6572 38.8006 23.6315 38.2358 26.7597 35.5891Z\"\n        stroke=\"black\"\n        stroke-width=\"6\"\n        stroke-linecap=\"round\"\n      />\n      <path\n        d=\"M46.2871 33.1532L61.0834 29.0403M46.2871 33.1532L65 37.6774M46.2871 33.1532L48.8982 35.2097L21.9906 36.2632V33.579L46.2871 33.1532Z\"\n        stroke=\"#E94848\"\n        stroke-width=\"6\"\n        stroke-linecap=\"round\"\n      />\n    </svg>\n\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14 26.3651C14 26.3651 19.8053 17.502 25.2316 16.1721C32.8256 14.3108 38.9161 28.1639 46.6737 28.1639C59.4368 28.1639 62.5 18.5704 62.5 18.5704M14 40.7553C14 40.7553 19.8053 31.8922 25.2316 30.5623C32.8256 28.701 38.9161 42.5541 46.6737 42.5541C59.4368 42.5541 62.5 32.9606 62.5 32.9606M14 56.3447C14 56.3447 19.8053 47.4816 25.2316 46.1516C32.8256 44.2904 38.9161 58.1435 46.6737 58.1435C59.4368 58.1435 62.5 48.55 62.5 48.55\"\n        stroke=\"#9DBAD1\"\n        stroke-width=\"6\"\n        stroke-linecap=\"round\"\n      />\n    </svg>\n  </div>\n  <b>감정</b>\n  <div>\n    <svg\n      width=\"383\"\n      height=\"75\"\n      viewBox=\"0 0 383 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M19.3476 25.2591C24.1312 18.7886 30.1767 16 38.0984 16C46.0202 16 51.7732 18.8841 56.4664 25.2591C59.4008 29.245 59.7605 32.785 60.6759 37.1108C62.6139 46.2696 56.0865 55.3281 47 58.5C41.6581 60.3647 35.9678 59.9843 30.5 58.5C23.1041 56.4923 18.6317 52.3381 16.2864 45.2588C14.0049 38.3723 14.6005 31.6803 19.3476 25.2591Z\"\n        fill=\"#5A9CFF\"\n      />\n      <path\n        d=\"M19.3476 25.2591L21.7599 27.0425L19.3476 25.2591ZM16.2864 45.2588L19.1342 44.3153L16.2864 45.2588ZM30.5 58.5L31.2859 55.6048L30.5 58.5ZM47 58.5L47.9887 61.3324L47 58.5ZM60.6759 37.1108L63.6109 36.4897L60.6759 37.1108ZM56.4664 25.2591L54.0505 27.0377L56.4664 25.2591ZM30.1858 28.0067C29.0849 26.7684 27.1886 26.6571 25.9504 27.758C24.7122 28.8589 24.6008 30.7551 25.7017 31.9933L30.1858 28.0067ZM31.5 34L33.2059 36.4678C33.9127 35.9792 34.3761 35.211 34.4786 34.3579C34.5811 33.5049 34.3129 32.6488 33.742 32.0067L31.5 34ZM25.2941 34.643C23.9312 35.5852 23.5901 37.4538 24.5322 38.8167C25.4744 40.1796 27.343 40.5207 28.7059 39.5785L25.2941 34.643ZM50.7346 32.1609C51.9281 31.0116 51.9639 29.1125 50.8146 27.919C49.6653 26.7256 47.7662 26.6898 46.5727 27.8391L50.7346 32.1609ZM44.5 34L42.419 31.8391C41.7852 32.4494 41.4513 33.3073 41.5057 34.1855C41.5601 35.0637 41.9974 35.8738 42.7017 36.4012L44.5 34ZM46.8553 39.512C48.1815 40.5052 50.0617 40.2353 51.0549 38.9091C52.0481 37.5829 51.7782 35.7027 50.452 34.7095L46.8553 39.512ZM32.1532 42.1698C30.9995 40.9807 29.1002 40.9519 27.911 42.1056C26.7219 43.2593 26.6931 45.1586 27.8468 46.3478L32.1532 42.1698ZM33.5 47L32.2069 49.707V49.707L33.5 47ZM38 48L38.1164 45.0023L38 48ZM43.5 47L41.9953 44.4046H41.9953L43.5 47ZM48.932 45.7566C49.9021 44.4134 49.5997 42.5382 48.2566 41.568C46.9134 40.5979 45.0382 40.9003 44.068 42.2434L48.932 45.7566ZM38.0984 13C29.2924 13 22.3234 16.1874 16.9352 23.4757L21.7599 27.0425C25.939 21.3897 31.0609 19 38.0984 19V13ZM16.9352 23.4757C11.5502 30.7597 10.8826 38.487 13.4386 46.2022L19.1342 44.3153C17.1273 38.2576 17.6507 32.6008 21.7599 27.0425L16.9352 23.4757ZM13.4386 46.2022C14.7393 50.1284 16.6857 53.3989 19.4551 55.9771C22.2201 58.5511 25.6527 60.2927 29.7141 61.3952L31.2859 55.6048C27.9514 54.6996 25.4498 53.3603 23.5433 51.5855C21.6412 49.8148 20.1788 47.4685 19.1342 44.3153L13.4386 46.2022ZM29.7141 61.3952C35.536 62.9756 41.8851 63.463 47.9887 61.3324L46.0113 55.6676C41.431 57.2665 36.3996 56.9929 31.2859 55.6048L29.7141 61.3952ZM47.9887 61.3324C58.1204 57.7957 65.9382 47.4881 63.6109 36.4897L57.7408 37.7318C59.2897 45.0511 54.0527 52.8605 46.0113 55.6676L47.9887 61.3324ZM63.6109 36.4897C62.7539 32.4399 62.293 28.1133 58.8824 23.4805L54.0505 27.0377C56.5087 30.3767 56.7671 33.1301 57.7408 37.7318L63.6109 36.4897ZM58.8824 23.4805C56.3106 19.9872 53.3541 17.3274 49.8421 15.5593C46.3312 13.7918 42.4328 13 38.0984 13V19C41.6859 19 44.6249 19.6503 47.1442 20.9185C49.6625 22.1863 51.9291 24.1561 54.0505 27.0377L58.8824 23.4805ZM25.7017 31.9933L29.258 35.9933L33.742 32.0067L30.1858 28.0067L25.7017 31.9933ZM29.7941 31.5322L25.2941 34.643L28.7059 39.5785L33.2059 36.4678L29.7941 31.5322ZM46.5727 27.8391L42.419 31.8391L46.581 36.1609L50.7346 32.1609L46.5727 27.8391ZM42.7017 36.4012L46.8553 39.512L50.452 34.7095L46.2983 31.5988L42.7017 36.4012ZM30 44.2588C27.8468 46.3478 27.847 46.348 27.8473 46.3482C27.8474 46.3483 27.8476 46.3486 27.8478 46.3488C27.8481 46.3491 27.8485 46.3495 27.849 46.35C27.8498 46.3508 27.8507 46.3518 27.8518 46.3529C27.854 46.3551 27.8566 46.3578 27.8597 46.361C27.8659 46.3673 27.8739 46.3755 27.8838 46.3856C27.9036 46.4056 27.9306 46.4329 27.9643 46.4667C28.0317 46.5341 28.1263 46.6276 28.2434 46.7407C28.4765 46.9656 28.8053 47.2739 29.1918 47.6107C29.9053 48.2324 31.0354 49.1474 32.2069 49.707L34.7931 44.293C34.398 44.1043 33.7781 43.6487 33.1333 43.0869C32.8406 42.8319 32.5881 42.5952 32.4097 42.423C32.3211 42.3376 32.2524 42.2696 32.208 42.2251C32.1858 42.2029 32.1697 42.1866 32.1604 42.1771C32.1557 42.1724 32.1527 42.1694 32.1515 42.1681C32.1509 42.1675 32.1507 42.1673 32.151 42.1676C32.1511 42.1677 32.1514 42.168 32.1518 42.1684C32.1519 42.1685 32.1521 42.1688 32.1524 42.169C32.1525 42.1691 32.1527 42.1693 32.1528 42.1694C32.153 42.1696 32.1532 42.1698 30 44.2588ZM32.2069 49.707C34.3272 50.7199 35.8468 50.9186 37.8836 50.9977L38.1164 45.0023C36.5554 44.9416 35.9216 44.8321 34.7931 44.293L32.2069 49.707ZM37.8836 50.9977C40.1374 51.0853 42.3237 51.1497 45.0047 49.5954L41.9953 44.4046C40.899 45.0403 40.2255 45.0842 38.1164 45.0023L37.8836 50.9977ZM45.0047 49.5954C46.1648 48.9228 47.1808 47.8595 47.7858 47.1746C48.1197 46.7967 48.3989 46.4519 48.5955 46.2006C48.6944 46.0742 48.7741 45.9693 48.831 45.8933C48.8596 45.8552 48.8825 45.8242 48.8994 45.8012C48.9079 45.7896 48.9149 45.7801 48.9203 45.7726C48.923 45.7689 48.9254 45.7657 48.9273 45.763C48.9283 45.7617 48.9292 45.7605 48.9299 45.7594C48.9303 45.7588 48.9307 45.7583 48.931 45.7579C48.9312 45.7576 48.9314 45.7573 48.9315 45.7572C48.9317 45.7569 48.932 45.7566 46.5 44C44.068 42.2434 44.0682 42.2431 44.0685 42.2428C44.0685 42.2428 44.0687 42.2425 44.0688 42.2423C44.0691 42.242 44.0693 42.2417 44.0695 42.2414C44.0699 42.2409 44.0702 42.2404 44.0704 42.2402C44.0708 42.2396 44.0709 42.2395 44.0706 42.2399C44.07 42.2407 44.068 42.2434 44.0647 42.248C44.058 42.2571 44.0458 42.2735 44.0287 42.2964C43.9944 42.3422 43.9405 42.4133 43.8701 42.5032C43.7282 42.6845 43.5262 42.9339 43.2892 43.2021C42.7526 43.8095 42.2686 44.2462 41.9953 44.4046L45.0047 49.5954Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M96.3476 25.2591C101.131 18.7886 107.177 16 115.098 16C123.02 16 128.773 18.8841 133.466 25.2591C136.401 29.245 136.76 32.785 137.676 37.1108C139.614 46.2696 133.087 55.3281 124 58.5C118.658 60.3647 112.968 59.9843 107.5 58.5C100.104 56.4923 95.6317 52.3381 93.2864 45.2588C91.0049 38.3723 91.6005 31.6803 96.3476 25.2591Z\"\n        fill=\"#70C253\"\n      />\n      <path\n        d=\"M96.3476 25.2591L98.7599 27.0425L96.3476 25.2591ZM93.2864 45.2588L96.1342 44.3153L93.2864 45.2588ZM107.5 58.5L108.286 55.6048L107.5 58.5ZM124 58.5L124.989 61.3324L124 58.5ZM137.676 37.1108L140.611 36.4897L137.676 37.1108ZM133.466 25.2591L131.051 27.0377L133.466 25.2591ZM104.5 34C104.5 35.6569 105.843 37 107.5 37C109.157 37 110.5 35.6569 110.5 34H104.5ZM110.5 33C110.5 31.3431 109.157 30 107.5 30C105.843 30 104.5 31.3431 104.5 33H110.5ZM125.5 33C125.5 31.3431 124.157 30 122.5 30C120.843 30 119.5 31.3431 119.5 33H125.5ZM119.5 34C119.5 35.6569 120.843 37 122.5 37C124.157 37 125.5 35.6569 125.5 34H119.5ZM109.153 42.1698C107.999 40.9807 106.1 40.9519 104.911 42.1056C103.722 43.2593 103.693 45.1586 104.847 46.3478L109.153 42.1698ZM110.5 47L109.207 49.707V49.707L110.5 47ZM115 48L115.116 45.0023L115 48ZM120.5 47L118.995 44.4046H118.995L120.5 47ZM125.932 45.7566C126.902 44.4134 126.6 42.5382 125.257 41.568C123.913 40.5979 122.038 40.9003 121.068 42.2434L125.932 45.7566ZM115.098 13C106.292 13 99.3234 16.1874 93.9352 23.4757L98.7599 27.0425C102.939 21.3897 108.061 19 115.098 19V13ZM93.9352 23.4757C88.5502 30.7597 87.8826 38.487 90.4386 46.2022L96.1342 44.3153C94.1273 38.2576 94.6507 32.6008 98.7599 27.0425L93.9352 23.4757ZM90.4386 46.2022C91.7393 50.1284 93.6857 53.3989 96.4551 55.9771C99.2201 58.5511 102.653 60.2927 106.714 61.3952L108.286 55.6048C104.951 54.6996 102.45 53.3603 100.543 51.5855C98.6412 49.8148 97.1788 47.4685 96.1342 44.3153L90.4386 46.2022ZM106.714 61.3952C112.536 62.9756 118.885 63.463 124.989 61.3324L123.011 55.6676C118.431 57.2665 113.4 56.9929 108.286 55.6048L106.714 61.3952ZM124.989 61.3324C135.12 57.7957 142.938 47.4881 140.611 36.4897L134.741 37.7318C136.29 45.0511 131.053 52.8605 123.011 55.6676L124.989 61.3324ZM140.611 36.4897C139.754 32.4399 139.293 28.1133 135.882 23.4805L131.051 27.0377C133.509 30.3767 133.767 33.1301 134.741 37.7318L140.611 36.4897ZM135.882 23.4805C133.311 19.9872 130.354 17.3274 126.842 15.5593C123.331 13.7918 119.433 13 115.098 13V19C118.686 19 121.625 19.6503 124.144 20.9185C126.662 22.1863 128.929 24.1561 131.051 27.0377L135.882 23.4805ZM110.5 34V33H104.5V34H110.5ZM119.5 33V34H125.5V33H119.5ZM107 44.2588C104.847 46.3478 104.847 46.348 104.847 46.3482C104.847 46.3483 104.848 46.3486 104.848 46.3488C104.848 46.3491 104.849 46.3495 104.849 46.35C104.85 46.3508 104.851 46.3518 104.852 46.3529C104.854 46.3551 104.857 46.3578 104.86 46.361C104.866 46.3673 104.874 46.3755 104.884 46.3856C104.904 46.4056 104.931 46.4329 104.964 46.4667C105.032 46.5341 105.126 46.6276 105.243 46.7407C105.477 46.9656 105.805 47.2739 106.192 47.6107C106.905 48.2324 108.035 49.1474 109.207 49.707L111.793 44.293C111.398 44.1043 110.778 43.6487 110.133 43.0869C109.841 42.8319 109.588 42.5952 109.41 42.423C109.321 42.3376 109.252 42.2696 109.208 42.2251C109.186 42.2029 109.17 42.1866 109.16 42.1771C109.156 42.1724 109.153 42.1694 109.152 42.1681C109.151 42.1675 109.151 42.1673 109.151 42.1676C109.151 42.1677 109.151 42.168 109.152 42.1684C109.152 42.1685 109.152 42.1688 109.152 42.169C109.153 42.1691 109.153 42.1693 109.153 42.1694C109.153 42.1696 109.153 42.1698 107 44.2588ZM109.207 49.707C111.327 50.7199 112.847 50.9186 114.884 50.9977L115.116 45.0023C113.555 44.9416 112.922 44.8321 111.793 44.293L109.207 49.707ZM114.884 50.9977C117.137 51.0853 119.324 51.1497 122.005 49.5954L118.995 44.4046C117.899 45.0403 117.225 45.0842 115.116 45.0023L114.884 50.9977ZM122.005 49.5954C123.165 48.9228 124.181 47.8595 124.786 47.1746C125.12 46.7967 125.399 46.4519 125.596 46.2006C125.694 46.0742 125.774 45.9693 125.831 45.8933C125.86 45.8552 125.882 45.8242 125.899 45.8012C125.908 45.7896 125.915 45.7801 125.92 45.7726C125.923 45.7689 125.925 45.7657 125.927 45.763C125.928 45.7617 125.929 45.7605 125.93 45.7594C125.93 45.7588 125.931 45.7583 125.931 45.7579C125.931 45.7576 125.931 45.7573 125.932 45.7572C125.932 45.7569 125.932 45.7566 123.5 44C121.068 42.2434 121.068 42.2431 121.068 42.2428C121.069 42.2428 121.069 42.2425 121.069 42.2423C121.069 42.242 121.069 42.2417 121.069 42.2414C121.07 42.2409 121.07 42.2404 121.07 42.2402C121.071 42.2396 121.071 42.2395 121.071 42.2399C121.07 42.2407 121.068 42.2434 121.065 42.248C121.058 42.2571 121.046 42.2735 121.029 42.2964C120.994 42.3422 120.94 42.4133 120.87 42.5032C120.728 42.6845 120.526 42.9339 120.289 43.2021C119.753 43.8095 119.269 44.2462 118.995 44.4046L122.005 49.5954Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M250.348 25.2591C255.131 18.7886 261.177 16 269.098 16C277.02 16 282.773 18.8841 287.466 25.2591C290.401 29.245 290.76 32.785 291.676 37.1108C293.614 46.2696 287.087 55.3281 278 58.5C272.658 60.3647 266.968 59.9843 261.5 58.5C254.104 56.4923 249.632 52.3381 247.286 45.2588C245.005 38.3723 245.6 31.6803 250.348 25.2591Z\"\n        fill=\"#E94848\"\n      />\n      <path\n        d=\"M250.348 25.2591L252.76 27.0425L250.348 25.2591ZM247.286 45.2588L250.134 44.3153L247.286 45.2588ZM261.5 58.5L262.286 55.6048L261.5 58.5ZM278 58.5L278.989 61.3324L278 58.5ZM291.676 37.1108L294.611 36.4897L291.676 37.1108ZM287.466 25.2591L285.051 27.0377L287.466 25.2591ZM258.5 34C258.5 35.6569 259.843 37 261.5 37C263.157 37 264.5 35.6569 264.5 34H258.5ZM264.5 33C264.5 31.3431 263.157 30 261.5 30C259.843 30 258.5 31.3431 258.5 33H264.5ZM279.5 33C279.5 31.3431 278.157 30 276.5 30C274.843 30 273.5 31.3431 273.5 33H279.5ZM273.5 34C273.5 35.6569 274.843 37 276.5 37C278.157 37 279.5 35.6569 279.5 34H273.5ZM258.974 43.7877C257.752 44.9068 257.669 46.8045 258.788 48.0263C259.907 49.2481 261.805 49.3314 263.026 48.2123L258.974 43.7877ZM264.5 43.5L265.741 46.2312L264.5 43.5ZM269 42.5L269.064 45.4993H269.064L269 42.5ZM274 43.5L275.385 40.8386L274 43.5ZM274.789 48.0276C275.909 49.2487 277.806 49.3309 279.028 48.2111C280.249 47.0913 280.331 45.1935 279.211 43.9724L274.789 48.0276ZM269.098 13C260.292 13 253.323 16.1874 247.935 23.4757L252.76 27.0425C256.939 21.3897 262.061 19 269.098 19V13ZM247.935 23.4757C242.55 30.7597 241.883 38.487 244.439 46.2022L250.134 44.3153C248.127 38.2576 248.651 32.6008 252.76 27.0425L247.935 23.4757ZM244.439 46.2022C245.739 50.1284 247.686 53.3989 250.455 55.9771C253.22 58.5511 256.653 60.2927 260.714 61.3952L262.286 55.6048C258.951 54.6996 256.45 53.3603 254.543 51.5855C252.641 49.8148 251.179 47.4685 250.134 44.3153L244.439 46.2022ZM260.714 61.3952C266.536 62.9756 272.885 63.463 278.989 61.3324L277.011 55.6676C272.431 57.2665 267.4 56.9929 262.286 55.6048L260.714 61.3952ZM278.989 61.3324C289.12 57.7957 296.938 47.4881 294.611 36.4897L288.741 37.7318C290.29 45.0511 285.053 52.8605 277.011 55.6676L278.989 61.3324ZM294.611 36.4897C293.754 32.4399 293.293 28.1133 289.882 23.4805L285.051 27.0377C287.509 30.3767 287.767 33.1301 288.741 37.7318L294.611 36.4897ZM289.882 23.4805C287.311 19.9872 284.354 17.3274 280.842 15.5593C277.331 13.7918 273.433 13 269.098 13V19C272.686 19 275.625 19.6503 278.144 20.9185C280.662 22.1863 282.929 24.1561 285.051 27.0377L289.882 23.4805ZM264.5 34V33H258.5V34H264.5ZM273.5 33V34H279.5V33H273.5ZM261 46C263.026 48.2123 263.026 48.2124 263.026 48.2126C263.026 48.2127 263.026 48.2128 263.026 48.2129C263.025 48.2132 263.025 48.2133 263.025 48.2135C263.025 48.2138 263.024 48.214 263.024 48.2141C263.024 48.2142 263.024 48.214 263.025 48.2134C263.027 48.2121 263.03 48.2091 263.035 48.2047C263.045 48.1957 263.061 48.1807 263.084 48.1602C263.13 48.1191 263.201 48.0566 263.292 47.9782C263.475 47.8203 263.733 47.603 264.032 47.3681C264.683 46.8556 265.323 46.4213 265.741 46.2312L263.259 40.7688C262.148 41.2736 261.038 42.0893 260.321 42.653C259.936 42.9563 259.606 43.2337 259.372 43.436C259.254 43.5377 259.159 43.6216 259.091 43.682C259.057 43.7122 259.03 43.7366 259.01 43.7544C259 43.7634 258.992 43.7707 258.986 43.7763C258.983 43.779 258.981 43.7814 258.979 43.7833C258.977 43.7843 258.977 43.7851 258.976 43.7859C258.975 43.7862 258.975 43.7866 258.975 43.7869C258.974 43.787 258.974 43.7873 258.974 43.7873C258.974 43.7875 258.974 43.7877 261 46ZM265.741 46.2312C266.979 45.6687 267.635 45.5297 269.064 45.4993L268.936 39.5007C266.765 39.5469 265.299 39.8418 263.259 40.7688L265.741 46.2312ZM269.064 45.4993C270.783 45.4627 271.464 45.5625 272.615 46.1614L275.385 40.8386C273.003 39.5994 271.198 39.4526 268.936 39.5007L269.064 45.4993ZM272.615 46.1614C272.917 46.3182 273.423 46.7103 273.971 47.2168C274.216 47.4438 274.428 47.654 274.577 47.8067C274.652 47.8824 274.709 47.9424 274.745 47.9813C274.764 48.0007 274.777 48.0147 274.784 48.0227C274.788 48.0267 274.79 48.0291 274.791 48.03C274.791 48.0304 274.792 48.0304 274.791 48.03C274.791 48.0298 274.791 48.0295 274.79 48.0291C274.79 48.0289 274.79 48.0287 274.79 48.0284C274.79 48.0283 274.789 48.0281 274.789 48.028C274.789 48.0278 274.789 48.0276 277 46C279.211 43.9724 279.211 43.9722 279.211 43.9719C279.211 43.9718 279.21 43.9716 279.21 43.9714C279.21 43.971 279.209 43.9706 279.209 43.9702C279.208 43.9694 279.207 43.9684 279.206 43.9674C279.204 43.9652 279.202 43.9627 279.199 43.9597C279.194 43.9537 279.187 43.946 279.178 43.9366C279.161 43.918 279.137 43.8927 279.108 43.8616C279.049 43.7996 278.967 43.7137 278.866 43.6101C278.664 43.4039 278.379 43.1211 278.044 42.8111C277.43 42.2435 276.436 41.3857 275.385 40.8386L272.615 46.1614Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M327.348 25.2591C332.131 18.7886 338.177 16 346.098 16C354.02 16 359.773 18.8841 364.466 25.2591C367.401 29.245 367.76 32.785 368.676 37.1108C370.614 46.2696 364.087 55.3281 355 58.5C349.658 60.3647 343.968 59.9843 338.5 58.5C331.104 56.4923 326.632 52.3381 324.286 45.2588C322.005 38.3723 322.6 31.6803 327.348 25.2591Z\"\n        fill=\"#B160E2\"\n      />\n      <path\n        d=\"M327.348 25.2591L329.76 27.0425L327.348 25.2591ZM324.286 45.2588L327.134 44.3153L324.286 45.2588ZM338.5 58.5L339.286 55.6048L338.5 58.5ZM355 58.5L355.989 61.3324L355 58.5ZM368.676 37.1108L371.611 36.4897L368.676 37.1108ZM364.466 25.2591L362.051 27.0377L364.466 25.2591ZM335.551 31.6539C333.979 32.1779 333.13 33.8769 333.654 35.4487C334.178 37.0205 335.877 37.87 337.449 37.3461L335.551 31.6539ZM340.449 36.3461C342.021 35.8221 342.87 34.1231 342.346 32.5513C341.822 30.9795 340.123 30.13 338.551 30.6539L340.449 36.3461ZM352.949 30.6539C351.377 30.13 349.678 30.9795 349.154 32.5513C348.63 34.1231 349.479 35.8221 351.051 36.3461L352.949 30.6539ZM354.051 37.3461C355.623 37.87 357.322 37.0205 357.846 35.4487C358.37 33.8769 357.521 32.1779 355.949 31.6539L354.051 37.3461ZM335.974 43.7877C334.752 44.9068 334.669 46.8045 335.788 48.0263C336.907 49.2481 338.805 49.3314 340.026 48.2123L335.974 43.7877ZM341.5 43.5L342.741 46.2312L341.5 43.5ZM346 42.5L346.064 45.4993H346.064L346 42.5ZM351 43.5L352.385 40.8386L351 43.5ZM351.789 48.0276C352.909 49.2487 354.806 49.3309 356.028 48.2111C357.249 47.0913 357.331 45.1935 356.211 43.9724L351.789 48.0276ZM346.098 13C337.292 13 330.323 16.1874 324.935 23.4757L329.76 27.0425C333.939 21.3897 339.061 19 346.098 19V13ZM324.935 23.4757C319.55 30.7597 318.883 38.487 321.439 46.2022L327.134 44.3153C325.127 38.2576 325.651 32.6008 329.76 27.0425L324.935 23.4757ZM321.439 46.2022C322.739 50.1284 324.686 53.3989 327.455 55.9771C330.22 58.5511 333.653 60.2927 337.714 61.3952L339.286 55.6048C335.951 54.6996 333.45 53.3603 331.543 51.5855C329.641 49.8148 328.179 47.4685 327.134 44.3153L321.439 46.2022ZM337.714 61.3952C343.536 62.9756 349.885 63.463 355.989 61.3324L354.011 55.6676C349.431 57.2665 344.4 56.9929 339.286 55.6048L337.714 61.3952ZM355.989 61.3324C366.12 57.7957 373.938 47.4881 371.611 36.4897L365.741 37.7318C367.29 45.0511 362.053 52.8605 354.011 55.6676L355.989 61.3324ZM371.611 36.4897C370.754 32.4399 370.293 28.1133 366.882 23.4805L362.051 27.0377C364.509 30.3767 364.767 33.1301 365.741 37.7318L371.611 36.4897ZM366.882 23.4805C364.311 19.9872 361.354 17.3274 357.842 15.5593C354.331 13.7918 350.433 13 346.098 13V19C349.686 19 352.625 19.6503 355.144 20.9185C357.662 22.1863 359.929 24.1561 362.051 27.0377L366.882 23.4805ZM337.449 37.3461L340.449 36.3461L338.551 30.6539L335.551 31.6539L337.449 37.3461ZM351.051 36.3461L354.051 37.3461L355.949 31.6539L352.949 30.6539L351.051 36.3461ZM338 46C340.026 48.2123 340.026 48.2124 340.026 48.2126C340.026 48.2127 340.026 48.2128 340.026 48.2129C340.025 48.2132 340.025 48.2133 340.025 48.2135C340.025 48.2138 340.024 48.214 340.024 48.2141C340.024 48.2142 340.024 48.214 340.025 48.2134C340.027 48.2121 340.03 48.2091 340.035 48.2047C340.045 48.1957 340.061 48.1807 340.084 48.1602C340.13 48.1191 340.201 48.0566 340.292 47.9782C340.475 47.8203 340.733 47.603 341.032 47.3681C341.683 46.8556 342.323 46.4213 342.741 46.2312L340.259 40.7688C339.148 41.2736 338.038 42.0893 337.321 42.653C336.936 42.9563 336.606 43.2337 336.372 43.436C336.254 43.5377 336.159 43.6216 336.091 43.682C336.057 43.7122 336.03 43.7366 336.01 43.7544C336 43.7634 335.992 43.7707 335.986 43.7763C335.983 43.779 335.981 43.7814 335.979 43.7833C335.977 43.7843 335.977 43.7851 335.976 43.7859C335.975 43.7862 335.975 43.7866 335.975 43.7869C335.974 43.787 335.974 43.7873 335.974 43.7873C335.974 43.7875 335.974 43.7877 338 46ZM342.741 46.2312C343.979 45.6687 344.635 45.5297 346.064 45.4993L345.936 39.5007C343.765 39.5469 342.299 39.8418 340.259 40.7688L342.741 46.2312ZM346.064 45.4993C347.783 45.4627 348.464 45.5625 349.615 46.1614L352.385 40.8386C350.003 39.5994 348.198 39.4526 345.936 39.5007L346.064 45.4993ZM349.615 46.1614C349.917 46.3182 350.423 46.7103 350.971 47.2168C351.216 47.4438 351.428 47.654 351.577 47.8067C351.652 47.8824 351.709 47.9424 351.745 47.9813C351.764 48.0007 351.777 48.0147 351.784 48.0227C351.788 48.0267 351.79 48.0291 351.791 48.03C351.791 48.0304 351.792 48.0304 351.791 48.03C351.791 48.0298 351.791 48.0295 351.79 48.0291C351.79 48.0289 351.79 48.0287 351.79 48.0284C351.79 48.0283 351.789 48.0281 351.789 48.028C351.789 48.0278 351.789 48.0276 354 46C356.211 43.9724 356.211 43.9722 356.211 43.9719C356.211 43.9718 356.21 43.9716 356.21 43.9714C356.21 43.971 356.209 43.9706 356.209 43.9702C356.208 43.9694 356.207 43.9684 356.206 43.9674C356.204 43.9652 356.202 43.9627 356.199 43.9597C356.194 43.9537 356.187 43.946 356.178 43.9366C356.161 43.918 356.137 43.8927 356.108 43.8616C356.049 43.7996 355.967 43.7137 355.866 43.6101C355.664 43.4039 355.379 43.1211 355.044 42.8111C354.43 42.2435 353.436 41.3857 352.385 40.8386L349.615 46.1614Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M173.348 25.2591C178.131 18.7886 184.177 16 192.098 16C200.02 16 205.773 18.8841 210.466 25.2591C213.401 29.245 213.76 32.785 214.676 37.1108C216.614 46.2696 210.087 55.3281 201 58.5C195.658 60.3647 189.968 59.9843 184.5 58.5C177.104 56.4923 172.632 52.3381 170.286 45.2588C168.005 38.3723 168.6 31.6803 173.348 25.2591Z\"\n        fill=\"#FCDD3D\"\n      />\n      <path\n        d=\"M173.348 25.2591L175.76 27.0425L173.348 25.2591ZM170.286 45.2588L173.134 44.3153L170.286 45.2588ZM184.5 58.5L185.286 55.6048L184.5 58.5ZM201 58.5L201.989 61.3324L201 58.5ZM214.676 37.1108L217.611 36.4897L214.676 37.1108ZM210.466 25.2591L208.051 27.0377L210.466 25.2591ZM181.5 34C181.5 35.6569 182.843 37 184.5 37C186.157 37 187.5 35.6569 187.5 34H181.5ZM187.5 33C187.5 31.3431 186.157 30 184.5 30C182.843 30 181.5 31.3431 181.5 33H187.5ZM202.5 33C202.5 31.3431 201.157 30 199.5 30C197.843 30 196.5 31.3431 196.5 33H202.5ZM196.5 34C196.5 35.6569 197.843 37 199.5 37C201.157 37 202.5 35.6569 202.5 34H196.5ZM184.5 41C182.843 41 181.5 42.3431 181.5 44C181.5 45.6569 182.843 47 184.5 47V41ZM199.5 47C201.157 47 202.5 45.6569 202.5 44C202.5 42.3431 201.157 41 199.5 41V47ZM192.098 13C183.292 13 176.323 16.1874 170.935 23.4757L175.76 27.0425C179.939 21.3897 185.061 19 192.098 19V13ZM170.935 23.4757C165.55 30.7597 164.883 38.487 167.439 46.2022L173.134 44.3153C171.127 38.2576 171.651 32.6008 175.76 27.0425L170.935 23.4757ZM167.439 46.2022C168.739 50.1284 170.686 53.3989 173.455 55.9771C176.22 58.5511 179.653 60.2927 183.714 61.3952L185.286 55.6048C181.951 54.6996 179.45 53.3603 177.543 51.5855C175.641 49.8148 174.179 47.4685 173.134 44.3153L167.439 46.2022ZM183.714 61.3952C189.536 62.9756 195.885 63.463 201.989 61.3324L200.011 55.6676C195.431 57.2665 190.4 56.9929 185.286 55.6048L183.714 61.3952ZM201.989 61.3324C212.12 57.7957 219.938 47.4881 217.611 36.4897L211.741 37.7318C213.29 45.0511 208.053 52.8605 200.011 55.6676L201.989 61.3324ZM217.611 36.4897C216.754 32.4399 216.293 28.1133 212.882 23.4805L208.051 27.0377C210.509 30.3767 210.767 33.1301 211.741 37.7318L217.611 36.4897ZM212.882 23.4805C210.311 19.9872 207.354 17.3274 203.842 15.5593C200.331 13.7918 196.433 13 192.098 13V19C195.686 19 198.625 19.6503 201.144 20.9185C203.662 22.1863 205.929 24.1561 208.051 27.0377L212.882 23.4805ZM187.5 34V33H181.5V34H187.5ZM196.5 33V34H202.5V33H196.5ZM184.5 47H199.5V41H184.5V47Z\"\n        fill=\"#191919\"\n      />\n    </svg>\n  </div>\n</div>\n","date":"2023-01-12T21:38:10.620Z","updated":"2023-01-12T21:38:10.620Z","path":"playground/design/icons.html","title":"","comments":1,"layout":"page","_id":"cld7hh2rs000ctqwe6vo8e143","content":"<h1>놀이터 THEME</h1>\n<div>\n  <b>Reference : </b>\n  <b>날씨</b>\n  <div>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M19.1985 25.2591C23.8182 18.7886 29.6564 16 37.3066 16C44.9568 16 50.5126 18.8841 55.0449 25.2591C57.8787 29.245 58.2261 32.785 59.11 37.1108C60.9817 46.2696 54.2118 53.5682 45.4367 56.7401C40.2779 58.6048 36.6741 58.2244 31.3938 56.7401C24.2514 54.7324 18.5072 52.3381 16.2423 45.2588C14.039 38.3723 14.6142 31.6803 19.1985 25.2591Z\"\n        fill=\"#FCDD3D\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M27.1218 14.8992C31.108 9.379 36.1456 7 42.7467 7C49.3478 7 54.1417 9.46052 58.0525 14.8992C60.4977 18.2997 60.7974 21.3198 61.5602 25.0102C63.1751 32.8238 57.3336 39.0505 49.7619 41.7565C45.3105 43.3474 42.2009 43.0228 37.6447 41.7565C31.4818 40.0437 26.5253 38.0011 24.571 31.9615C22.6699 26.0864 23.1661 20.3773 27.1218 14.8992Z\"\n        fill=\"#FCDD3D\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M30.2178 21.9768C27.0259 20.9981 24.8052 20.798 21.6575 21.9768C19.0454 22.9551 17.404 24.2374 16.4694 26.8314C15.5111 29.4912 17.507 33.9856 17.507 33.9856C17.507 33.9856 8.72893 33.4249 6.87145 37.3072C5.79181 39.5637 5.63003 41.5205 6.87145 43.6948C8.14037 45.9173 12.5783 47.0164 12.5783 47.0164H18.5446C18.5446 47.0164 18.394 50.3271 19.5823 51.871C21.504 54.3678 25.7821 54.6798 28.9208 54.1706C31.6927 53.7208 31.9186 53.2254 34.3683 51.871C36.3535 50.7735 39.0376 47.0164 39.0376 47.0164C39.0376 47.0164 42.3464 50.4534 45.0039 51.871C49.0045 54.0051 51.9638 55.0853 56.4177 54.1706C61.0987 53.2091 64.8537 50.7354 66.2751 47.0164C67.7331 43.2014 66.2777 38.6887 62.384 37.3072C59.7669 36.3786 55.3801 38.5847 55.3801 38.5847C55.3801 38.5847 55.9822 35.6809 55.3801 33.9856C54.4292 31.3084 52.42 30.2379 49.6732 29.3865C46.0152 28.2526 40.0752 31.4305 40.0752 31.4305C40.0752 31.4305 38.3332 27.2936 36.1841 25.5539C34.2213 23.965 32.8222 22.7755 30.2178 21.9768Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M25.0323 59.9824V63.0526V66M42.3871 60.228V66M51 59V61.7017V64.4035M16 55.614V59.9824M16 65V67.5M34 57.5V64.4035M34 69V70.5M59 57.5V66\"\n        stroke=\"#5A9CFF\"\n        stroke-width=\"3\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M36.5557 9.90793C33.6165 8.81195 31.5715 8.58795 28.673 9.90791C26.2676 11.0033 24.7562 12.4391 23.8955 15.3439C23.0131 18.3221 24.851 23.3548 24.851 23.3548C24.851 23.3548 16.7677 22.727 15.0573 27.0741C14.0631 29.6009 13.9141 31.7921 15.0573 34.2267C16.2257 36.7153 20.3124 37.9461 20.3124 37.9461H25.8065C25.8065 37.9461 25.6678 41.6533 26.762 43.382C28.5316 46.1779 32.4711 46.5272 35.3614 45.957C37.9138 45.4534 38.1219 44.8986 40.3777 43.382C42.2057 42.1531 44.6774 37.9461 44.6774 37.9461C44.6774 37.9461 47.7243 41.7947 50.1714 43.382C53.8554 45.7717 56.5805 46.9813 60.6818 45.957C64.9923 44.8804 68.4501 42.1104 69.7589 37.9461C71.1016 33.6742 69.7613 28.6211 66.1758 27.0741C63.7659 26.0344 59.7263 28.5047 59.7263 28.5047C59.7263 28.5047 60.2808 25.2531 59.7263 23.3548C58.8507 20.3569 57.0005 19.1583 54.4711 18.2049C51.1027 16.9352 45.6329 20.4937 45.6329 20.4937C45.6329 20.4937 44.0287 15.8614 42.0498 13.9134C40.2423 12.1341 38.954 10.8022 36.5557 9.90793Z\"\n        fill=\"#9DBAD1\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M28.3009 19.1496C25.3617 18.0717 23.3167 17.8514 20.4182 19.1495C18.0128 20.2268 16.5014 21.6389 15.6407 24.4956C14.7583 27.4246 16.5962 32.3741 16.5962 32.3741C16.5962 32.3741 8.51293 31.7567 6.80247 36.0319C5.80829 38.5169 5.65932 40.6719 6.80247 43.0663C7.97096 45.5138 12.0577 46.7241 12.0577 46.7241H17.5517C17.5517 46.7241 17.413 50.37 18.5072 52.0702C20.2768 54.8198 24.2163 55.1634 27.1066 54.6026C29.6591 54.1073 29.8671 53.5617 32.1229 52.0702C33.9509 50.8616 36.4226 46.7241 36.4226 46.7241C36.4226 46.7241 39.4695 50.5091 41.9166 52.0702C45.6006 54.4204 48.3257 55.61 52.427 54.6026C56.7375 53.5438 60.1953 50.8196 61.5041 46.7241C62.8468 42.5229 61.5065 37.5533 57.9211 36.0319C55.5111 35.0094 51.4715 37.4388 51.4715 37.4388C51.4715 37.4388 52.026 34.2411 51.4715 32.3741C50.5959 29.4258 48.7457 28.247 46.2163 27.3094C42.8479 26.0607 37.3781 29.5604 37.3781 29.5604C37.3781 29.5604 35.7739 25.0046 33.795 23.0888C31.9875 21.339 30.6992 20.029 28.3009 19.1496Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M25.0323 59.9824V63.0526V66M42.3871 60.228V66M51 59V61.7017V64.4035M16 55.614V59.9824M16 65V67.5M34 57.5V64.4035M34 69V70.5M59 57.5V66\"\n        stroke=\"#5A9CFF\"\n        stroke-width=\"3\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M27.4018 22.7784C31.3212 17.3426 36.2743 15 42.7648 15C49.2554 15 53.9689 17.4229 57.8142 22.7784C60.2184 26.1268 60.5131 29.1007 61.2631 32.7347C62.851 40.4288 57.1073 46.5602 49.6625 49.2248C45.2857 50.7914 42.2283 50.4717 37.7484 49.2248C31.6887 47.5382 26.8153 45.5269 24.8937 39.5797C23.0244 33.7945 23.5124 28.1726 27.4018 22.7784Z\"\n        fill=\"#FCDD3D\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M30.6246 29.4319C27.5109 28.4665 25.3445 28.2692 22.274 29.4319C19.7258 30.3968 18.1247 31.6617 17.213 34.2204C16.2782 36.8439 18.2252 41.2771 18.2252 41.2771C18.2252 41.2771 9.66209 40.7241 7.8501 44.5535C6.79691 46.7793 6.6391 48.7095 7.8501 50.8541C9.08794 53.0463 13.4172 54.1305 13.4172 54.1305H19.2374C19.2374 54.1305 19.0904 57.3961 20.2496 58.919C22.1242 61.3818 26.2975 61.6895 29.3594 61.1872C32.0634 60.7436 32.2837 60.2549 34.6734 58.919C36.61 57.8364 39.2284 54.1305 39.2284 54.1305C39.2284 54.1305 42.4561 57.5207 45.0485 58.919C48.9511 61.024 51.838 62.0895 56.1827 61.1872C60.7491 60.2389 64.4121 57.7988 65.7986 54.1305C67.221 50.3674 65.8012 45.9162 62.0029 44.5535C59.4499 43.6376 55.1705 45.8136 55.1705 45.8136C55.1705 45.8136 55.7579 42.9494 55.1705 41.2771C54.243 38.6364 52.2829 37.5805 49.6034 36.7407C46.035 35.6222 40.2406 38.7569 40.2406 38.7569C40.2406 38.7569 38.5412 34.6763 36.4448 32.9603C34.53 31.393 33.1652 30.2197 30.6246 29.4319Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M35.9583 13.8226C33.1727 12.8296 31.2346 12.6267 28.4876 13.8225C26.208 14.8149 24.7756 16.1158 23.96 18.7474C23.1237 21.4456 24.8655 26.005 24.8655 26.005C24.8655 26.005 17.2048 25.4363 15.5838 29.3747C14.6416 31.6638 14.5004 33.649 15.5838 35.8547C16.6912 38.1094 20.5642 39.2244 20.5642 39.2244H25.771C25.771 39.2244 25.6396 42.583 26.6766 44.1492C28.3536 46.6822 32.0872 46.9986 34.8264 46.482C37.2454 46.0258 37.4426 45.5232 39.5804 44.1492C41.3129 43.0358 43.6553 39.2244 43.6553 39.2244C43.6553 39.2244 46.543 42.7111 48.8622 44.1492C52.3535 46.3142 54.9361 47.41 58.823 46.482C62.9082 45.5067 66.1852 42.9971 67.4256 39.2244C68.6981 35.3541 67.4279 30.7762 64.0299 29.3747C61.7459 28.4327 57.9175 30.6707 57.9175 30.6707C57.9175 30.6707 58.443 27.7249 57.9175 26.005C57.0877 23.2891 55.3342 22.2032 52.9371 21.3394C49.7447 20.1891 44.5609 23.413 44.5609 23.413C44.5609 23.413 43.0406 19.2162 41.1651 17.4514C39.4521 15.8394 38.2312 14.6327 35.9583 13.8226Z\"\n        fill=\"#9DBAD1\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M28.135 23.1998C25.3494 22.2253 23.4114 22.0261 20.6644 23.1998C18.3848 24.1738 16.9524 25.4506 16.1367 28.0335C15.3004 30.6817 17.0423 35.1567 17.0423 35.1567C17.0423 35.1567 9.38155 34.5985 7.76052 38.464C6.81831 40.7107 6.67713 42.6591 7.76052 44.824C8.86792 47.0369 12.741 48.1312 12.741 48.1312H17.9478C17.9478 48.1312 17.8163 51.4276 18.8533 52.9649C20.5304 55.4509 24.264 55.7615 27.0031 55.2545C29.4222 54.8067 29.6193 54.3134 31.7572 52.9649C33.4896 51.8721 35.8321 48.1312 35.8321 48.1312C35.8321 48.1312 38.7197 51.5534 41.0389 52.9649C44.5303 55.0898 47.1129 56.1653 50.9998 55.2545C55.085 54.2972 58.362 51.8341 59.6024 48.1312C60.8749 44.3327 59.6047 39.8395 56.2066 38.464C53.9227 37.5394 50.0943 39.736 50.0943 39.736C50.0943 39.736 50.6197 36.8447 50.0943 35.1567C49.2645 32.4911 47.511 31.4253 45.1138 30.5775C41.9215 29.4485 36.7376 32.6127 36.7376 32.6127C36.7376 32.6127 35.2174 28.4936 33.3419 26.7615C31.6289 25.1794 30.4079 23.995 28.135 23.1998Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M35.7106 68.7299L39.4864 55.3714H33.8228L39.4864 42.4304H47.793L41.7518 51.6143H46.2827L35.7106 68.7299Z\"\n        fill=\"#FCDD3D\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M29.7984 17.9974C26.3981 16.7934 24.0324 16.5474 20.6794 17.9973C17.8967 19.2007 16.1483 20.778 15.1527 23.9688C14.1319 27.2405 16.258 32.769 16.258 32.769C16.258 32.769 6.90703 32.0793 4.92832 36.8547C3.77823 39.6304 3.60589 42.0374 4.92832 44.712C6.28006 47.4457 11.0077 48.7977 11.0077 48.7977H17.3634C17.3634 48.7977 17.2029 52.8701 18.4687 54.7692C20.5158 57.8405 25.0732 58.2242 28.4167 57.5978C31.3695 57.0446 31.6101 56.4352 34.2197 54.7692C36.3344 53.4192 39.1938 48.7977 39.1938 48.7977C39.1938 48.7977 42.7185 53.0255 45.5494 54.7692C49.8111 57.3943 52.9636 58.723 57.7081 57.5978C62.6946 56.4152 66.6947 53.3723 68.2088 48.7977C69.7621 44.105 68.2116 38.5541 64.0638 36.8547C61.2759 35.7125 56.6028 38.4262 56.6028 38.4262C56.6028 38.4262 57.2442 34.8543 56.6028 32.769C55.5899 29.4758 53.4495 28.1591 50.5234 27.1117C46.6267 25.717 40.2991 29.6261 40.2991 29.6261C40.2991 29.6261 38.4434 24.5373 36.1541 22.3974C34.0631 20.4429 32.5727 18.9797 29.7984 17.9974Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M36.0188 13.9203C32.969 12.8094 30.8472 12.5823 27.8397 13.9202C25.344 15.0305 23.7758 16.4859 22.8828 19.4301C21.9672 22.4488 23.8742 27.5499 23.8742 27.5499C23.8742 27.5499 15.4871 26.9136 13.7123 31.3198C12.6808 33.8809 12.5262 36.1019 13.7123 38.5696C14.9247 41.0921 19.165 42.3396 19.165 42.3396H24.8656C24.8656 42.3396 24.7216 46.0971 25.857 47.8494C27.693 50.6833 31.7806 51.0373 34.7795 50.4593C37.4279 49.9489 37.6438 49.3866 39.9844 47.8494C41.8811 46.6037 44.4457 42.3396 44.4457 42.3396C44.4457 42.3396 47.6071 46.2405 50.1462 47.8494C53.9686 50.2716 56.7961 51.4976 61.0516 50.4593C65.5241 49.3682 69.1118 46.5605 70.4698 42.3396C71.863 38.0096 70.4723 32.8878 66.7521 31.3198C64.2516 30.2659 60.0602 32.7698 60.0602 32.7698C60.0602 32.7698 60.6355 29.4741 60.0602 27.5499C59.1517 24.5113 57.2319 23.2964 54.6075 22.33C51.1124 21.0431 45.4371 24.65 45.4371 24.65C45.4371 24.65 43.7726 19.9546 41.7193 17.9801C39.8439 16.1767 38.5071 14.8267 36.0188 13.9203Z\"\n        fill=\"#9DBAD1\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M27.1391 24.97C24.0893 23.8862 21.9675 23.6647 18.96 24.97C16.4643 26.0532 14.8961 27.4731 14.0031 30.3455C13.0875 33.2906 14.9945 38.2673 14.9945 38.2673C14.9945 38.2673 6.60737 37.6464 4.83263 41.9452C3.80109 44.4438 3.64651 46.6106 4.83263 49.0182C6.04503 51.4791 10.2853 52.6962 10.2853 52.6962H15.9859C15.9859 52.6962 15.8419 56.3621 16.9773 58.0717C18.8133 60.8364 22.9009 61.1818 25.8998 60.6179C28.5482 60.12 28.7641 59.5714 31.1047 58.0717C33.0014 56.8563 35.566 52.6962 35.566 52.6962C35.566 52.6962 38.7274 56.5019 41.2665 58.0717C45.0889 60.4347 47.9164 61.6308 52.1719 60.6179C56.6444 59.5534 60.2321 56.8142 61.5901 52.6962C62.9833 48.4718 61.5926 43.475 57.8724 41.9452C55.3719 40.917 51.1805 43.3598 51.1805 43.3598C51.1805 43.3598 51.7558 40.1445 51.1805 38.2673C50.272 35.3028 48.3522 34.1175 45.7278 33.1747C42.2327 31.9191 36.5574 35.4381 36.5574 35.4381C36.5574 35.4381 34.8929 30.8572 32.8396 28.9309C30.9642 27.1715 29.6274 25.8543 27.1391 24.97Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M20.5034 25.9951C20.5034 28.9441 24.4056 33.6719 26.7597 35.5891C23.6315 38.2358 22.6572 38.8006 20.5034 41.8749C18.4757 44.7691 17.7572 47.0105 18.0703 50.4764C18.4084 54.2182 19.6454 56.5768 22.5888 59.0779C26.2481 62.1874 29.8757 63.219 34.7539 63.7095C40.5724 64.2947 44.9079 64.2584 49.6997 61.0629C53.153 58.76 54.5704 56.3513 55.6085 52.4614C56.6825 48.4368 56.6161 45.5401 54.5658 41.8749C51.9824 37.2566 45.5287 34.5966 45.5287 34.5966C45.5287 34.5966 48.331 31.8647 49.6997 28.6417C50.8697 25.8868 50.7103 23.8442 49.6997 21.0327C47.8351 15.845 43.2755 13.5434 37.5346 13.0928C32.0814 12.6648 26.1475 13.6173 23.2839 18.0552C22.5888 19.1324 20.5034 20.7019 20.5034 25.9951Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M30.1852 22.4597V24.1048M41.5 23.2823L41.9352 23.6935M26.7597 35.5891C24.4056 33.6719 20.5034 28.9441 20.5034 25.9951C20.5034 20.7019 22.5888 19.1324 23.2839 18.0552C26.1475 13.6173 32.0814 12.6648 37.5346 13.0928C43.2755 13.5434 47.8351 15.845 49.6997 21.0327C50.7103 23.8442 50.8697 25.8868 49.6997 28.6417C48.331 31.8647 45.5287 34.5966 45.5287 34.5966C45.5287 34.5966 51.9824 37.2566 54.5658 41.8749C56.6161 45.5401 56.6825 48.4368 55.6085 52.4614C54.5704 56.3513 53.1531 58.76 49.6997 61.0629C44.9079 64.2584 40.5724 64.2947 34.7539 63.7095C29.8757 63.219 26.2481 62.1874 22.5888 59.0779C19.6454 56.5768 18.4084 54.2182 18.0703 50.4764C17.7572 47.0105 18.4757 44.7691 20.5034 41.8749C22.6572 38.8006 23.6315 38.2358 26.7597 35.5891Z\"\n        stroke=\"black\"\n        stroke-width=\"6\"\n        stroke-linecap=\"round\"\n      />\n      <path\n        d=\"M46.2871 33.1532L61.0834 29.0403M46.2871 33.1532L65 37.6774M46.2871 33.1532L48.8982 35.2097L21.9906 36.2632V33.579L46.2871 33.1532Z\"\n        stroke=\"#E94848\"\n        stroke-width=\"6\"\n        stroke-linecap=\"round\"\n      />\n    </svg>\n\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14 26.3651C14 26.3651 19.8053 17.502 25.2316 16.1721C32.8256 14.3108 38.9161 28.1639 46.6737 28.1639C59.4368 28.1639 62.5 18.5704 62.5 18.5704M14 40.7553C14 40.7553 19.8053 31.8922 25.2316 30.5623C32.8256 28.701 38.9161 42.5541 46.6737 42.5541C59.4368 42.5541 62.5 32.9606 62.5 32.9606M14 56.3447C14 56.3447 19.8053 47.4816 25.2316 46.1516C32.8256 44.2904 38.9161 58.1435 46.6737 58.1435C59.4368 58.1435 62.5 48.55 62.5 48.55\"\n        stroke=\"#9DBAD1\"\n        stroke-width=\"6\"\n        stroke-linecap=\"round\"\n      />\n    </svg>\n  </div>\n  <b>감정</b>\n  <div>\n    <svg\n      width=\"383\"\n      height=\"75\"\n      viewBox=\"0 0 383 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M19.3476 25.2591C24.1312 18.7886 30.1767 16 38.0984 16C46.0202 16 51.7732 18.8841 56.4664 25.2591C59.4008 29.245 59.7605 32.785 60.6759 37.1108C62.6139 46.2696 56.0865 55.3281 47 58.5C41.6581 60.3647 35.9678 59.9843 30.5 58.5C23.1041 56.4923 18.6317 52.3381 16.2864 45.2588C14.0049 38.3723 14.6005 31.6803 19.3476 25.2591Z\"\n        fill=\"#5A9CFF\"\n      />\n      <path\n        d=\"M19.3476 25.2591L21.7599 27.0425L19.3476 25.2591ZM16.2864 45.2588L19.1342 44.3153L16.2864 45.2588ZM30.5 58.5L31.2859 55.6048L30.5 58.5ZM47 58.5L47.9887 61.3324L47 58.5ZM60.6759 37.1108L63.6109 36.4897L60.6759 37.1108ZM56.4664 25.2591L54.0505 27.0377L56.4664 25.2591ZM30.1858 28.0067C29.0849 26.7684 27.1886 26.6571 25.9504 27.758C24.7122 28.8589 24.6008 30.7551 25.7017 31.9933L30.1858 28.0067ZM31.5 34L33.2059 36.4678C33.9127 35.9792 34.3761 35.211 34.4786 34.3579C34.5811 33.5049 34.3129 32.6488 33.742 32.0067L31.5 34ZM25.2941 34.643C23.9312 35.5852 23.5901 37.4538 24.5322 38.8167C25.4744 40.1796 27.343 40.5207 28.7059 39.5785L25.2941 34.643ZM50.7346 32.1609C51.9281 31.0116 51.9639 29.1125 50.8146 27.919C49.6653 26.7256 47.7662 26.6898 46.5727 27.8391L50.7346 32.1609ZM44.5 34L42.419 31.8391C41.7852 32.4494 41.4513 33.3073 41.5057 34.1855C41.5601 35.0637 41.9974 35.8738 42.7017 36.4012L44.5 34ZM46.8553 39.512C48.1815 40.5052 50.0617 40.2353 51.0549 38.9091C52.0481 37.5829 51.7782 35.7027 50.452 34.7095L46.8553 39.512ZM32.1532 42.1698C30.9995 40.9807 29.1002 40.9519 27.911 42.1056C26.7219 43.2593 26.6931 45.1586 27.8468 46.3478L32.1532 42.1698ZM33.5 47L32.2069 49.707V49.707L33.5 47ZM38 48L38.1164 45.0023L38 48ZM43.5 47L41.9953 44.4046H41.9953L43.5 47ZM48.932 45.7566C49.9021 44.4134 49.5997 42.5382 48.2566 41.568C46.9134 40.5979 45.0382 40.9003 44.068 42.2434L48.932 45.7566ZM38.0984 13C29.2924 13 22.3234 16.1874 16.9352 23.4757L21.7599 27.0425C25.939 21.3897 31.0609 19 38.0984 19V13ZM16.9352 23.4757C11.5502 30.7597 10.8826 38.487 13.4386 46.2022L19.1342 44.3153C17.1273 38.2576 17.6507 32.6008 21.7599 27.0425L16.9352 23.4757ZM13.4386 46.2022C14.7393 50.1284 16.6857 53.3989 19.4551 55.9771C22.2201 58.5511 25.6527 60.2927 29.7141 61.3952L31.2859 55.6048C27.9514 54.6996 25.4498 53.3603 23.5433 51.5855C21.6412 49.8148 20.1788 47.4685 19.1342 44.3153L13.4386 46.2022ZM29.7141 61.3952C35.536 62.9756 41.8851 63.463 47.9887 61.3324L46.0113 55.6676C41.431 57.2665 36.3996 56.9929 31.2859 55.6048L29.7141 61.3952ZM47.9887 61.3324C58.1204 57.7957 65.9382 47.4881 63.6109 36.4897L57.7408 37.7318C59.2897 45.0511 54.0527 52.8605 46.0113 55.6676L47.9887 61.3324ZM63.6109 36.4897C62.7539 32.4399 62.293 28.1133 58.8824 23.4805L54.0505 27.0377C56.5087 30.3767 56.7671 33.1301 57.7408 37.7318L63.6109 36.4897ZM58.8824 23.4805C56.3106 19.9872 53.3541 17.3274 49.8421 15.5593C46.3312 13.7918 42.4328 13 38.0984 13V19C41.6859 19 44.6249 19.6503 47.1442 20.9185C49.6625 22.1863 51.9291 24.1561 54.0505 27.0377L58.8824 23.4805ZM25.7017 31.9933L29.258 35.9933L33.742 32.0067L30.1858 28.0067L25.7017 31.9933ZM29.7941 31.5322L25.2941 34.643L28.7059 39.5785L33.2059 36.4678L29.7941 31.5322ZM46.5727 27.8391L42.419 31.8391L46.581 36.1609L50.7346 32.1609L46.5727 27.8391ZM42.7017 36.4012L46.8553 39.512L50.452 34.7095L46.2983 31.5988L42.7017 36.4012ZM30 44.2588C27.8468 46.3478 27.847 46.348 27.8473 46.3482C27.8474 46.3483 27.8476 46.3486 27.8478 46.3488C27.8481 46.3491 27.8485 46.3495 27.849 46.35C27.8498 46.3508 27.8507 46.3518 27.8518 46.3529C27.854 46.3551 27.8566 46.3578 27.8597 46.361C27.8659 46.3673 27.8739 46.3755 27.8838 46.3856C27.9036 46.4056 27.9306 46.4329 27.9643 46.4667C28.0317 46.5341 28.1263 46.6276 28.2434 46.7407C28.4765 46.9656 28.8053 47.2739 29.1918 47.6107C29.9053 48.2324 31.0354 49.1474 32.2069 49.707L34.7931 44.293C34.398 44.1043 33.7781 43.6487 33.1333 43.0869C32.8406 42.8319 32.5881 42.5952 32.4097 42.423C32.3211 42.3376 32.2524 42.2696 32.208 42.2251C32.1858 42.2029 32.1697 42.1866 32.1604 42.1771C32.1557 42.1724 32.1527 42.1694 32.1515 42.1681C32.1509 42.1675 32.1507 42.1673 32.151 42.1676C32.1511 42.1677 32.1514 42.168 32.1518 42.1684C32.1519 42.1685 32.1521 42.1688 32.1524 42.169C32.1525 42.1691 32.1527 42.1693 32.1528 42.1694C32.153 42.1696 32.1532 42.1698 30 44.2588ZM32.2069 49.707C34.3272 50.7199 35.8468 50.9186 37.8836 50.9977L38.1164 45.0023C36.5554 44.9416 35.9216 44.8321 34.7931 44.293L32.2069 49.707ZM37.8836 50.9977C40.1374 51.0853 42.3237 51.1497 45.0047 49.5954L41.9953 44.4046C40.899 45.0403 40.2255 45.0842 38.1164 45.0023L37.8836 50.9977ZM45.0047 49.5954C46.1648 48.9228 47.1808 47.8595 47.7858 47.1746C48.1197 46.7967 48.3989 46.4519 48.5955 46.2006C48.6944 46.0742 48.7741 45.9693 48.831 45.8933C48.8596 45.8552 48.8825 45.8242 48.8994 45.8012C48.9079 45.7896 48.9149 45.7801 48.9203 45.7726C48.923 45.7689 48.9254 45.7657 48.9273 45.763C48.9283 45.7617 48.9292 45.7605 48.9299 45.7594C48.9303 45.7588 48.9307 45.7583 48.931 45.7579C48.9312 45.7576 48.9314 45.7573 48.9315 45.7572C48.9317 45.7569 48.932 45.7566 46.5 44C44.068 42.2434 44.0682 42.2431 44.0685 42.2428C44.0685 42.2428 44.0687 42.2425 44.0688 42.2423C44.0691 42.242 44.0693 42.2417 44.0695 42.2414C44.0699 42.2409 44.0702 42.2404 44.0704 42.2402C44.0708 42.2396 44.0709 42.2395 44.0706 42.2399C44.07 42.2407 44.068 42.2434 44.0647 42.248C44.058 42.2571 44.0458 42.2735 44.0287 42.2964C43.9944 42.3422 43.9405 42.4133 43.8701 42.5032C43.7282 42.6845 43.5262 42.9339 43.2892 43.2021C42.7526 43.8095 42.2686 44.2462 41.9953 44.4046L45.0047 49.5954Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M96.3476 25.2591C101.131 18.7886 107.177 16 115.098 16C123.02 16 128.773 18.8841 133.466 25.2591C136.401 29.245 136.76 32.785 137.676 37.1108C139.614 46.2696 133.087 55.3281 124 58.5C118.658 60.3647 112.968 59.9843 107.5 58.5C100.104 56.4923 95.6317 52.3381 93.2864 45.2588C91.0049 38.3723 91.6005 31.6803 96.3476 25.2591Z\"\n        fill=\"#70C253\"\n      />\n      <path\n        d=\"M96.3476 25.2591L98.7599 27.0425L96.3476 25.2591ZM93.2864 45.2588L96.1342 44.3153L93.2864 45.2588ZM107.5 58.5L108.286 55.6048L107.5 58.5ZM124 58.5L124.989 61.3324L124 58.5ZM137.676 37.1108L140.611 36.4897L137.676 37.1108ZM133.466 25.2591L131.051 27.0377L133.466 25.2591ZM104.5 34C104.5 35.6569 105.843 37 107.5 37C109.157 37 110.5 35.6569 110.5 34H104.5ZM110.5 33C110.5 31.3431 109.157 30 107.5 30C105.843 30 104.5 31.3431 104.5 33H110.5ZM125.5 33C125.5 31.3431 124.157 30 122.5 30C120.843 30 119.5 31.3431 119.5 33H125.5ZM119.5 34C119.5 35.6569 120.843 37 122.5 37C124.157 37 125.5 35.6569 125.5 34H119.5ZM109.153 42.1698C107.999 40.9807 106.1 40.9519 104.911 42.1056C103.722 43.2593 103.693 45.1586 104.847 46.3478L109.153 42.1698ZM110.5 47L109.207 49.707V49.707L110.5 47ZM115 48L115.116 45.0023L115 48ZM120.5 47L118.995 44.4046H118.995L120.5 47ZM125.932 45.7566C126.902 44.4134 126.6 42.5382 125.257 41.568C123.913 40.5979 122.038 40.9003 121.068 42.2434L125.932 45.7566ZM115.098 13C106.292 13 99.3234 16.1874 93.9352 23.4757L98.7599 27.0425C102.939 21.3897 108.061 19 115.098 19V13ZM93.9352 23.4757C88.5502 30.7597 87.8826 38.487 90.4386 46.2022L96.1342 44.3153C94.1273 38.2576 94.6507 32.6008 98.7599 27.0425L93.9352 23.4757ZM90.4386 46.2022C91.7393 50.1284 93.6857 53.3989 96.4551 55.9771C99.2201 58.5511 102.653 60.2927 106.714 61.3952L108.286 55.6048C104.951 54.6996 102.45 53.3603 100.543 51.5855C98.6412 49.8148 97.1788 47.4685 96.1342 44.3153L90.4386 46.2022ZM106.714 61.3952C112.536 62.9756 118.885 63.463 124.989 61.3324L123.011 55.6676C118.431 57.2665 113.4 56.9929 108.286 55.6048L106.714 61.3952ZM124.989 61.3324C135.12 57.7957 142.938 47.4881 140.611 36.4897L134.741 37.7318C136.29 45.0511 131.053 52.8605 123.011 55.6676L124.989 61.3324ZM140.611 36.4897C139.754 32.4399 139.293 28.1133 135.882 23.4805L131.051 27.0377C133.509 30.3767 133.767 33.1301 134.741 37.7318L140.611 36.4897ZM135.882 23.4805C133.311 19.9872 130.354 17.3274 126.842 15.5593C123.331 13.7918 119.433 13 115.098 13V19C118.686 19 121.625 19.6503 124.144 20.9185C126.662 22.1863 128.929 24.1561 131.051 27.0377L135.882 23.4805ZM110.5 34V33H104.5V34H110.5ZM119.5 33V34H125.5V33H119.5ZM107 44.2588C104.847 46.3478 104.847 46.348 104.847 46.3482C104.847 46.3483 104.848 46.3486 104.848 46.3488C104.848 46.3491 104.849 46.3495 104.849 46.35C104.85 46.3508 104.851 46.3518 104.852 46.3529C104.854 46.3551 104.857 46.3578 104.86 46.361C104.866 46.3673 104.874 46.3755 104.884 46.3856C104.904 46.4056 104.931 46.4329 104.964 46.4667C105.032 46.5341 105.126 46.6276 105.243 46.7407C105.477 46.9656 105.805 47.2739 106.192 47.6107C106.905 48.2324 108.035 49.1474 109.207 49.707L111.793 44.293C111.398 44.1043 110.778 43.6487 110.133 43.0869C109.841 42.8319 109.588 42.5952 109.41 42.423C109.321 42.3376 109.252 42.2696 109.208 42.2251C109.186 42.2029 109.17 42.1866 109.16 42.1771C109.156 42.1724 109.153 42.1694 109.152 42.1681C109.151 42.1675 109.151 42.1673 109.151 42.1676C109.151 42.1677 109.151 42.168 109.152 42.1684C109.152 42.1685 109.152 42.1688 109.152 42.169C109.153 42.1691 109.153 42.1693 109.153 42.1694C109.153 42.1696 109.153 42.1698 107 44.2588ZM109.207 49.707C111.327 50.7199 112.847 50.9186 114.884 50.9977L115.116 45.0023C113.555 44.9416 112.922 44.8321 111.793 44.293L109.207 49.707ZM114.884 50.9977C117.137 51.0853 119.324 51.1497 122.005 49.5954L118.995 44.4046C117.899 45.0403 117.225 45.0842 115.116 45.0023L114.884 50.9977ZM122.005 49.5954C123.165 48.9228 124.181 47.8595 124.786 47.1746C125.12 46.7967 125.399 46.4519 125.596 46.2006C125.694 46.0742 125.774 45.9693 125.831 45.8933C125.86 45.8552 125.882 45.8242 125.899 45.8012C125.908 45.7896 125.915 45.7801 125.92 45.7726C125.923 45.7689 125.925 45.7657 125.927 45.763C125.928 45.7617 125.929 45.7605 125.93 45.7594C125.93 45.7588 125.931 45.7583 125.931 45.7579C125.931 45.7576 125.931 45.7573 125.932 45.7572C125.932 45.7569 125.932 45.7566 123.5 44C121.068 42.2434 121.068 42.2431 121.068 42.2428C121.069 42.2428 121.069 42.2425 121.069 42.2423C121.069 42.242 121.069 42.2417 121.069 42.2414C121.07 42.2409 121.07 42.2404 121.07 42.2402C121.071 42.2396 121.071 42.2395 121.071 42.2399C121.07 42.2407 121.068 42.2434 121.065 42.248C121.058 42.2571 121.046 42.2735 121.029 42.2964C120.994 42.3422 120.94 42.4133 120.87 42.5032C120.728 42.6845 120.526 42.9339 120.289 43.2021C119.753 43.8095 119.269 44.2462 118.995 44.4046L122.005 49.5954Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M250.348 25.2591C255.131 18.7886 261.177 16 269.098 16C277.02 16 282.773 18.8841 287.466 25.2591C290.401 29.245 290.76 32.785 291.676 37.1108C293.614 46.2696 287.087 55.3281 278 58.5C272.658 60.3647 266.968 59.9843 261.5 58.5C254.104 56.4923 249.632 52.3381 247.286 45.2588C245.005 38.3723 245.6 31.6803 250.348 25.2591Z\"\n        fill=\"#E94848\"\n      />\n      <path\n        d=\"M250.348 25.2591L252.76 27.0425L250.348 25.2591ZM247.286 45.2588L250.134 44.3153L247.286 45.2588ZM261.5 58.5L262.286 55.6048L261.5 58.5ZM278 58.5L278.989 61.3324L278 58.5ZM291.676 37.1108L294.611 36.4897L291.676 37.1108ZM287.466 25.2591L285.051 27.0377L287.466 25.2591ZM258.5 34C258.5 35.6569 259.843 37 261.5 37C263.157 37 264.5 35.6569 264.5 34H258.5ZM264.5 33C264.5 31.3431 263.157 30 261.5 30C259.843 30 258.5 31.3431 258.5 33H264.5ZM279.5 33C279.5 31.3431 278.157 30 276.5 30C274.843 30 273.5 31.3431 273.5 33H279.5ZM273.5 34C273.5 35.6569 274.843 37 276.5 37C278.157 37 279.5 35.6569 279.5 34H273.5ZM258.974 43.7877C257.752 44.9068 257.669 46.8045 258.788 48.0263C259.907 49.2481 261.805 49.3314 263.026 48.2123L258.974 43.7877ZM264.5 43.5L265.741 46.2312L264.5 43.5ZM269 42.5L269.064 45.4993H269.064L269 42.5ZM274 43.5L275.385 40.8386L274 43.5ZM274.789 48.0276C275.909 49.2487 277.806 49.3309 279.028 48.2111C280.249 47.0913 280.331 45.1935 279.211 43.9724L274.789 48.0276ZM269.098 13C260.292 13 253.323 16.1874 247.935 23.4757L252.76 27.0425C256.939 21.3897 262.061 19 269.098 19V13ZM247.935 23.4757C242.55 30.7597 241.883 38.487 244.439 46.2022L250.134 44.3153C248.127 38.2576 248.651 32.6008 252.76 27.0425L247.935 23.4757ZM244.439 46.2022C245.739 50.1284 247.686 53.3989 250.455 55.9771C253.22 58.5511 256.653 60.2927 260.714 61.3952L262.286 55.6048C258.951 54.6996 256.45 53.3603 254.543 51.5855C252.641 49.8148 251.179 47.4685 250.134 44.3153L244.439 46.2022ZM260.714 61.3952C266.536 62.9756 272.885 63.463 278.989 61.3324L277.011 55.6676C272.431 57.2665 267.4 56.9929 262.286 55.6048L260.714 61.3952ZM278.989 61.3324C289.12 57.7957 296.938 47.4881 294.611 36.4897L288.741 37.7318C290.29 45.0511 285.053 52.8605 277.011 55.6676L278.989 61.3324ZM294.611 36.4897C293.754 32.4399 293.293 28.1133 289.882 23.4805L285.051 27.0377C287.509 30.3767 287.767 33.1301 288.741 37.7318L294.611 36.4897ZM289.882 23.4805C287.311 19.9872 284.354 17.3274 280.842 15.5593C277.331 13.7918 273.433 13 269.098 13V19C272.686 19 275.625 19.6503 278.144 20.9185C280.662 22.1863 282.929 24.1561 285.051 27.0377L289.882 23.4805ZM264.5 34V33H258.5V34H264.5ZM273.5 33V34H279.5V33H273.5ZM261 46C263.026 48.2123 263.026 48.2124 263.026 48.2126C263.026 48.2127 263.026 48.2128 263.026 48.2129C263.025 48.2132 263.025 48.2133 263.025 48.2135C263.025 48.2138 263.024 48.214 263.024 48.2141C263.024 48.2142 263.024 48.214 263.025 48.2134C263.027 48.2121 263.03 48.2091 263.035 48.2047C263.045 48.1957 263.061 48.1807 263.084 48.1602C263.13 48.1191 263.201 48.0566 263.292 47.9782C263.475 47.8203 263.733 47.603 264.032 47.3681C264.683 46.8556 265.323 46.4213 265.741 46.2312L263.259 40.7688C262.148 41.2736 261.038 42.0893 260.321 42.653C259.936 42.9563 259.606 43.2337 259.372 43.436C259.254 43.5377 259.159 43.6216 259.091 43.682C259.057 43.7122 259.03 43.7366 259.01 43.7544C259 43.7634 258.992 43.7707 258.986 43.7763C258.983 43.779 258.981 43.7814 258.979 43.7833C258.977 43.7843 258.977 43.7851 258.976 43.7859C258.975 43.7862 258.975 43.7866 258.975 43.7869C258.974 43.787 258.974 43.7873 258.974 43.7873C258.974 43.7875 258.974 43.7877 261 46ZM265.741 46.2312C266.979 45.6687 267.635 45.5297 269.064 45.4993L268.936 39.5007C266.765 39.5469 265.299 39.8418 263.259 40.7688L265.741 46.2312ZM269.064 45.4993C270.783 45.4627 271.464 45.5625 272.615 46.1614L275.385 40.8386C273.003 39.5994 271.198 39.4526 268.936 39.5007L269.064 45.4993ZM272.615 46.1614C272.917 46.3182 273.423 46.7103 273.971 47.2168C274.216 47.4438 274.428 47.654 274.577 47.8067C274.652 47.8824 274.709 47.9424 274.745 47.9813C274.764 48.0007 274.777 48.0147 274.784 48.0227C274.788 48.0267 274.79 48.0291 274.791 48.03C274.791 48.0304 274.792 48.0304 274.791 48.03C274.791 48.0298 274.791 48.0295 274.79 48.0291C274.79 48.0289 274.79 48.0287 274.79 48.0284C274.79 48.0283 274.789 48.0281 274.789 48.028C274.789 48.0278 274.789 48.0276 277 46C279.211 43.9724 279.211 43.9722 279.211 43.9719C279.211 43.9718 279.21 43.9716 279.21 43.9714C279.21 43.971 279.209 43.9706 279.209 43.9702C279.208 43.9694 279.207 43.9684 279.206 43.9674C279.204 43.9652 279.202 43.9627 279.199 43.9597C279.194 43.9537 279.187 43.946 279.178 43.9366C279.161 43.918 279.137 43.8927 279.108 43.8616C279.049 43.7996 278.967 43.7137 278.866 43.6101C278.664 43.4039 278.379 43.1211 278.044 42.8111C277.43 42.2435 276.436 41.3857 275.385 40.8386L272.615 46.1614Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M327.348 25.2591C332.131 18.7886 338.177 16 346.098 16C354.02 16 359.773 18.8841 364.466 25.2591C367.401 29.245 367.76 32.785 368.676 37.1108C370.614 46.2696 364.087 55.3281 355 58.5C349.658 60.3647 343.968 59.9843 338.5 58.5C331.104 56.4923 326.632 52.3381 324.286 45.2588C322.005 38.3723 322.6 31.6803 327.348 25.2591Z\"\n        fill=\"#B160E2\"\n      />\n      <path\n        d=\"M327.348 25.2591L329.76 27.0425L327.348 25.2591ZM324.286 45.2588L327.134 44.3153L324.286 45.2588ZM338.5 58.5L339.286 55.6048L338.5 58.5ZM355 58.5L355.989 61.3324L355 58.5ZM368.676 37.1108L371.611 36.4897L368.676 37.1108ZM364.466 25.2591L362.051 27.0377L364.466 25.2591ZM335.551 31.6539C333.979 32.1779 333.13 33.8769 333.654 35.4487C334.178 37.0205 335.877 37.87 337.449 37.3461L335.551 31.6539ZM340.449 36.3461C342.021 35.8221 342.87 34.1231 342.346 32.5513C341.822 30.9795 340.123 30.13 338.551 30.6539L340.449 36.3461ZM352.949 30.6539C351.377 30.13 349.678 30.9795 349.154 32.5513C348.63 34.1231 349.479 35.8221 351.051 36.3461L352.949 30.6539ZM354.051 37.3461C355.623 37.87 357.322 37.0205 357.846 35.4487C358.37 33.8769 357.521 32.1779 355.949 31.6539L354.051 37.3461ZM335.974 43.7877C334.752 44.9068 334.669 46.8045 335.788 48.0263C336.907 49.2481 338.805 49.3314 340.026 48.2123L335.974 43.7877ZM341.5 43.5L342.741 46.2312L341.5 43.5ZM346 42.5L346.064 45.4993H346.064L346 42.5ZM351 43.5L352.385 40.8386L351 43.5ZM351.789 48.0276C352.909 49.2487 354.806 49.3309 356.028 48.2111C357.249 47.0913 357.331 45.1935 356.211 43.9724L351.789 48.0276ZM346.098 13C337.292 13 330.323 16.1874 324.935 23.4757L329.76 27.0425C333.939 21.3897 339.061 19 346.098 19V13ZM324.935 23.4757C319.55 30.7597 318.883 38.487 321.439 46.2022L327.134 44.3153C325.127 38.2576 325.651 32.6008 329.76 27.0425L324.935 23.4757ZM321.439 46.2022C322.739 50.1284 324.686 53.3989 327.455 55.9771C330.22 58.5511 333.653 60.2927 337.714 61.3952L339.286 55.6048C335.951 54.6996 333.45 53.3603 331.543 51.5855C329.641 49.8148 328.179 47.4685 327.134 44.3153L321.439 46.2022ZM337.714 61.3952C343.536 62.9756 349.885 63.463 355.989 61.3324L354.011 55.6676C349.431 57.2665 344.4 56.9929 339.286 55.6048L337.714 61.3952ZM355.989 61.3324C366.12 57.7957 373.938 47.4881 371.611 36.4897L365.741 37.7318C367.29 45.0511 362.053 52.8605 354.011 55.6676L355.989 61.3324ZM371.611 36.4897C370.754 32.4399 370.293 28.1133 366.882 23.4805L362.051 27.0377C364.509 30.3767 364.767 33.1301 365.741 37.7318L371.611 36.4897ZM366.882 23.4805C364.311 19.9872 361.354 17.3274 357.842 15.5593C354.331 13.7918 350.433 13 346.098 13V19C349.686 19 352.625 19.6503 355.144 20.9185C357.662 22.1863 359.929 24.1561 362.051 27.0377L366.882 23.4805ZM337.449 37.3461L340.449 36.3461L338.551 30.6539L335.551 31.6539L337.449 37.3461ZM351.051 36.3461L354.051 37.3461L355.949 31.6539L352.949 30.6539L351.051 36.3461ZM338 46C340.026 48.2123 340.026 48.2124 340.026 48.2126C340.026 48.2127 340.026 48.2128 340.026 48.2129C340.025 48.2132 340.025 48.2133 340.025 48.2135C340.025 48.2138 340.024 48.214 340.024 48.2141C340.024 48.2142 340.024 48.214 340.025 48.2134C340.027 48.2121 340.03 48.2091 340.035 48.2047C340.045 48.1957 340.061 48.1807 340.084 48.1602C340.13 48.1191 340.201 48.0566 340.292 47.9782C340.475 47.8203 340.733 47.603 341.032 47.3681C341.683 46.8556 342.323 46.4213 342.741 46.2312L340.259 40.7688C339.148 41.2736 338.038 42.0893 337.321 42.653C336.936 42.9563 336.606 43.2337 336.372 43.436C336.254 43.5377 336.159 43.6216 336.091 43.682C336.057 43.7122 336.03 43.7366 336.01 43.7544C336 43.7634 335.992 43.7707 335.986 43.7763C335.983 43.779 335.981 43.7814 335.979 43.7833C335.977 43.7843 335.977 43.7851 335.976 43.7859C335.975 43.7862 335.975 43.7866 335.975 43.7869C335.974 43.787 335.974 43.7873 335.974 43.7873C335.974 43.7875 335.974 43.7877 338 46ZM342.741 46.2312C343.979 45.6687 344.635 45.5297 346.064 45.4993L345.936 39.5007C343.765 39.5469 342.299 39.8418 340.259 40.7688L342.741 46.2312ZM346.064 45.4993C347.783 45.4627 348.464 45.5625 349.615 46.1614L352.385 40.8386C350.003 39.5994 348.198 39.4526 345.936 39.5007L346.064 45.4993ZM349.615 46.1614C349.917 46.3182 350.423 46.7103 350.971 47.2168C351.216 47.4438 351.428 47.654 351.577 47.8067C351.652 47.8824 351.709 47.9424 351.745 47.9813C351.764 48.0007 351.777 48.0147 351.784 48.0227C351.788 48.0267 351.79 48.0291 351.791 48.03C351.791 48.0304 351.792 48.0304 351.791 48.03C351.791 48.0298 351.791 48.0295 351.79 48.0291C351.79 48.0289 351.79 48.0287 351.79 48.0284C351.79 48.0283 351.789 48.0281 351.789 48.028C351.789 48.0278 351.789 48.0276 354 46C356.211 43.9724 356.211 43.9722 356.211 43.9719C356.211 43.9718 356.21 43.9716 356.21 43.9714C356.21 43.971 356.209 43.9706 356.209 43.9702C356.208 43.9694 356.207 43.9684 356.206 43.9674C356.204 43.9652 356.202 43.9627 356.199 43.9597C356.194 43.9537 356.187 43.946 356.178 43.9366C356.161 43.918 356.137 43.8927 356.108 43.8616C356.049 43.7996 355.967 43.7137 355.866 43.6101C355.664 43.4039 355.379 43.1211 355.044 42.8111C354.43 42.2435 353.436 41.3857 352.385 40.8386L349.615 46.1614Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M173.348 25.2591C178.131 18.7886 184.177 16 192.098 16C200.02 16 205.773 18.8841 210.466 25.2591C213.401 29.245 213.76 32.785 214.676 37.1108C216.614 46.2696 210.087 55.3281 201 58.5C195.658 60.3647 189.968 59.9843 184.5 58.5C177.104 56.4923 172.632 52.3381 170.286 45.2588C168.005 38.3723 168.6 31.6803 173.348 25.2591Z\"\n        fill=\"#FCDD3D\"\n      />\n      <path\n        d=\"M173.348 25.2591L175.76 27.0425L173.348 25.2591ZM170.286 45.2588L173.134 44.3153L170.286 45.2588ZM184.5 58.5L185.286 55.6048L184.5 58.5ZM201 58.5L201.989 61.3324L201 58.5ZM214.676 37.1108L217.611 36.4897L214.676 37.1108ZM210.466 25.2591L208.051 27.0377L210.466 25.2591ZM181.5 34C181.5 35.6569 182.843 37 184.5 37C186.157 37 187.5 35.6569 187.5 34H181.5ZM187.5 33C187.5 31.3431 186.157 30 184.5 30C182.843 30 181.5 31.3431 181.5 33H187.5ZM202.5 33C202.5 31.3431 201.157 30 199.5 30C197.843 30 196.5 31.3431 196.5 33H202.5ZM196.5 34C196.5 35.6569 197.843 37 199.5 37C201.157 37 202.5 35.6569 202.5 34H196.5ZM184.5 41C182.843 41 181.5 42.3431 181.5 44C181.5 45.6569 182.843 47 184.5 47V41ZM199.5 47C201.157 47 202.5 45.6569 202.5 44C202.5 42.3431 201.157 41 199.5 41V47ZM192.098 13C183.292 13 176.323 16.1874 170.935 23.4757L175.76 27.0425C179.939 21.3897 185.061 19 192.098 19V13ZM170.935 23.4757C165.55 30.7597 164.883 38.487 167.439 46.2022L173.134 44.3153C171.127 38.2576 171.651 32.6008 175.76 27.0425L170.935 23.4757ZM167.439 46.2022C168.739 50.1284 170.686 53.3989 173.455 55.9771C176.22 58.5511 179.653 60.2927 183.714 61.3952L185.286 55.6048C181.951 54.6996 179.45 53.3603 177.543 51.5855C175.641 49.8148 174.179 47.4685 173.134 44.3153L167.439 46.2022ZM183.714 61.3952C189.536 62.9756 195.885 63.463 201.989 61.3324L200.011 55.6676C195.431 57.2665 190.4 56.9929 185.286 55.6048L183.714 61.3952ZM201.989 61.3324C212.12 57.7957 219.938 47.4881 217.611 36.4897L211.741 37.7318C213.29 45.0511 208.053 52.8605 200.011 55.6676L201.989 61.3324ZM217.611 36.4897C216.754 32.4399 216.293 28.1133 212.882 23.4805L208.051 27.0377C210.509 30.3767 210.767 33.1301 211.741 37.7318L217.611 36.4897ZM212.882 23.4805C210.311 19.9872 207.354 17.3274 203.842 15.5593C200.331 13.7918 196.433 13 192.098 13V19C195.686 19 198.625 19.6503 201.144 20.9185C203.662 22.1863 205.929 24.1561 208.051 27.0377L212.882 23.4805ZM187.5 34V33H181.5V34H187.5ZM196.5 33V34H202.5V33H196.5ZM184.5 47H199.5V41H184.5V47Z\"\n        fill=\"#191919\"\n      />\n    </svg>\n  </div>\n</div>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1>놀이터 THEME</h1>\n<div>\n  <b>Reference : </b>\n  <b>날씨</b>\n  <div>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M19.1985 25.2591C23.8182 18.7886 29.6564 16 37.3066 16C44.9568 16 50.5126 18.8841 55.0449 25.2591C57.8787 29.245 58.2261 32.785 59.11 37.1108C60.9817 46.2696 54.2118 53.5682 45.4367 56.7401C40.2779 58.6048 36.6741 58.2244 31.3938 56.7401C24.2514 54.7324 18.5072 52.3381 16.2423 45.2588C14.039 38.3723 14.6142 31.6803 19.1985 25.2591Z\"\n        fill=\"#FCDD3D\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M27.1218 14.8992C31.108 9.379 36.1456 7 42.7467 7C49.3478 7 54.1417 9.46052 58.0525 14.8992C60.4977 18.2997 60.7974 21.3198 61.5602 25.0102C63.1751 32.8238 57.3336 39.0505 49.7619 41.7565C45.3105 43.3474 42.2009 43.0228 37.6447 41.7565C31.4818 40.0437 26.5253 38.0011 24.571 31.9615C22.6699 26.0864 23.1661 20.3773 27.1218 14.8992Z\"\n        fill=\"#FCDD3D\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M30.2178 21.9768C27.0259 20.9981 24.8052 20.798 21.6575 21.9768C19.0454 22.9551 17.404 24.2374 16.4694 26.8314C15.5111 29.4912 17.507 33.9856 17.507 33.9856C17.507 33.9856 8.72893 33.4249 6.87145 37.3072C5.79181 39.5637 5.63003 41.5205 6.87145 43.6948C8.14037 45.9173 12.5783 47.0164 12.5783 47.0164H18.5446C18.5446 47.0164 18.394 50.3271 19.5823 51.871C21.504 54.3678 25.7821 54.6798 28.9208 54.1706C31.6927 53.7208 31.9186 53.2254 34.3683 51.871C36.3535 50.7735 39.0376 47.0164 39.0376 47.0164C39.0376 47.0164 42.3464 50.4534 45.0039 51.871C49.0045 54.0051 51.9638 55.0853 56.4177 54.1706C61.0987 53.2091 64.8537 50.7354 66.2751 47.0164C67.7331 43.2014 66.2777 38.6887 62.384 37.3072C59.7669 36.3786 55.3801 38.5847 55.3801 38.5847C55.3801 38.5847 55.9822 35.6809 55.3801 33.9856C54.4292 31.3084 52.42 30.2379 49.6732 29.3865C46.0152 28.2526 40.0752 31.4305 40.0752 31.4305C40.0752 31.4305 38.3332 27.2936 36.1841 25.5539C34.2213 23.965 32.8222 22.7755 30.2178 21.9768Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M25.0323 59.9824V63.0526V66M42.3871 60.228V66M51 59V61.7017V64.4035M16 55.614V59.9824M16 65V67.5M34 57.5V64.4035M34 69V70.5M59 57.5V66\"\n        stroke=\"#5A9CFF\"\n        stroke-width=\"3\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M36.5557 9.90793C33.6165 8.81195 31.5715 8.58795 28.673 9.90791C26.2676 11.0033 24.7562 12.4391 23.8955 15.3439C23.0131 18.3221 24.851 23.3548 24.851 23.3548C24.851 23.3548 16.7677 22.727 15.0573 27.0741C14.0631 29.6009 13.9141 31.7921 15.0573 34.2267C16.2257 36.7153 20.3124 37.9461 20.3124 37.9461H25.8065C25.8065 37.9461 25.6678 41.6533 26.762 43.382C28.5316 46.1779 32.4711 46.5272 35.3614 45.957C37.9138 45.4534 38.1219 44.8986 40.3777 43.382C42.2057 42.1531 44.6774 37.9461 44.6774 37.9461C44.6774 37.9461 47.7243 41.7947 50.1714 43.382C53.8554 45.7717 56.5805 46.9813 60.6818 45.957C64.9923 44.8804 68.4501 42.1104 69.7589 37.9461C71.1016 33.6742 69.7613 28.6211 66.1758 27.0741C63.7659 26.0344 59.7263 28.5047 59.7263 28.5047C59.7263 28.5047 60.2808 25.2531 59.7263 23.3548C58.8507 20.3569 57.0005 19.1583 54.4711 18.2049C51.1027 16.9352 45.6329 20.4937 45.6329 20.4937C45.6329 20.4937 44.0287 15.8614 42.0498 13.9134C40.2423 12.1341 38.954 10.8022 36.5557 9.90793Z\"\n        fill=\"#9DBAD1\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M28.3009 19.1496C25.3617 18.0717 23.3167 17.8514 20.4182 19.1495C18.0128 20.2268 16.5014 21.6389 15.6407 24.4956C14.7583 27.4246 16.5962 32.3741 16.5962 32.3741C16.5962 32.3741 8.51293 31.7567 6.80247 36.0319C5.80829 38.5169 5.65932 40.6719 6.80247 43.0663C7.97096 45.5138 12.0577 46.7241 12.0577 46.7241H17.5517C17.5517 46.7241 17.413 50.37 18.5072 52.0702C20.2768 54.8198 24.2163 55.1634 27.1066 54.6026C29.6591 54.1073 29.8671 53.5617 32.1229 52.0702C33.9509 50.8616 36.4226 46.7241 36.4226 46.7241C36.4226 46.7241 39.4695 50.5091 41.9166 52.0702C45.6006 54.4204 48.3257 55.61 52.427 54.6026C56.7375 53.5438 60.1953 50.8196 61.5041 46.7241C62.8468 42.5229 61.5065 37.5533 57.9211 36.0319C55.5111 35.0094 51.4715 37.4388 51.4715 37.4388C51.4715 37.4388 52.026 34.2411 51.4715 32.3741C50.5959 29.4258 48.7457 28.247 46.2163 27.3094C42.8479 26.0607 37.3781 29.5604 37.3781 29.5604C37.3781 29.5604 35.7739 25.0046 33.795 23.0888C31.9875 21.339 30.6992 20.029 28.3009 19.1496Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M25.0323 59.9824V63.0526V66M42.3871 60.228V66M51 59V61.7017V64.4035M16 55.614V59.9824M16 65V67.5M34 57.5V64.4035M34 69V70.5M59 57.5V66\"\n        stroke=\"#5A9CFF\"\n        stroke-width=\"3\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M27.4018 22.7784C31.3212 17.3426 36.2743 15 42.7648 15C49.2554 15 53.9689 17.4229 57.8142 22.7784C60.2184 26.1268 60.5131 29.1007 61.2631 32.7347C62.851 40.4288 57.1073 46.5602 49.6625 49.2248C45.2857 50.7914 42.2283 50.4717 37.7484 49.2248C31.6887 47.5382 26.8153 45.5269 24.8937 39.5797C23.0244 33.7945 23.5124 28.1726 27.4018 22.7784Z\"\n        fill=\"#FCDD3D\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M30.6246 29.4319C27.5109 28.4665 25.3445 28.2692 22.274 29.4319C19.7258 30.3968 18.1247 31.6617 17.213 34.2204C16.2782 36.8439 18.2252 41.2771 18.2252 41.2771C18.2252 41.2771 9.66209 40.7241 7.8501 44.5535C6.79691 46.7793 6.6391 48.7095 7.8501 50.8541C9.08794 53.0463 13.4172 54.1305 13.4172 54.1305H19.2374C19.2374 54.1305 19.0904 57.3961 20.2496 58.919C22.1242 61.3818 26.2975 61.6895 29.3594 61.1872C32.0634 60.7436 32.2837 60.2549 34.6734 58.919C36.61 57.8364 39.2284 54.1305 39.2284 54.1305C39.2284 54.1305 42.4561 57.5207 45.0485 58.919C48.9511 61.024 51.838 62.0895 56.1827 61.1872C60.7491 60.2389 64.4121 57.7988 65.7986 54.1305C67.221 50.3674 65.8012 45.9162 62.0029 44.5535C59.4499 43.6376 55.1705 45.8136 55.1705 45.8136C55.1705 45.8136 55.7579 42.9494 55.1705 41.2771C54.243 38.6364 52.2829 37.5805 49.6034 36.7407C46.035 35.6222 40.2406 38.7569 40.2406 38.7569C40.2406 38.7569 38.5412 34.6763 36.4448 32.9603C34.53 31.393 33.1652 30.2197 30.6246 29.4319Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M35.9583 13.8226C33.1727 12.8296 31.2346 12.6267 28.4876 13.8225C26.208 14.8149 24.7756 16.1158 23.96 18.7474C23.1237 21.4456 24.8655 26.005 24.8655 26.005C24.8655 26.005 17.2048 25.4363 15.5838 29.3747C14.6416 31.6638 14.5004 33.649 15.5838 35.8547C16.6912 38.1094 20.5642 39.2244 20.5642 39.2244H25.771C25.771 39.2244 25.6396 42.583 26.6766 44.1492C28.3536 46.6822 32.0872 46.9986 34.8264 46.482C37.2454 46.0258 37.4426 45.5232 39.5804 44.1492C41.3129 43.0358 43.6553 39.2244 43.6553 39.2244C43.6553 39.2244 46.543 42.7111 48.8622 44.1492C52.3535 46.3142 54.9361 47.41 58.823 46.482C62.9082 45.5067 66.1852 42.9971 67.4256 39.2244C68.6981 35.3541 67.4279 30.7762 64.0299 29.3747C61.7459 28.4327 57.9175 30.6707 57.9175 30.6707C57.9175 30.6707 58.443 27.7249 57.9175 26.005C57.0877 23.2891 55.3342 22.2032 52.9371 21.3394C49.7447 20.1891 44.5609 23.413 44.5609 23.413C44.5609 23.413 43.0406 19.2162 41.1651 17.4514C39.4521 15.8394 38.2312 14.6327 35.9583 13.8226Z\"\n        fill=\"#9DBAD1\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M28.135 23.1998C25.3494 22.2253 23.4114 22.0261 20.6644 23.1998C18.3848 24.1738 16.9524 25.4506 16.1367 28.0335C15.3004 30.6817 17.0423 35.1567 17.0423 35.1567C17.0423 35.1567 9.38155 34.5985 7.76052 38.464C6.81831 40.7107 6.67713 42.6591 7.76052 44.824C8.86792 47.0369 12.741 48.1312 12.741 48.1312H17.9478C17.9478 48.1312 17.8163 51.4276 18.8533 52.9649C20.5304 55.4509 24.264 55.7615 27.0031 55.2545C29.4222 54.8067 29.6193 54.3134 31.7572 52.9649C33.4896 51.8721 35.8321 48.1312 35.8321 48.1312C35.8321 48.1312 38.7197 51.5534 41.0389 52.9649C44.5303 55.0898 47.1129 56.1653 50.9998 55.2545C55.085 54.2972 58.362 51.8341 59.6024 48.1312C60.8749 44.3327 59.6047 39.8395 56.2066 38.464C53.9227 37.5394 50.0943 39.736 50.0943 39.736C50.0943 39.736 50.6197 36.8447 50.0943 35.1567C49.2645 32.4911 47.511 31.4253 45.1138 30.5775C41.9215 29.4485 36.7376 32.6127 36.7376 32.6127C36.7376 32.6127 35.2174 28.4936 33.3419 26.7615C31.6289 25.1794 30.4079 23.995 28.135 23.1998Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M35.7106 68.7299L39.4864 55.3714H33.8228L39.4864 42.4304H47.793L41.7518 51.6143H46.2827L35.7106 68.7299Z\"\n        fill=\"#FCDD3D\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M29.7984 17.9974C26.3981 16.7934 24.0324 16.5474 20.6794 17.9973C17.8967 19.2007 16.1483 20.778 15.1527 23.9688C14.1319 27.2405 16.258 32.769 16.258 32.769C16.258 32.769 6.90703 32.0793 4.92832 36.8547C3.77823 39.6304 3.60589 42.0374 4.92832 44.712C6.28006 47.4457 11.0077 48.7977 11.0077 48.7977H17.3634C17.3634 48.7977 17.2029 52.8701 18.4687 54.7692C20.5158 57.8405 25.0732 58.2242 28.4167 57.5978C31.3695 57.0446 31.6101 56.4352 34.2197 54.7692C36.3344 53.4192 39.1938 48.7977 39.1938 48.7977C39.1938 48.7977 42.7185 53.0255 45.5494 54.7692C49.8111 57.3943 52.9636 58.723 57.7081 57.5978C62.6946 56.4152 66.6947 53.3723 68.2088 48.7977C69.7621 44.105 68.2116 38.5541 64.0638 36.8547C61.2759 35.7125 56.6028 38.4262 56.6028 38.4262C56.6028 38.4262 57.2442 34.8543 56.6028 32.769C55.5899 29.4758 53.4495 28.1591 50.5234 27.1117C46.6267 25.717 40.2991 29.6261 40.2991 29.6261C40.2991 29.6261 38.4434 24.5373 36.1541 22.3974C34.0631 20.4429 32.5727 18.9797 29.7984 17.9974Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M36.0188 13.9203C32.969 12.8094 30.8472 12.5823 27.8397 13.9202C25.344 15.0305 23.7758 16.4859 22.8828 19.4301C21.9672 22.4488 23.8742 27.5499 23.8742 27.5499C23.8742 27.5499 15.4871 26.9136 13.7123 31.3198C12.6808 33.8809 12.5262 36.1019 13.7123 38.5696C14.9247 41.0921 19.165 42.3396 19.165 42.3396H24.8656C24.8656 42.3396 24.7216 46.0971 25.857 47.8494C27.693 50.6833 31.7806 51.0373 34.7795 50.4593C37.4279 49.9489 37.6438 49.3866 39.9844 47.8494C41.8811 46.6037 44.4457 42.3396 44.4457 42.3396C44.4457 42.3396 47.6071 46.2405 50.1462 47.8494C53.9686 50.2716 56.7961 51.4976 61.0516 50.4593C65.5241 49.3682 69.1118 46.5605 70.4698 42.3396C71.863 38.0096 70.4723 32.8878 66.7521 31.3198C64.2516 30.2659 60.0602 32.7698 60.0602 32.7698C60.0602 32.7698 60.6355 29.4741 60.0602 27.5499C59.1517 24.5113 57.2319 23.2964 54.6075 22.33C51.1124 21.0431 45.4371 24.65 45.4371 24.65C45.4371 24.65 43.7726 19.9546 41.7193 17.9801C39.8439 16.1767 38.5071 14.8267 36.0188 13.9203Z\"\n        fill=\"#9DBAD1\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n      <path\n        d=\"M27.1391 24.97C24.0893 23.8862 21.9675 23.6647 18.96 24.97C16.4643 26.0532 14.8961 27.4731 14.0031 30.3455C13.0875 33.2906 14.9945 38.2673 14.9945 38.2673C14.9945 38.2673 6.60737 37.6464 4.83263 41.9452C3.80109 44.4438 3.64651 46.6106 4.83263 49.0182C6.04503 51.4791 10.2853 52.6962 10.2853 52.6962H15.9859C15.9859 52.6962 15.8419 56.3621 16.9773 58.0717C18.8133 60.8364 22.9009 61.1818 25.8998 60.6179C28.5482 60.12 28.7641 59.5714 31.1047 58.0717C33.0014 56.8563 35.566 52.6962 35.566 52.6962C35.566 52.6962 38.7274 56.5019 41.2665 58.0717C45.0889 60.4347 47.9164 61.6308 52.1719 60.6179C56.6444 59.5534 60.2321 56.8142 61.5901 52.6962C62.9833 48.4718 61.5926 43.475 57.8724 41.9452C55.3719 40.917 51.1805 43.3598 51.1805 43.3598C51.1805 43.3598 51.7558 40.1445 51.1805 38.2673C50.272 35.3028 48.3522 34.1175 45.7278 33.1747C42.2327 31.9191 36.5574 35.4381 36.5574 35.4381C36.5574 35.4381 34.8929 30.8572 32.8396 28.9309C30.9642 27.1715 29.6274 25.8543 27.1391 24.97Z\"\n        fill=\"#E4EFFF\"\n        stroke=\"#191919\"\n        stroke-width=\"6\"\n      />\n    </svg>\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M20.5034 25.9951C20.5034 28.9441 24.4056 33.6719 26.7597 35.5891C23.6315 38.2358 22.6572 38.8006 20.5034 41.8749C18.4757 44.7691 17.7572 47.0105 18.0703 50.4764C18.4084 54.2182 19.6454 56.5768 22.5888 59.0779C26.2481 62.1874 29.8757 63.219 34.7539 63.7095C40.5724 64.2947 44.9079 64.2584 49.6997 61.0629C53.153 58.76 54.5704 56.3513 55.6085 52.4614C56.6825 48.4368 56.6161 45.5401 54.5658 41.8749C51.9824 37.2566 45.5287 34.5966 45.5287 34.5966C45.5287 34.5966 48.331 31.8647 49.6997 28.6417C50.8697 25.8868 50.7103 23.8442 49.6997 21.0327C47.8351 15.845 43.2755 13.5434 37.5346 13.0928C32.0814 12.6648 26.1475 13.6173 23.2839 18.0552C22.5888 19.1324 20.5034 20.7019 20.5034 25.9951Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M30.1852 22.4597V24.1048M41.5 23.2823L41.9352 23.6935M26.7597 35.5891C24.4056 33.6719 20.5034 28.9441 20.5034 25.9951C20.5034 20.7019 22.5888 19.1324 23.2839 18.0552C26.1475 13.6173 32.0814 12.6648 37.5346 13.0928C43.2755 13.5434 47.8351 15.845 49.6997 21.0327C50.7103 23.8442 50.8697 25.8868 49.6997 28.6417C48.331 31.8647 45.5287 34.5966 45.5287 34.5966C45.5287 34.5966 51.9824 37.2566 54.5658 41.8749C56.6161 45.5401 56.6825 48.4368 55.6085 52.4614C54.5704 56.3513 53.1531 58.76 49.6997 61.0629C44.9079 64.2584 40.5724 64.2947 34.7539 63.7095C29.8757 63.219 26.2481 62.1874 22.5888 59.0779C19.6454 56.5768 18.4084 54.2182 18.0703 50.4764C17.7572 47.0105 18.4757 44.7691 20.5034 41.8749C22.6572 38.8006 23.6315 38.2358 26.7597 35.5891Z\"\n        stroke=\"black\"\n        stroke-width=\"6\"\n        stroke-linecap=\"round\"\n      />\n      <path\n        d=\"M46.2871 33.1532L61.0834 29.0403M46.2871 33.1532L65 37.6774M46.2871 33.1532L48.8982 35.2097L21.9906 36.2632V33.579L46.2871 33.1532Z\"\n        stroke=\"#E94848\"\n        stroke-width=\"6\"\n        stroke-linecap=\"round\"\n      />\n    </svg>\n\n    <svg\n      width=\"75\"\n      height=\"75\"\n      viewBox=\"0 0 75 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14 26.3651C14 26.3651 19.8053 17.502 25.2316 16.1721C32.8256 14.3108 38.9161 28.1639 46.6737 28.1639C59.4368 28.1639 62.5 18.5704 62.5 18.5704M14 40.7553C14 40.7553 19.8053 31.8922 25.2316 30.5623C32.8256 28.701 38.9161 42.5541 46.6737 42.5541C59.4368 42.5541 62.5 32.9606 62.5 32.9606M14 56.3447C14 56.3447 19.8053 47.4816 25.2316 46.1516C32.8256 44.2904 38.9161 58.1435 46.6737 58.1435C59.4368 58.1435 62.5 48.55 62.5 48.55\"\n        stroke=\"#9DBAD1\"\n        stroke-width=\"6\"\n        stroke-linecap=\"round\"\n      />\n    </svg>\n  </div>\n  <b>감정</b>\n  <div>\n    <svg\n      width=\"383\"\n      height=\"75\"\n      viewBox=\"0 0 383 75\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M19.3476 25.2591C24.1312 18.7886 30.1767 16 38.0984 16C46.0202 16 51.7732 18.8841 56.4664 25.2591C59.4008 29.245 59.7605 32.785 60.6759 37.1108C62.6139 46.2696 56.0865 55.3281 47 58.5C41.6581 60.3647 35.9678 59.9843 30.5 58.5C23.1041 56.4923 18.6317 52.3381 16.2864 45.2588C14.0049 38.3723 14.6005 31.6803 19.3476 25.2591Z\"\n        fill=\"#5A9CFF\"\n      />\n      <path\n        d=\"M19.3476 25.2591L21.7599 27.0425L19.3476 25.2591ZM16.2864 45.2588L19.1342 44.3153L16.2864 45.2588ZM30.5 58.5L31.2859 55.6048L30.5 58.5ZM47 58.5L47.9887 61.3324L47 58.5ZM60.6759 37.1108L63.6109 36.4897L60.6759 37.1108ZM56.4664 25.2591L54.0505 27.0377L56.4664 25.2591ZM30.1858 28.0067C29.0849 26.7684 27.1886 26.6571 25.9504 27.758C24.7122 28.8589 24.6008 30.7551 25.7017 31.9933L30.1858 28.0067ZM31.5 34L33.2059 36.4678C33.9127 35.9792 34.3761 35.211 34.4786 34.3579C34.5811 33.5049 34.3129 32.6488 33.742 32.0067L31.5 34ZM25.2941 34.643C23.9312 35.5852 23.5901 37.4538 24.5322 38.8167C25.4744 40.1796 27.343 40.5207 28.7059 39.5785L25.2941 34.643ZM50.7346 32.1609C51.9281 31.0116 51.9639 29.1125 50.8146 27.919C49.6653 26.7256 47.7662 26.6898 46.5727 27.8391L50.7346 32.1609ZM44.5 34L42.419 31.8391C41.7852 32.4494 41.4513 33.3073 41.5057 34.1855C41.5601 35.0637 41.9974 35.8738 42.7017 36.4012L44.5 34ZM46.8553 39.512C48.1815 40.5052 50.0617 40.2353 51.0549 38.9091C52.0481 37.5829 51.7782 35.7027 50.452 34.7095L46.8553 39.512ZM32.1532 42.1698C30.9995 40.9807 29.1002 40.9519 27.911 42.1056C26.7219 43.2593 26.6931 45.1586 27.8468 46.3478L32.1532 42.1698ZM33.5 47L32.2069 49.707V49.707L33.5 47ZM38 48L38.1164 45.0023L38 48ZM43.5 47L41.9953 44.4046H41.9953L43.5 47ZM48.932 45.7566C49.9021 44.4134 49.5997 42.5382 48.2566 41.568C46.9134 40.5979 45.0382 40.9003 44.068 42.2434L48.932 45.7566ZM38.0984 13C29.2924 13 22.3234 16.1874 16.9352 23.4757L21.7599 27.0425C25.939 21.3897 31.0609 19 38.0984 19V13ZM16.9352 23.4757C11.5502 30.7597 10.8826 38.487 13.4386 46.2022L19.1342 44.3153C17.1273 38.2576 17.6507 32.6008 21.7599 27.0425L16.9352 23.4757ZM13.4386 46.2022C14.7393 50.1284 16.6857 53.3989 19.4551 55.9771C22.2201 58.5511 25.6527 60.2927 29.7141 61.3952L31.2859 55.6048C27.9514 54.6996 25.4498 53.3603 23.5433 51.5855C21.6412 49.8148 20.1788 47.4685 19.1342 44.3153L13.4386 46.2022ZM29.7141 61.3952C35.536 62.9756 41.8851 63.463 47.9887 61.3324L46.0113 55.6676C41.431 57.2665 36.3996 56.9929 31.2859 55.6048L29.7141 61.3952ZM47.9887 61.3324C58.1204 57.7957 65.9382 47.4881 63.6109 36.4897L57.7408 37.7318C59.2897 45.0511 54.0527 52.8605 46.0113 55.6676L47.9887 61.3324ZM63.6109 36.4897C62.7539 32.4399 62.293 28.1133 58.8824 23.4805L54.0505 27.0377C56.5087 30.3767 56.7671 33.1301 57.7408 37.7318L63.6109 36.4897ZM58.8824 23.4805C56.3106 19.9872 53.3541 17.3274 49.8421 15.5593C46.3312 13.7918 42.4328 13 38.0984 13V19C41.6859 19 44.6249 19.6503 47.1442 20.9185C49.6625 22.1863 51.9291 24.1561 54.0505 27.0377L58.8824 23.4805ZM25.7017 31.9933L29.258 35.9933L33.742 32.0067L30.1858 28.0067L25.7017 31.9933ZM29.7941 31.5322L25.2941 34.643L28.7059 39.5785L33.2059 36.4678L29.7941 31.5322ZM46.5727 27.8391L42.419 31.8391L46.581 36.1609L50.7346 32.1609L46.5727 27.8391ZM42.7017 36.4012L46.8553 39.512L50.452 34.7095L46.2983 31.5988L42.7017 36.4012ZM30 44.2588C27.8468 46.3478 27.847 46.348 27.8473 46.3482C27.8474 46.3483 27.8476 46.3486 27.8478 46.3488C27.8481 46.3491 27.8485 46.3495 27.849 46.35C27.8498 46.3508 27.8507 46.3518 27.8518 46.3529C27.854 46.3551 27.8566 46.3578 27.8597 46.361C27.8659 46.3673 27.8739 46.3755 27.8838 46.3856C27.9036 46.4056 27.9306 46.4329 27.9643 46.4667C28.0317 46.5341 28.1263 46.6276 28.2434 46.7407C28.4765 46.9656 28.8053 47.2739 29.1918 47.6107C29.9053 48.2324 31.0354 49.1474 32.2069 49.707L34.7931 44.293C34.398 44.1043 33.7781 43.6487 33.1333 43.0869C32.8406 42.8319 32.5881 42.5952 32.4097 42.423C32.3211 42.3376 32.2524 42.2696 32.208 42.2251C32.1858 42.2029 32.1697 42.1866 32.1604 42.1771C32.1557 42.1724 32.1527 42.1694 32.1515 42.1681C32.1509 42.1675 32.1507 42.1673 32.151 42.1676C32.1511 42.1677 32.1514 42.168 32.1518 42.1684C32.1519 42.1685 32.1521 42.1688 32.1524 42.169C32.1525 42.1691 32.1527 42.1693 32.1528 42.1694C32.153 42.1696 32.1532 42.1698 30 44.2588ZM32.2069 49.707C34.3272 50.7199 35.8468 50.9186 37.8836 50.9977L38.1164 45.0023C36.5554 44.9416 35.9216 44.8321 34.7931 44.293L32.2069 49.707ZM37.8836 50.9977C40.1374 51.0853 42.3237 51.1497 45.0047 49.5954L41.9953 44.4046C40.899 45.0403 40.2255 45.0842 38.1164 45.0023L37.8836 50.9977ZM45.0047 49.5954C46.1648 48.9228 47.1808 47.8595 47.7858 47.1746C48.1197 46.7967 48.3989 46.4519 48.5955 46.2006C48.6944 46.0742 48.7741 45.9693 48.831 45.8933C48.8596 45.8552 48.8825 45.8242 48.8994 45.8012C48.9079 45.7896 48.9149 45.7801 48.9203 45.7726C48.923 45.7689 48.9254 45.7657 48.9273 45.763C48.9283 45.7617 48.9292 45.7605 48.9299 45.7594C48.9303 45.7588 48.9307 45.7583 48.931 45.7579C48.9312 45.7576 48.9314 45.7573 48.9315 45.7572C48.9317 45.7569 48.932 45.7566 46.5 44C44.068 42.2434 44.0682 42.2431 44.0685 42.2428C44.0685 42.2428 44.0687 42.2425 44.0688 42.2423C44.0691 42.242 44.0693 42.2417 44.0695 42.2414C44.0699 42.2409 44.0702 42.2404 44.0704 42.2402C44.0708 42.2396 44.0709 42.2395 44.0706 42.2399C44.07 42.2407 44.068 42.2434 44.0647 42.248C44.058 42.2571 44.0458 42.2735 44.0287 42.2964C43.9944 42.3422 43.9405 42.4133 43.8701 42.5032C43.7282 42.6845 43.5262 42.9339 43.2892 43.2021C42.7526 43.8095 42.2686 44.2462 41.9953 44.4046L45.0047 49.5954Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M96.3476 25.2591C101.131 18.7886 107.177 16 115.098 16C123.02 16 128.773 18.8841 133.466 25.2591C136.401 29.245 136.76 32.785 137.676 37.1108C139.614 46.2696 133.087 55.3281 124 58.5C118.658 60.3647 112.968 59.9843 107.5 58.5C100.104 56.4923 95.6317 52.3381 93.2864 45.2588C91.0049 38.3723 91.6005 31.6803 96.3476 25.2591Z\"\n        fill=\"#70C253\"\n      />\n      <path\n        d=\"M96.3476 25.2591L98.7599 27.0425L96.3476 25.2591ZM93.2864 45.2588L96.1342 44.3153L93.2864 45.2588ZM107.5 58.5L108.286 55.6048L107.5 58.5ZM124 58.5L124.989 61.3324L124 58.5ZM137.676 37.1108L140.611 36.4897L137.676 37.1108ZM133.466 25.2591L131.051 27.0377L133.466 25.2591ZM104.5 34C104.5 35.6569 105.843 37 107.5 37C109.157 37 110.5 35.6569 110.5 34H104.5ZM110.5 33C110.5 31.3431 109.157 30 107.5 30C105.843 30 104.5 31.3431 104.5 33H110.5ZM125.5 33C125.5 31.3431 124.157 30 122.5 30C120.843 30 119.5 31.3431 119.5 33H125.5ZM119.5 34C119.5 35.6569 120.843 37 122.5 37C124.157 37 125.5 35.6569 125.5 34H119.5ZM109.153 42.1698C107.999 40.9807 106.1 40.9519 104.911 42.1056C103.722 43.2593 103.693 45.1586 104.847 46.3478L109.153 42.1698ZM110.5 47L109.207 49.707V49.707L110.5 47ZM115 48L115.116 45.0023L115 48ZM120.5 47L118.995 44.4046H118.995L120.5 47ZM125.932 45.7566C126.902 44.4134 126.6 42.5382 125.257 41.568C123.913 40.5979 122.038 40.9003 121.068 42.2434L125.932 45.7566ZM115.098 13C106.292 13 99.3234 16.1874 93.9352 23.4757L98.7599 27.0425C102.939 21.3897 108.061 19 115.098 19V13ZM93.9352 23.4757C88.5502 30.7597 87.8826 38.487 90.4386 46.2022L96.1342 44.3153C94.1273 38.2576 94.6507 32.6008 98.7599 27.0425L93.9352 23.4757ZM90.4386 46.2022C91.7393 50.1284 93.6857 53.3989 96.4551 55.9771C99.2201 58.5511 102.653 60.2927 106.714 61.3952L108.286 55.6048C104.951 54.6996 102.45 53.3603 100.543 51.5855C98.6412 49.8148 97.1788 47.4685 96.1342 44.3153L90.4386 46.2022ZM106.714 61.3952C112.536 62.9756 118.885 63.463 124.989 61.3324L123.011 55.6676C118.431 57.2665 113.4 56.9929 108.286 55.6048L106.714 61.3952ZM124.989 61.3324C135.12 57.7957 142.938 47.4881 140.611 36.4897L134.741 37.7318C136.29 45.0511 131.053 52.8605 123.011 55.6676L124.989 61.3324ZM140.611 36.4897C139.754 32.4399 139.293 28.1133 135.882 23.4805L131.051 27.0377C133.509 30.3767 133.767 33.1301 134.741 37.7318L140.611 36.4897ZM135.882 23.4805C133.311 19.9872 130.354 17.3274 126.842 15.5593C123.331 13.7918 119.433 13 115.098 13V19C118.686 19 121.625 19.6503 124.144 20.9185C126.662 22.1863 128.929 24.1561 131.051 27.0377L135.882 23.4805ZM110.5 34V33H104.5V34H110.5ZM119.5 33V34H125.5V33H119.5ZM107 44.2588C104.847 46.3478 104.847 46.348 104.847 46.3482C104.847 46.3483 104.848 46.3486 104.848 46.3488C104.848 46.3491 104.849 46.3495 104.849 46.35C104.85 46.3508 104.851 46.3518 104.852 46.3529C104.854 46.3551 104.857 46.3578 104.86 46.361C104.866 46.3673 104.874 46.3755 104.884 46.3856C104.904 46.4056 104.931 46.4329 104.964 46.4667C105.032 46.5341 105.126 46.6276 105.243 46.7407C105.477 46.9656 105.805 47.2739 106.192 47.6107C106.905 48.2324 108.035 49.1474 109.207 49.707L111.793 44.293C111.398 44.1043 110.778 43.6487 110.133 43.0869C109.841 42.8319 109.588 42.5952 109.41 42.423C109.321 42.3376 109.252 42.2696 109.208 42.2251C109.186 42.2029 109.17 42.1866 109.16 42.1771C109.156 42.1724 109.153 42.1694 109.152 42.1681C109.151 42.1675 109.151 42.1673 109.151 42.1676C109.151 42.1677 109.151 42.168 109.152 42.1684C109.152 42.1685 109.152 42.1688 109.152 42.169C109.153 42.1691 109.153 42.1693 109.153 42.1694C109.153 42.1696 109.153 42.1698 107 44.2588ZM109.207 49.707C111.327 50.7199 112.847 50.9186 114.884 50.9977L115.116 45.0023C113.555 44.9416 112.922 44.8321 111.793 44.293L109.207 49.707ZM114.884 50.9977C117.137 51.0853 119.324 51.1497 122.005 49.5954L118.995 44.4046C117.899 45.0403 117.225 45.0842 115.116 45.0023L114.884 50.9977ZM122.005 49.5954C123.165 48.9228 124.181 47.8595 124.786 47.1746C125.12 46.7967 125.399 46.4519 125.596 46.2006C125.694 46.0742 125.774 45.9693 125.831 45.8933C125.86 45.8552 125.882 45.8242 125.899 45.8012C125.908 45.7896 125.915 45.7801 125.92 45.7726C125.923 45.7689 125.925 45.7657 125.927 45.763C125.928 45.7617 125.929 45.7605 125.93 45.7594C125.93 45.7588 125.931 45.7583 125.931 45.7579C125.931 45.7576 125.931 45.7573 125.932 45.7572C125.932 45.7569 125.932 45.7566 123.5 44C121.068 42.2434 121.068 42.2431 121.068 42.2428C121.069 42.2428 121.069 42.2425 121.069 42.2423C121.069 42.242 121.069 42.2417 121.069 42.2414C121.07 42.2409 121.07 42.2404 121.07 42.2402C121.071 42.2396 121.071 42.2395 121.071 42.2399C121.07 42.2407 121.068 42.2434 121.065 42.248C121.058 42.2571 121.046 42.2735 121.029 42.2964C120.994 42.3422 120.94 42.4133 120.87 42.5032C120.728 42.6845 120.526 42.9339 120.289 43.2021C119.753 43.8095 119.269 44.2462 118.995 44.4046L122.005 49.5954Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M250.348 25.2591C255.131 18.7886 261.177 16 269.098 16C277.02 16 282.773 18.8841 287.466 25.2591C290.401 29.245 290.76 32.785 291.676 37.1108C293.614 46.2696 287.087 55.3281 278 58.5C272.658 60.3647 266.968 59.9843 261.5 58.5C254.104 56.4923 249.632 52.3381 247.286 45.2588C245.005 38.3723 245.6 31.6803 250.348 25.2591Z\"\n        fill=\"#E94848\"\n      />\n      <path\n        d=\"M250.348 25.2591L252.76 27.0425L250.348 25.2591ZM247.286 45.2588L250.134 44.3153L247.286 45.2588ZM261.5 58.5L262.286 55.6048L261.5 58.5ZM278 58.5L278.989 61.3324L278 58.5ZM291.676 37.1108L294.611 36.4897L291.676 37.1108ZM287.466 25.2591L285.051 27.0377L287.466 25.2591ZM258.5 34C258.5 35.6569 259.843 37 261.5 37C263.157 37 264.5 35.6569 264.5 34H258.5ZM264.5 33C264.5 31.3431 263.157 30 261.5 30C259.843 30 258.5 31.3431 258.5 33H264.5ZM279.5 33C279.5 31.3431 278.157 30 276.5 30C274.843 30 273.5 31.3431 273.5 33H279.5ZM273.5 34C273.5 35.6569 274.843 37 276.5 37C278.157 37 279.5 35.6569 279.5 34H273.5ZM258.974 43.7877C257.752 44.9068 257.669 46.8045 258.788 48.0263C259.907 49.2481 261.805 49.3314 263.026 48.2123L258.974 43.7877ZM264.5 43.5L265.741 46.2312L264.5 43.5ZM269 42.5L269.064 45.4993H269.064L269 42.5ZM274 43.5L275.385 40.8386L274 43.5ZM274.789 48.0276C275.909 49.2487 277.806 49.3309 279.028 48.2111C280.249 47.0913 280.331 45.1935 279.211 43.9724L274.789 48.0276ZM269.098 13C260.292 13 253.323 16.1874 247.935 23.4757L252.76 27.0425C256.939 21.3897 262.061 19 269.098 19V13ZM247.935 23.4757C242.55 30.7597 241.883 38.487 244.439 46.2022L250.134 44.3153C248.127 38.2576 248.651 32.6008 252.76 27.0425L247.935 23.4757ZM244.439 46.2022C245.739 50.1284 247.686 53.3989 250.455 55.9771C253.22 58.5511 256.653 60.2927 260.714 61.3952L262.286 55.6048C258.951 54.6996 256.45 53.3603 254.543 51.5855C252.641 49.8148 251.179 47.4685 250.134 44.3153L244.439 46.2022ZM260.714 61.3952C266.536 62.9756 272.885 63.463 278.989 61.3324L277.011 55.6676C272.431 57.2665 267.4 56.9929 262.286 55.6048L260.714 61.3952ZM278.989 61.3324C289.12 57.7957 296.938 47.4881 294.611 36.4897L288.741 37.7318C290.29 45.0511 285.053 52.8605 277.011 55.6676L278.989 61.3324ZM294.611 36.4897C293.754 32.4399 293.293 28.1133 289.882 23.4805L285.051 27.0377C287.509 30.3767 287.767 33.1301 288.741 37.7318L294.611 36.4897ZM289.882 23.4805C287.311 19.9872 284.354 17.3274 280.842 15.5593C277.331 13.7918 273.433 13 269.098 13V19C272.686 19 275.625 19.6503 278.144 20.9185C280.662 22.1863 282.929 24.1561 285.051 27.0377L289.882 23.4805ZM264.5 34V33H258.5V34H264.5ZM273.5 33V34H279.5V33H273.5ZM261 46C263.026 48.2123 263.026 48.2124 263.026 48.2126C263.026 48.2127 263.026 48.2128 263.026 48.2129C263.025 48.2132 263.025 48.2133 263.025 48.2135C263.025 48.2138 263.024 48.214 263.024 48.2141C263.024 48.2142 263.024 48.214 263.025 48.2134C263.027 48.2121 263.03 48.2091 263.035 48.2047C263.045 48.1957 263.061 48.1807 263.084 48.1602C263.13 48.1191 263.201 48.0566 263.292 47.9782C263.475 47.8203 263.733 47.603 264.032 47.3681C264.683 46.8556 265.323 46.4213 265.741 46.2312L263.259 40.7688C262.148 41.2736 261.038 42.0893 260.321 42.653C259.936 42.9563 259.606 43.2337 259.372 43.436C259.254 43.5377 259.159 43.6216 259.091 43.682C259.057 43.7122 259.03 43.7366 259.01 43.7544C259 43.7634 258.992 43.7707 258.986 43.7763C258.983 43.779 258.981 43.7814 258.979 43.7833C258.977 43.7843 258.977 43.7851 258.976 43.7859C258.975 43.7862 258.975 43.7866 258.975 43.7869C258.974 43.787 258.974 43.7873 258.974 43.7873C258.974 43.7875 258.974 43.7877 261 46ZM265.741 46.2312C266.979 45.6687 267.635 45.5297 269.064 45.4993L268.936 39.5007C266.765 39.5469 265.299 39.8418 263.259 40.7688L265.741 46.2312ZM269.064 45.4993C270.783 45.4627 271.464 45.5625 272.615 46.1614L275.385 40.8386C273.003 39.5994 271.198 39.4526 268.936 39.5007L269.064 45.4993ZM272.615 46.1614C272.917 46.3182 273.423 46.7103 273.971 47.2168C274.216 47.4438 274.428 47.654 274.577 47.8067C274.652 47.8824 274.709 47.9424 274.745 47.9813C274.764 48.0007 274.777 48.0147 274.784 48.0227C274.788 48.0267 274.79 48.0291 274.791 48.03C274.791 48.0304 274.792 48.0304 274.791 48.03C274.791 48.0298 274.791 48.0295 274.79 48.0291C274.79 48.0289 274.79 48.0287 274.79 48.0284C274.79 48.0283 274.789 48.0281 274.789 48.028C274.789 48.0278 274.789 48.0276 277 46C279.211 43.9724 279.211 43.9722 279.211 43.9719C279.211 43.9718 279.21 43.9716 279.21 43.9714C279.21 43.971 279.209 43.9706 279.209 43.9702C279.208 43.9694 279.207 43.9684 279.206 43.9674C279.204 43.9652 279.202 43.9627 279.199 43.9597C279.194 43.9537 279.187 43.946 279.178 43.9366C279.161 43.918 279.137 43.8927 279.108 43.8616C279.049 43.7996 278.967 43.7137 278.866 43.6101C278.664 43.4039 278.379 43.1211 278.044 42.8111C277.43 42.2435 276.436 41.3857 275.385 40.8386L272.615 46.1614Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M327.348 25.2591C332.131 18.7886 338.177 16 346.098 16C354.02 16 359.773 18.8841 364.466 25.2591C367.401 29.245 367.76 32.785 368.676 37.1108C370.614 46.2696 364.087 55.3281 355 58.5C349.658 60.3647 343.968 59.9843 338.5 58.5C331.104 56.4923 326.632 52.3381 324.286 45.2588C322.005 38.3723 322.6 31.6803 327.348 25.2591Z\"\n        fill=\"#B160E2\"\n      />\n      <path\n        d=\"M327.348 25.2591L329.76 27.0425L327.348 25.2591ZM324.286 45.2588L327.134 44.3153L324.286 45.2588ZM338.5 58.5L339.286 55.6048L338.5 58.5ZM355 58.5L355.989 61.3324L355 58.5ZM368.676 37.1108L371.611 36.4897L368.676 37.1108ZM364.466 25.2591L362.051 27.0377L364.466 25.2591ZM335.551 31.6539C333.979 32.1779 333.13 33.8769 333.654 35.4487C334.178 37.0205 335.877 37.87 337.449 37.3461L335.551 31.6539ZM340.449 36.3461C342.021 35.8221 342.87 34.1231 342.346 32.5513C341.822 30.9795 340.123 30.13 338.551 30.6539L340.449 36.3461ZM352.949 30.6539C351.377 30.13 349.678 30.9795 349.154 32.5513C348.63 34.1231 349.479 35.8221 351.051 36.3461L352.949 30.6539ZM354.051 37.3461C355.623 37.87 357.322 37.0205 357.846 35.4487C358.37 33.8769 357.521 32.1779 355.949 31.6539L354.051 37.3461ZM335.974 43.7877C334.752 44.9068 334.669 46.8045 335.788 48.0263C336.907 49.2481 338.805 49.3314 340.026 48.2123L335.974 43.7877ZM341.5 43.5L342.741 46.2312L341.5 43.5ZM346 42.5L346.064 45.4993H346.064L346 42.5ZM351 43.5L352.385 40.8386L351 43.5ZM351.789 48.0276C352.909 49.2487 354.806 49.3309 356.028 48.2111C357.249 47.0913 357.331 45.1935 356.211 43.9724L351.789 48.0276ZM346.098 13C337.292 13 330.323 16.1874 324.935 23.4757L329.76 27.0425C333.939 21.3897 339.061 19 346.098 19V13ZM324.935 23.4757C319.55 30.7597 318.883 38.487 321.439 46.2022L327.134 44.3153C325.127 38.2576 325.651 32.6008 329.76 27.0425L324.935 23.4757ZM321.439 46.2022C322.739 50.1284 324.686 53.3989 327.455 55.9771C330.22 58.5511 333.653 60.2927 337.714 61.3952L339.286 55.6048C335.951 54.6996 333.45 53.3603 331.543 51.5855C329.641 49.8148 328.179 47.4685 327.134 44.3153L321.439 46.2022ZM337.714 61.3952C343.536 62.9756 349.885 63.463 355.989 61.3324L354.011 55.6676C349.431 57.2665 344.4 56.9929 339.286 55.6048L337.714 61.3952ZM355.989 61.3324C366.12 57.7957 373.938 47.4881 371.611 36.4897L365.741 37.7318C367.29 45.0511 362.053 52.8605 354.011 55.6676L355.989 61.3324ZM371.611 36.4897C370.754 32.4399 370.293 28.1133 366.882 23.4805L362.051 27.0377C364.509 30.3767 364.767 33.1301 365.741 37.7318L371.611 36.4897ZM366.882 23.4805C364.311 19.9872 361.354 17.3274 357.842 15.5593C354.331 13.7918 350.433 13 346.098 13V19C349.686 19 352.625 19.6503 355.144 20.9185C357.662 22.1863 359.929 24.1561 362.051 27.0377L366.882 23.4805ZM337.449 37.3461L340.449 36.3461L338.551 30.6539L335.551 31.6539L337.449 37.3461ZM351.051 36.3461L354.051 37.3461L355.949 31.6539L352.949 30.6539L351.051 36.3461ZM338 46C340.026 48.2123 340.026 48.2124 340.026 48.2126C340.026 48.2127 340.026 48.2128 340.026 48.2129C340.025 48.2132 340.025 48.2133 340.025 48.2135C340.025 48.2138 340.024 48.214 340.024 48.2141C340.024 48.2142 340.024 48.214 340.025 48.2134C340.027 48.2121 340.03 48.2091 340.035 48.2047C340.045 48.1957 340.061 48.1807 340.084 48.1602C340.13 48.1191 340.201 48.0566 340.292 47.9782C340.475 47.8203 340.733 47.603 341.032 47.3681C341.683 46.8556 342.323 46.4213 342.741 46.2312L340.259 40.7688C339.148 41.2736 338.038 42.0893 337.321 42.653C336.936 42.9563 336.606 43.2337 336.372 43.436C336.254 43.5377 336.159 43.6216 336.091 43.682C336.057 43.7122 336.03 43.7366 336.01 43.7544C336 43.7634 335.992 43.7707 335.986 43.7763C335.983 43.779 335.981 43.7814 335.979 43.7833C335.977 43.7843 335.977 43.7851 335.976 43.7859C335.975 43.7862 335.975 43.7866 335.975 43.7869C335.974 43.787 335.974 43.7873 335.974 43.7873C335.974 43.7875 335.974 43.7877 338 46ZM342.741 46.2312C343.979 45.6687 344.635 45.5297 346.064 45.4993L345.936 39.5007C343.765 39.5469 342.299 39.8418 340.259 40.7688L342.741 46.2312ZM346.064 45.4993C347.783 45.4627 348.464 45.5625 349.615 46.1614L352.385 40.8386C350.003 39.5994 348.198 39.4526 345.936 39.5007L346.064 45.4993ZM349.615 46.1614C349.917 46.3182 350.423 46.7103 350.971 47.2168C351.216 47.4438 351.428 47.654 351.577 47.8067C351.652 47.8824 351.709 47.9424 351.745 47.9813C351.764 48.0007 351.777 48.0147 351.784 48.0227C351.788 48.0267 351.79 48.0291 351.791 48.03C351.791 48.0304 351.792 48.0304 351.791 48.03C351.791 48.0298 351.791 48.0295 351.79 48.0291C351.79 48.0289 351.79 48.0287 351.79 48.0284C351.79 48.0283 351.789 48.0281 351.789 48.028C351.789 48.0278 351.789 48.0276 354 46C356.211 43.9724 356.211 43.9722 356.211 43.9719C356.211 43.9718 356.21 43.9716 356.21 43.9714C356.21 43.971 356.209 43.9706 356.209 43.9702C356.208 43.9694 356.207 43.9684 356.206 43.9674C356.204 43.9652 356.202 43.9627 356.199 43.9597C356.194 43.9537 356.187 43.946 356.178 43.9366C356.161 43.918 356.137 43.8927 356.108 43.8616C356.049 43.7996 355.967 43.7137 355.866 43.6101C355.664 43.4039 355.379 43.1211 355.044 42.8111C354.43 42.2435 353.436 41.3857 352.385 40.8386L349.615 46.1614Z\"\n        fill=\"#191919\"\n      />\n      <path\n        d=\"M173.348 25.2591C178.131 18.7886 184.177 16 192.098 16C200.02 16 205.773 18.8841 210.466 25.2591C213.401 29.245 213.76 32.785 214.676 37.1108C216.614 46.2696 210.087 55.3281 201 58.5C195.658 60.3647 189.968 59.9843 184.5 58.5C177.104 56.4923 172.632 52.3381 170.286 45.2588C168.005 38.3723 168.6 31.6803 173.348 25.2591Z\"\n        fill=\"#FCDD3D\"\n      />\n      <path\n        d=\"M173.348 25.2591L175.76 27.0425L173.348 25.2591ZM170.286 45.2588L173.134 44.3153L170.286 45.2588ZM184.5 58.5L185.286 55.6048L184.5 58.5ZM201 58.5L201.989 61.3324L201 58.5ZM214.676 37.1108L217.611 36.4897L214.676 37.1108ZM210.466 25.2591L208.051 27.0377L210.466 25.2591ZM181.5 34C181.5 35.6569 182.843 37 184.5 37C186.157 37 187.5 35.6569 187.5 34H181.5ZM187.5 33C187.5 31.3431 186.157 30 184.5 30C182.843 30 181.5 31.3431 181.5 33H187.5ZM202.5 33C202.5 31.3431 201.157 30 199.5 30C197.843 30 196.5 31.3431 196.5 33H202.5ZM196.5 34C196.5 35.6569 197.843 37 199.5 37C201.157 37 202.5 35.6569 202.5 34H196.5ZM184.5 41C182.843 41 181.5 42.3431 181.5 44C181.5 45.6569 182.843 47 184.5 47V41ZM199.5 47C201.157 47 202.5 45.6569 202.5 44C202.5 42.3431 201.157 41 199.5 41V47ZM192.098 13C183.292 13 176.323 16.1874 170.935 23.4757L175.76 27.0425C179.939 21.3897 185.061 19 192.098 19V13ZM170.935 23.4757C165.55 30.7597 164.883 38.487 167.439 46.2022L173.134 44.3153C171.127 38.2576 171.651 32.6008 175.76 27.0425L170.935 23.4757ZM167.439 46.2022C168.739 50.1284 170.686 53.3989 173.455 55.9771C176.22 58.5511 179.653 60.2927 183.714 61.3952L185.286 55.6048C181.951 54.6996 179.45 53.3603 177.543 51.5855C175.641 49.8148 174.179 47.4685 173.134 44.3153L167.439 46.2022ZM183.714 61.3952C189.536 62.9756 195.885 63.463 201.989 61.3324L200.011 55.6676C195.431 57.2665 190.4 56.9929 185.286 55.6048L183.714 61.3952ZM201.989 61.3324C212.12 57.7957 219.938 47.4881 217.611 36.4897L211.741 37.7318C213.29 45.0511 208.053 52.8605 200.011 55.6676L201.989 61.3324ZM217.611 36.4897C216.754 32.4399 216.293 28.1133 212.882 23.4805L208.051 27.0377C210.509 30.3767 210.767 33.1301 211.741 37.7318L217.611 36.4897ZM212.882 23.4805C210.311 19.9872 207.354 17.3274 203.842 15.5593C200.331 13.7918 196.433 13 192.098 13V19C195.686 19 198.625 19.6503 201.144 20.9185C203.662 22.1863 205.929 24.1561 208.051 27.0377L212.882 23.4805ZM187.5 34V33H181.5V34H187.5ZM196.5 33V34H202.5V33H196.5ZM184.5 47H199.5V41H184.5V47Z\"\n        fill=\"#191919\"\n      />\n    </svg>\n  </div>\n</div>\n"}],"Post":[{"title":"MLOps","date":"2023-01-12T21:38:10.594Z","_content":"\nML 모델만 있다고 실제로 product에 적용할 수 있는 것이 아님.\n학습 데이터(환경)가 변경됨에 따라 유동적으로 재학습하고 deploy 할 수 있는 pipeline을 구축할 필요가 있음.\n기존의 application deploy pipeline과는 다른 특성을 갖고 있기 때문에 따로 'MLops'라고 부름.\n\nconcept drift or data drift.\n","source":"_drafts/MLOps.md","raw":"---\ntitle: MLOps\ndate:\ntags:\n---\n\nML 모델만 있다고 실제로 product에 적용할 수 있는 것이 아님.\n학습 데이터(환경)가 변경됨에 따라 유동적으로 재학습하고 deploy 할 수 있는 pipeline을 구축할 필요가 있음.\n기존의 application deploy pipeline과는 다른 특성을 갖고 있기 때문에 따로 'MLops'라고 부름.\n\nconcept drift or data drift.\n","slug":"MLOps","published":0,"updated":"2023-01-12T21:38:10.594Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2rk0001tqwegynt6yop","content":"<p>ML 모델만 있다고 실제로 product에 적용할 수 있는 것이 아님.<br>학습 데이터(환경)가 변경됨에 따라 유동적으로 재학습하고 deploy 할 수 있는 pipeline을 구축할 필요가 있음.<br>기존의 application deploy pipeline과는 다른 특성을 갖고 있기 때문에 따로 ‘MLops’라고 부름.</p>\n<p>concept drift or data drift.</p>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<p>ML 모델만 있다고 실제로 product에 적용할 수 있는 것이 아님.<br>학습 데이터(환경)가 변경됨에 따라 유동적으로 재학습하고 deploy 할 수 있는 pipeline을 구축할 필요가 있음.<br>기존의 application deploy pipeline과는 다른 특성을 갖고 있기 때문에 따로 ‘MLops’라고 부름.</p>\n<p>concept drift or data drift.</p>\n"},{"title":"Flutter 시작하기","date":"2022-02-19T09:23:53.000Z","_content":"\n# MOTIVATION\n\nReact Native는 조금 써봤으니... 이제 React Native와 항상 함께 거론되는 Flutter도 써보고 싶어졌습니다.\n전에 만들었었던 모바일 웹앱을 Flutter로 다시 만들어보려고 합니다 =) 이번 주말 안에요!\n\n# 환경설정 하기\n\nhttps://docs.flutter.dev/get-started/install/macos#system-requirements\nhttps://docs.flutter.dev/get-started/editor?tab=vscode\n\ndocs가 아주 잘되어있네요 ㅎㅎ 순조롭습니다.\n\n#\n","source":"_drafts/flutter-intro.md","raw":"---\ntitle: Flutter 시작하기\ndate: 2022-02-19 18:23:53\ntags: Flutter\ncategories: Flutter\n---\n\n# MOTIVATION\n\nReact Native는 조금 써봤으니... 이제 React Native와 항상 함께 거론되는 Flutter도 써보고 싶어졌습니다.\n전에 만들었었던 모바일 웹앱을 Flutter로 다시 만들어보려고 합니다 =) 이번 주말 안에요!\n\n# 환경설정 하기\n\nhttps://docs.flutter.dev/get-started/install/macos#system-requirements\nhttps://docs.flutter.dev/get-started/editor?tab=vscode\n\ndocs가 아주 잘되어있네요 ㅎㅎ 순조롭습니다.\n\n#\n","slug":"flutter-intro","published":0,"updated":"2023-01-12T21:38:10.594Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2rn0003tqwe0ssw9ytt","content":"<h1 id=\"MOTIVATION\"><a href=\"#MOTIVATION\" class=\"headerlink\" title=\"MOTIVATION\"></a>MOTIVATION</h1><p>React Native는 조금 써봤으니… 이제 React Native와 항상 함께 거론되는 Flutter도 써보고 싶어졌습니다.<br>전에 만들었었던 모바일 웹앱을 Flutter로 다시 만들어보려고 합니다 =) 이번 주말 안에요!</p>\n<h1 id=\"환경설정-하기\"><a href=\"#환경설정-하기\" class=\"headerlink\" title=\"환경설정 하기\"></a>환경설정 하기</h1><p><a href=\"https://docs.flutter.dev/get-started/install/macos#system-requirements\">https://docs.flutter.dev/get-started/install/macos#system-requirements</a><br><a href=\"https://docs.flutter.dev/get-started/editor?tab=vscode\">https://docs.flutter.dev/get-started/editor?tab=vscode</a></p>\n<p>docs가 아주 잘되어있네요 ㅎㅎ 순조롭습니다.</p>\n<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h1>","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"MOTIVATION\"><a href=\"#MOTIVATION\" class=\"headerlink\" title=\"MOTIVATION\"></a>MOTIVATION</h1><p>React Native는 조금 써봤으니… 이제 React Native와 항상 함께 거론되는 Flutter도 써보고 싶어졌습니다.<br>전에 만들었었던 모바일 웹앱을 Flutter로 다시 만들어보려고 합니다 =) 이번 주말 안에요!</p>\n<h1 id=\"환경설정-하기\"><a href=\"#환경설정-하기\" class=\"headerlink\" title=\"환경설정 하기\"></a>환경설정 하기</h1><p><a href=\"https://docs.flutter.dev/get-started/install/macos#system-requirements\">https://docs.flutter.dev/get-started/install/macos#system-requirements</a><br><a href=\"https://docs.flutter.dev/get-started/editor?tab=vscode\">https://docs.flutter.dev/get-started/editor?tab=vscode</a></p>\n<p>docs가 아주 잘되어있네요 ㅎㅎ 순조롭습니다.</p>\n<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h1>"},{"title":"220826","date":"2022-08-26T08:00:21.000Z","_content":"### 2022 상반기 회고\n\n올 초부터 투입되어있던 프로젝트가 얼추 마무리 되었다. 야호~ 철수는 역시 넘나 짜릿하다.\n정말 많은 것을 배웠다. ㅎㅎ 물론 배운 것의 양보다 놓친 것이 더 많은 것 같아 아쉬운 마음이 들지만, 잘 정리해서 다음 프로젝트에 거름으로 싸들고 가면 되니까 괜찮다. 이번에 아쉬웠던 점을 크게 몇 가지 추려봤고, 남은 하반기에 틈틈히 공부할 키워드도 뽑아봤다.\n\n#### 상태관리 라이브러리의 장단점을 미리 알아둘 걸, 그리고 다양한 디자인 패턴을 적용해볼 걸\n\n작년까지 Redux, Recoil을 써봤고 이번에 MobX를 접했다. MobX의 장점을 알고 있기 때문에 MobX를 골랐다기 보다는 Redux, Recoil의 단점 때문에 + MobX도 써보고 싶어서 MobX를 골랐는데 좀 더 전략적으로 선택했어도 좋았을 것 같다. 장점을 뽑아서 N개의 상태관리 라이브러리를 용도에 맞게 섞어서 써본다거나, 아니면 한 개의 상태관리 라이브러리를 사용하더라도 용도에 맞게 여러 디자인 패턴을 적용해볼 걸 하는 아쉬움이 있다.\n\n#### 네이티브 코드를 미리 만져볼 걸, 적어도 도구 사용법만이라도 알았으면 좋았을 걸\n\n내가 스스로 만들어본 마지막 앱은 cocos2d와 C#으로 만든 모바일 게임이었는데, 부끄럽지만 그때는 명령어 하나로 뚝딱 apk가 나오기에 '역시 프레임워크 최고! 네이티브의 시대는 지고 있구나' 라고 생각했다. 하지만 이번에 크로스플랫폼 앱 프레임워크를 사용해서 앱을 개발하면서 정말 많이 들었던 생각이 '미리 네이티브 개발 좀 해볼걸' 이었다. 성능을 끌어올리기 위해서 / 커스텀 기능을 구현하기 위해서 / 외부 sdk 또는 라이브러리를 적용하기 위해서는 필수로 네이티브를 건드려야했는데, 프로젝트 일정 중간에 딥하게 파기에는 시간도 없을 뿐더러 이미 네이티브 담당자가 있는 상황이라 애매한 너낌쓰.. 미리 네이티브 코드를 경험해본 적이 있었다면 좀 더 능동적으로 문제를 해결할 수 있었을 것 같아서 아쉬웠다.\n\n#### 공통화 공통화 공통화.. 그리고 말잘하는 연습을 할 걸\n\n개인적으로 이전의 프로젝트들에서 컴포넌트/유틸 공통화에 대한 부족함을 느꼈고, 이번 프로젝트에서 열심히 만회했다고 생각한다. 하지만 공통화 해야하는 것이 단순 컴포넌트/유틸 (= 코드조각) 뿐만이 아니라는 것을 이번에 배웠다... 이전에는 컨벤션을 공유 받고 따르는게 내 메인 롤이었다면 이번 프로젝트에서는 컨벤션을 정리하고 가이드하는게 메인 롤이 되면서 공통화 해야할 항목에 대한 시야가 강제로(?) 넓어진게 이유인 것 같다. 들여쓰기나 변수명명법처럼 정적인 것 부터 api 주소 설계, 클래스 설계 처럼 상황에 따라 가변적인 것들까지 일종의 룰이 필요하다는 것을 이번에서야 절실히 깨달았다 ㅋㅋ 쓰고보니 너무나 당연한 이야기이지만... 그리고 이 룰을 서로에게 설득하기 위해, 정리된 룰을 신규 투입 인원에게 효과적으로 인계하기 위해 '이유'와 '예시'를 명확하게 말로 풀어낼 수 있는 능력이 내게 부족하다는 점도 깨달았다.\n\n#### 좀 더 똑똑하게 판단하고 소리낼 걸\n\n요거는 개발 외적인 반성이다. 나는 내가 개발하고 싶은 요건을 집어가는 것을 선호하는데, 이번 프로젝트에서는 그 외에 내가 해야만 하는 일이 생기면서 두 가지를 병행하게 되었다. 물론 내 선택이라 후회하거나 징징거리고 싶은건 아니다 ^\\_^ 일의 양이 늘어나기는 했지만 원래 일하던 방식도 최선은 아니었으니, 좀 더 효율적으로 일하면 overwork 하지 않을 수 있었을 것 같은데... 아쉽게도 이번에는 '내가 일을 하는'게 아니라 '일이 나를 끌고가는' 상황이 벌어지게 되었다. 내가 어느 시간대에 어떤 방식으로 (재택 / 출근) 어떤 업무를 처리할 때 효율이 가장 높은 지, 각각의 할 일이 어느정도의 우선 순위를 가지는 지를 똑똑하게 판단하고 소리내었으면 좋았으련만, 소심하게 판단을 일임하거나 보류하거나 쉬쉬한게 결과적으로는 내 정신 & 육체 건강의 피폐함을 초래한 것 같아 정말 아쉬웠다.\n\n### 하반기 키워드\n\n- 디자인 패턴\n- Redux Recoil MobX\n- Android / iOS 개발 및 마켓 배포\n- Gitlab 활용 BP\n- 내가 참여할 수 있는 의사결정에는 능동적으로\n- 말을 잘하는 연습 (책 읽기?)\n\n고생했고, 다음에는 더 잘할 수 있을거라 믿는당 나자신 화이팅\n","source":"_posts/Diary/220826.md","raw":"---\ntitle: 220826\ndate: 2022-08-26 17:00:21\ntags: [Diary]\ncategories: [Diary]\n---\n### 2022 상반기 회고\n\n올 초부터 투입되어있던 프로젝트가 얼추 마무리 되었다. 야호~ 철수는 역시 넘나 짜릿하다.\n정말 많은 것을 배웠다. ㅎㅎ 물론 배운 것의 양보다 놓친 것이 더 많은 것 같아 아쉬운 마음이 들지만, 잘 정리해서 다음 프로젝트에 거름으로 싸들고 가면 되니까 괜찮다. 이번에 아쉬웠던 점을 크게 몇 가지 추려봤고, 남은 하반기에 틈틈히 공부할 키워드도 뽑아봤다.\n\n#### 상태관리 라이브러리의 장단점을 미리 알아둘 걸, 그리고 다양한 디자인 패턴을 적용해볼 걸\n\n작년까지 Redux, Recoil을 써봤고 이번에 MobX를 접했다. MobX의 장점을 알고 있기 때문에 MobX를 골랐다기 보다는 Redux, Recoil의 단점 때문에 + MobX도 써보고 싶어서 MobX를 골랐는데 좀 더 전략적으로 선택했어도 좋았을 것 같다. 장점을 뽑아서 N개의 상태관리 라이브러리를 용도에 맞게 섞어서 써본다거나, 아니면 한 개의 상태관리 라이브러리를 사용하더라도 용도에 맞게 여러 디자인 패턴을 적용해볼 걸 하는 아쉬움이 있다.\n\n#### 네이티브 코드를 미리 만져볼 걸, 적어도 도구 사용법만이라도 알았으면 좋았을 걸\n\n내가 스스로 만들어본 마지막 앱은 cocos2d와 C#으로 만든 모바일 게임이었는데, 부끄럽지만 그때는 명령어 하나로 뚝딱 apk가 나오기에 '역시 프레임워크 최고! 네이티브의 시대는 지고 있구나' 라고 생각했다. 하지만 이번에 크로스플랫폼 앱 프레임워크를 사용해서 앱을 개발하면서 정말 많이 들었던 생각이 '미리 네이티브 개발 좀 해볼걸' 이었다. 성능을 끌어올리기 위해서 / 커스텀 기능을 구현하기 위해서 / 외부 sdk 또는 라이브러리를 적용하기 위해서는 필수로 네이티브를 건드려야했는데, 프로젝트 일정 중간에 딥하게 파기에는 시간도 없을 뿐더러 이미 네이티브 담당자가 있는 상황이라 애매한 너낌쓰.. 미리 네이티브 코드를 경험해본 적이 있었다면 좀 더 능동적으로 문제를 해결할 수 있었을 것 같아서 아쉬웠다.\n\n#### 공통화 공통화 공통화.. 그리고 말잘하는 연습을 할 걸\n\n개인적으로 이전의 프로젝트들에서 컴포넌트/유틸 공통화에 대한 부족함을 느꼈고, 이번 프로젝트에서 열심히 만회했다고 생각한다. 하지만 공통화 해야하는 것이 단순 컴포넌트/유틸 (= 코드조각) 뿐만이 아니라는 것을 이번에 배웠다... 이전에는 컨벤션을 공유 받고 따르는게 내 메인 롤이었다면 이번 프로젝트에서는 컨벤션을 정리하고 가이드하는게 메인 롤이 되면서 공통화 해야할 항목에 대한 시야가 강제로(?) 넓어진게 이유인 것 같다. 들여쓰기나 변수명명법처럼 정적인 것 부터 api 주소 설계, 클래스 설계 처럼 상황에 따라 가변적인 것들까지 일종의 룰이 필요하다는 것을 이번에서야 절실히 깨달았다 ㅋㅋ 쓰고보니 너무나 당연한 이야기이지만... 그리고 이 룰을 서로에게 설득하기 위해, 정리된 룰을 신규 투입 인원에게 효과적으로 인계하기 위해 '이유'와 '예시'를 명확하게 말로 풀어낼 수 있는 능력이 내게 부족하다는 점도 깨달았다.\n\n#### 좀 더 똑똑하게 판단하고 소리낼 걸\n\n요거는 개발 외적인 반성이다. 나는 내가 개발하고 싶은 요건을 집어가는 것을 선호하는데, 이번 프로젝트에서는 그 외에 내가 해야만 하는 일이 생기면서 두 가지를 병행하게 되었다. 물론 내 선택이라 후회하거나 징징거리고 싶은건 아니다 ^\\_^ 일의 양이 늘어나기는 했지만 원래 일하던 방식도 최선은 아니었으니, 좀 더 효율적으로 일하면 overwork 하지 않을 수 있었을 것 같은데... 아쉽게도 이번에는 '내가 일을 하는'게 아니라 '일이 나를 끌고가는' 상황이 벌어지게 되었다. 내가 어느 시간대에 어떤 방식으로 (재택 / 출근) 어떤 업무를 처리할 때 효율이 가장 높은 지, 각각의 할 일이 어느정도의 우선 순위를 가지는 지를 똑똑하게 판단하고 소리내었으면 좋았으련만, 소심하게 판단을 일임하거나 보류하거나 쉬쉬한게 결과적으로는 내 정신 & 육체 건강의 피폐함을 초래한 것 같아 정말 아쉬웠다.\n\n### 하반기 키워드\n\n- 디자인 패턴\n- Redux Recoil MobX\n- Android / iOS 개발 및 마켓 배포\n- Gitlab 활용 BP\n- 내가 참여할 수 있는 의사결정에는 능동적으로\n- 말을 잘하는 연습 (책 읽기?)\n\n고생했고, 다음에는 더 잘할 수 있을거라 믿는당 나자신 화이팅\n","slug":"Diary/220826","published":1,"updated":"2023-01-22T13:58:50.506Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2ro0005tqwe4v42e7f3","content":"<h3 id=\"2022-상반기-회고\"><a href=\"#2022-상반기-회고\" class=\"headerlink\" title=\"2022 상반기 회고\"></a>2022 상반기 회고</h3><p>올 초부터 투입되어있던 프로젝트가 얼추 마무리 되었다. 야호~ 철수는 역시 넘나 짜릿하다.<br>정말 많은 것을 배웠다. ㅎㅎ 물론 배운 것의 양보다 놓친 것이 더 많은 것 같아 아쉬운 마음이 들지만, 잘 정리해서 다음 프로젝트에 거름으로 싸들고 가면 되니까 괜찮다. 이번에 아쉬웠던 점을 크게 몇 가지 추려봤고, 남은 하반기에 틈틈히 공부할 키워드도 뽑아봤다.</p>\n<h4 id=\"상태관리-라이브러리의-장단점을-미리-알아둘-걸-그리고-다양한-디자인-패턴을-적용해볼-걸\"><a href=\"#상태관리-라이브러리의-장단점을-미리-알아둘-걸-그리고-다양한-디자인-패턴을-적용해볼-걸\" class=\"headerlink\" title=\"상태관리 라이브러리의 장단점을 미리 알아둘 걸, 그리고 다양한 디자인 패턴을 적용해볼 걸\"></a>상태관리 라이브러리의 장단점을 미리 알아둘 걸, 그리고 다양한 디자인 패턴을 적용해볼 걸</h4><p>작년까지 Redux, Recoil을 써봤고 이번에 MobX를 접했다. MobX의 장점을 알고 있기 때문에 MobX를 골랐다기 보다는 Redux, Recoil의 단점 때문에 + MobX도 써보고 싶어서 MobX를 골랐는데 좀 더 전략적으로 선택했어도 좋았을 것 같다. 장점을 뽑아서 N개의 상태관리 라이브러리를 용도에 맞게 섞어서 써본다거나, 아니면 한 개의 상태관리 라이브러리를 사용하더라도 용도에 맞게 여러 디자인 패턴을 적용해볼 걸 하는 아쉬움이 있다.</p>\n<h4 id=\"네이티브-코드를-미리-만져볼-걸-적어도-도구-사용법만이라도-알았으면-좋았을-걸\"><a href=\"#네이티브-코드를-미리-만져볼-걸-적어도-도구-사용법만이라도-알았으면-좋았을-걸\" class=\"headerlink\" title=\"네이티브 코드를 미리 만져볼 걸, 적어도 도구 사용법만이라도 알았으면 좋았을 걸\"></a>네이티브 코드를 미리 만져볼 걸, 적어도 도구 사용법만이라도 알았으면 좋았을 걸</h4><p>내가 스스로 만들어본 마지막 앱은 cocos2d와 C#으로 만든 모바일 게임이었는데, 부끄럽지만 그때는 명령어 하나로 뚝딱 apk가 나오기에 ‘역시 프레임워크 최고! 네이티브의 시대는 지고 있구나’ 라고 생각했다. 하지만 이번에 크로스플랫폼 앱 프레임워크를 사용해서 앱을 개발하면서 정말 많이 들었던 생각이 ‘미리 네이티브 개발 좀 해볼걸’ 이었다. 성능을 끌어올리기 위해서 / 커스텀 기능을 구현하기 위해서 / 외부 sdk 또는 라이브러리를 적용하기 위해서는 필수로 네이티브를 건드려야했는데, 프로젝트 일정 중간에 딥하게 파기에는 시간도 없을 뿐더러 이미 네이티브 담당자가 있는 상황이라 애매한 너낌쓰.. 미리 네이티브 코드를 경험해본 적이 있었다면 좀 더 능동적으로 문제를 해결할 수 있었을 것 같아서 아쉬웠다.</p>\n<h4 id=\"공통화-공통화-공통화-그리고-말잘하는-연습을-할-걸\"><a href=\"#공통화-공통화-공통화-그리고-말잘하는-연습을-할-걸\" class=\"headerlink\" title=\"공통화 공통화 공통화.. 그리고 말잘하는 연습을 할 걸\"></a>공통화 공통화 공통화.. 그리고 말잘하는 연습을 할 걸</h4><p>개인적으로 이전의 프로젝트들에서 컴포넌트/유틸 공통화에 대한 부족함을 느꼈고, 이번 프로젝트에서 열심히 만회했다고 생각한다. 하지만 공통화 해야하는 것이 단순 컴포넌트/유틸 (= 코드조각) 뿐만이 아니라는 것을 이번에 배웠다… 이전에는 컨벤션을 공유 받고 따르는게 내 메인 롤이었다면 이번 프로젝트에서는 컨벤션을 정리하고 가이드하는게 메인 롤이 되면서 공통화 해야할 항목에 대한 시야가 강제로(?) 넓어진게 이유인 것 같다. 들여쓰기나 변수명명법처럼 정적인 것 부터 api 주소 설계, 클래스 설계 처럼 상황에 따라 가변적인 것들까지 일종의 룰이 필요하다는 것을 이번에서야 절실히 깨달았다 ㅋㅋ 쓰고보니 너무나 당연한 이야기이지만… 그리고 이 룰을 서로에게 설득하기 위해, 정리된 룰을 신규 투입 인원에게 효과적으로 인계하기 위해 ‘이유’와 ‘예시’를 명확하게 말로 풀어낼 수 있는 능력이 내게 부족하다는 점도 깨달았다.</p>\n<h4 id=\"좀-더-똑똑하게-판단하고-소리낼-걸\"><a href=\"#좀-더-똑똑하게-판단하고-소리낼-걸\" class=\"headerlink\" title=\"좀 더 똑똑하게 판단하고 소리낼 걸\"></a>좀 더 똑똑하게 판단하고 소리낼 걸</h4><p>요거는 개발 외적인 반성이다. 나는 내가 개발하고 싶은 요건을 집어가는 것을 선호하는데, 이번 프로젝트에서는 그 외에 내가 해야만 하는 일이 생기면서 두 가지를 병행하게 되었다. 물론 내 선택이라 후회하거나 징징거리고 싶은건 아니다 ^_^ 일의 양이 늘어나기는 했지만 원래 일하던 방식도 최선은 아니었으니, 좀 더 효율적으로 일하면 overwork 하지 않을 수 있었을 것 같은데… 아쉽게도 이번에는 ‘내가 일을 하는’게 아니라 ‘일이 나를 끌고가는’ 상황이 벌어지게 되었다. 내가 어느 시간대에 어떤 방식으로 (재택 / 출근) 어떤 업무를 처리할 때 효율이 가장 높은 지, 각각의 할 일이 어느정도의 우선 순위를 가지는 지를 똑똑하게 판단하고 소리내었으면 좋았으련만, 소심하게 판단을 일임하거나 보류하거나 쉬쉬한게 결과적으로는 내 정신 &amp; 육체 건강의 피폐함을 초래한 것 같아 정말 아쉬웠다.</p>\n<h3 id=\"하반기-키워드\"><a href=\"#하반기-키워드\" class=\"headerlink\" title=\"하반기 키워드\"></a>하반기 키워드</h3><ul>\n<li>디자인 패턴</li>\n<li>Redux Recoil MobX</li>\n<li>Android / iOS 개발 및 마켓 배포</li>\n<li>Gitlab 활용 BP</li>\n<li>내가 참여할 수 있는 의사결정에는 능동적으로</li>\n<li>말을 잘하는 연습 (책 읽기?)</li>\n</ul>\n<p>고생했고, 다음에는 더 잘할 수 있을거라 믿는당 나자신 화이팅</p>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h3 id=\"2022-상반기-회고\"><a href=\"#2022-상반기-회고\" class=\"headerlink\" title=\"2022 상반기 회고\"></a>2022 상반기 회고</h3><p>올 초부터 투입되어있던 프로젝트가 얼추 마무리 되었다. 야호~ 철수는 역시 넘나 짜릿하다.<br>정말 많은 것을 배웠다. ㅎㅎ 물론 배운 것의 양보다 놓친 것이 더 많은 것 같아 아쉬운 마음이 들지만, 잘 정리해서 다음 프로젝트에 거름으로 싸들고 가면 되니까 괜찮다. 이번에 아쉬웠던 점을 크게 몇 가지 추려봤고, 남은 하반기에 틈틈히 공부할 키워드도 뽑아봤다.</p>\n<h4 id=\"상태관리-라이브러리의-장단점을-미리-알아둘-걸-그리고-다양한-디자인-패턴을-적용해볼-걸\"><a href=\"#상태관리-라이브러리의-장단점을-미리-알아둘-걸-그리고-다양한-디자인-패턴을-적용해볼-걸\" class=\"headerlink\" title=\"상태관리 라이브러리의 장단점을 미리 알아둘 걸, 그리고 다양한 디자인 패턴을 적용해볼 걸\"></a>상태관리 라이브러리의 장단점을 미리 알아둘 걸, 그리고 다양한 디자인 패턴을 적용해볼 걸</h4><p>작년까지 Redux, Recoil을 써봤고 이번에 MobX를 접했다. MobX의 장점을 알고 있기 때문에 MobX를 골랐다기 보다는 Redux, Recoil의 단점 때문에 + MobX도 써보고 싶어서 MobX를 골랐는데 좀 더 전략적으로 선택했어도 좋았을 것 같다. 장점을 뽑아서 N개의 상태관리 라이브러리를 용도에 맞게 섞어서 써본다거나, 아니면 한 개의 상태관리 라이브러리를 사용하더라도 용도에 맞게 여러 디자인 패턴을 적용해볼 걸 하는 아쉬움이 있다.</p>\n<h4 id=\"네이티브-코드를-미리-만져볼-걸-적어도-도구-사용법만이라도-알았으면-좋았을-걸\"><a href=\"#네이티브-코드를-미리-만져볼-걸-적어도-도구-사용법만이라도-알았으면-좋았을-걸\" class=\"headerlink\" title=\"네이티브 코드를 미리 만져볼 걸, 적어도 도구 사용법만이라도 알았으면 좋았을 걸\"></a>네이티브 코드를 미리 만져볼 걸, 적어도 도구 사용법만이라도 알았으면 좋았을 걸</h4><p>내가 스스로 만들어본 마지막 앱은 cocos2d와 C#으로 만든 모바일 게임이었는데, 부끄럽지만 그때는 명령어 하나로 뚝딱 apk가 나오기에 ‘역시 프레임워크 최고! 네이티브의 시대는 지고 있구나’ 라고 생각했다. 하지만 이번에 크로스플랫폼 앱 프레임워크를 사용해서 앱을 개발하면서 정말 많이 들었던 생각이 ‘미리 네이티브 개발 좀 해볼걸’ 이었다. 성능을 끌어올리기 위해서 / 커스텀 기능을 구현하기 위해서 / 외부 sdk 또는 라이브러리를 적용하기 위해서는 필수로 네이티브를 건드려야했는데, 프로젝트 일정 중간에 딥하게 파기에는 시간도 없을 뿐더러 이미 네이티브 담당자가 있는 상황이라 애매한 너낌쓰.. 미리 네이티브 코드를 경험해본 적이 있었다면 좀 더 능동적으로 문제를 해결할 수 있었을 것 같아서 아쉬웠다.</p>\n<h4 id=\"공통화-공통화-공통화-그리고-말잘하는-연습을-할-걸\"><a href=\"#공통화-공통화-공통화-그리고-말잘하는-연습을-할-걸\" class=\"headerlink\" title=\"공통화 공통화 공통화.. 그리고 말잘하는 연습을 할 걸\"></a>공통화 공통화 공통화.. 그리고 말잘하는 연습을 할 걸</h4><p>개인적으로 이전의 프로젝트들에서 컴포넌트/유틸 공통화에 대한 부족함을 느꼈고, 이번 프로젝트에서 열심히 만회했다고 생각한다. 하지만 공통화 해야하는 것이 단순 컴포넌트/유틸 (= 코드조각) 뿐만이 아니라는 것을 이번에 배웠다… 이전에는 컨벤션을 공유 받고 따르는게 내 메인 롤이었다면 이번 프로젝트에서는 컨벤션을 정리하고 가이드하는게 메인 롤이 되면서 공통화 해야할 항목에 대한 시야가 강제로(?) 넓어진게 이유인 것 같다. 들여쓰기나 변수명명법처럼 정적인 것 부터 api 주소 설계, 클래스 설계 처럼 상황에 따라 가변적인 것들까지 일종의 룰이 필요하다는 것을 이번에서야 절실히 깨달았다 ㅋㅋ 쓰고보니 너무나 당연한 이야기이지만… 그리고 이 룰을 서로에게 설득하기 위해, 정리된 룰을 신규 투입 인원에게 효과적으로 인계하기 위해 ‘이유’와 ‘예시’를 명확하게 말로 풀어낼 수 있는 능력이 내게 부족하다는 점도 깨달았다.</p>\n<h4 id=\"좀-더-똑똑하게-판단하고-소리낼-걸\"><a href=\"#좀-더-똑똑하게-판단하고-소리낼-걸\" class=\"headerlink\" title=\"좀 더 똑똑하게 판단하고 소리낼 걸\"></a>좀 더 똑똑하게 판단하고 소리낼 걸</h4><p>요거는 개발 외적인 반성이다. 나는 내가 개발하고 싶은 요건을 집어가는 것을 선호하는데, 이번 프로젝트에서는 그 외에 내가 해야만 하는 일이 생기면서 두 가지를 병행하게 되었다. 물론 내 선택이라 후회하거나 징징거리고 싶은건 아니다 ^_^ 일의 양이 늘어나기는 했지만 원래 일하던 방식도 최선은 아니었으니, 좀 더 효율적으로 일하면 overwork 하지 않을 수 있었을 것 같은데… 아쉽게도 이번에는 ‘내가 일을 하는’게 아니라 ‘일이 나를 끌고가는’ 상황이 벌어지게 되었다. 내가 어느 시간대에 어떤 방식으로 (재택 / 출근) 어떤 업무를 처리할 때 효율이 가장 높은 지, 각각의 할 일이 어느정도의 우선 순위를 가지는 지를 똑똑하게 판단하고 소리내었으면 좋았으련만, 소심하게 판단을 일임하거나 보류하거나 쉬쉬한게 결과적으로는 내 정신 &amp; 육체 건강의 피폐함을 초래한 것 같아 정말 아쉬웠다.</p>\n<h3 id=\"하반기-키워드\"><a href=\"#하반기-키워드\" class=\"headerlink\" title=\"하반기 키워드\"></a>하반기 키워드</h3><ul>\n<li>디자인 패턴</li>\n<li>Redux Recoil MobX</li>\n<li>Android / iOS 개발 및 마켓 배포</li>\n<li>Gitlab 활용 BP</li>\n<li>내가 참여할 수 있는 의사결정에는 능동적으로</li>\n<li>말을 잘하는 연습 (책 읽기?)</li>\n</ul>\n<p>고생했고, 다음에는 더 잘할 수 있을거라 믿는당 나자신 화이팅</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 22:58:50 GMT+0900 (대한민국 표준시)","title":"220826","path":"2022/08/26/Diary/220826/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-08-26T08:00:21.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-08-26T08:00:21.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Diary","tags":["Diary"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"220906","date":"2022-09-05T23:40:14.000Z","_content":"### 나에게 부족한 점\n- 실속있게 지식을 공유하는 방법\n- 맥락이 있는 글쓰기\n","source":"_posts/Diary/220906.md","raw":"---\ntitle: 220906\ndate: 2022-09-06 08:40:14\ntags: [Diary]\ncategories: [Diary]\n---\n### 나에게 부족한 점\n- 실속있게 지식을 공유하는 방법\n- 맥락이 있는 글쓰기\n","slug":"Diary/220906","published":1,"updated":"2023-01-22T13:58:50.506Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2rq0009tqwe1pvr7wkg","content":"<h3 id=\"나에게-부족한-점\"><a href=\"#나에게-부족한-점\" class=\"headerlink\" title=\"나에게 부족한 점\"></a>나에게 부족한 점</h3><ul>\n<li>실속있게 지식을 공유하는 방법</li>\n<li>맥락이 있는 글쓰기</li>\n</ul>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h3 id=\"나에게-부족한-점\"><a href=\"#나에게-부족한-점\" class=\"headerlink\" title=\"나에게 부족한 점\"></a>나에게 부족한 점</h3><ul>\n<li>실속있게 지식을 공유하는 방법</li>\n<li>맥락이 있는 글쓰기</li>\n</ul>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 22:58:50 GMT+0900 (대한민국 표준시)","title":"220906","path":"2022/09/06/Diary/220906/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-09-05T23:40:14.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-09-05T23:40:14.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Diary","tags":["Diary"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"220915","date":"2022-09-15T09:40:14.000Z","_content":"### 어떤점을 보완하고싶은지\n- 각 기술의 장단점에 대한 직관을 기르고 싶다\n  - 이거 기르려면 무조건 경험을 넓혀야할 것 같아서 ㅎㅎ\n    - 쿠버네티스 공부를 시작했다\n    - 서비스 기획 UX/UI 발표 제안 같은 영역도 진지하게 임해볼까\n- 내가 알고있는 영역과 내가 추측하고 있는 영역 (얼마나 자신있게 추측하는 지도 또 다르겠지)을 잘 버무려서 말하는 능력을 기르고 싶다\n  - 실속없이 알고있는 것을 너무 디테일하게 다 털어서 이야기 해버리거나 (밑천이 드러남)\n  - 아는 것도 제대로 말 못하거나 (어버버..)\n  - 확신의 정도가 다른 추론을 남에게 말하면서 강약 조절실패하거나\n  - 등등 자괴감 모먼트가 종종 있다...... 멋쟁이가 되고싶다 ㅠㅠ\n","source":"_posts/Diary/220915.md","raw":"---\ntitle: 220915\ndate: 2022-09-15 18:40:14\ntags: [Diary]\ncategories: [Diary]\n---\n### 어떤점을 보완하고싶은지\n- 각 기술의 장단점에 대한 직관을 기르고 싶다\n  - 이거 기르려면 무조건 경험을 넓혀야할 것 같아서 ㅎㅎ\n    - 쿠버네티스 공부를 시작했다\n    - 서비스 기획 UX/UI 발표 제안 같은 영역도 진지하게 임해볼까\n- 내가 알고있는 영역과 내가 추측하고 있는 영역 (얼마나 자신있게 추측하는 지도 또 다르겠지)을 잘 버무려서 말하는 능력을 기르고 싶다\n  - 실속없이 알고있는 것을 너무 디테일하게 다 털어서 이야기 해버리거나 (밑천이 드러남)\n  - 아는 것도 제대로 말 못하거나 (어버버..)\n  - 확신의 정도가 다른 추론을 남에게 말하면서 강약 조절실패하거나\n  - 등등 자괴감 모먼트가 종종 있다...... 멋쟁이가 되고싶다 ㅠㅠ\n","slug":"Diary/220915","published":1,"updated":"2023-01-22T13:58:50.506Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2rr000btqwe5nrfgk9g","content":"<h3 id=\"어떤점을-보완하고싶은지\"><a href=\"#어떤점을-보완하고싶은지\" class=\"headerlink\" title=\"어떤점을 보완하고싶은지\"></a>어떤점을 보완하고싶은지</h3><ul>\n<li>각 기술의 장단점에 대한 직관을 기르고 싶다<ul>\n<li>이거 기르려면 무조건 경험을 넓혀야할 것 같아서 ㅎㅎ<ul>\n<li>쿠버네티스 공부를 시작했다</li>\n<li>서비스 기획 UX/UI 발표 제안 같은 영역도 진지하게 임해볼까</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>내가 알고있는 영역과 내가 추측하고 있는 영역 (얼마나 자신있게 추측하는 지도 또 다르겠지)을 잘 버무려서 말하는 능력을 기르고 싶다<ul>\n<li>실속없이 알고있는 것을 너무 디테일하게 다 털어서 이야기 해버리거나 (밑천이 드러남)</li>\n<li>아는 것도 제대로 말 못하거나 (어버버..)</li>\n<li>확신의 정도가 다른 추론을 남에게 말하면서 강약 조절실패하거나</li>\n<li>등등 자괴감 모먼트가 종종 있다…… 멋쟁이가 되고싶다 ㅠㅠ</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h3 id=\"어떤점을-보완하고싶은지\"><a href=\"#어떤점을-보완하고싶은지\" class=\"headerlink\" title=\"어떤점을 보완하고싶은지\"></a>어떤점을 보완하고싶은지</h3><ul>\n<li>각 기술의 장단점에 대한 직관을 기르고 싶다<ul>\n<li>이거 기르려면 무조건 경험을 넓혀야할 것 같아서 ㅎㅎ<ul>\n<li>쿠버네티스 공부를 시작했다</li>\n<li>서비스 기획 UX/UI 발표 제안 같은 영역도 진지하게 임해볼까</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>내가 알고있는 영역과 내가 추측하고 있는 영역 (얼마나 자신있게 추측하는 지도 또 다르겠지)을 잘 버무려서 말하는 능력을 기르고 싶다<ul>\n<li>실속없이 알고있는 것을 너무 디테일하게 다 털어서 이야기 해버리거나 (밑천이 드러남)</li>\n<li>아는 것도 제대로 말 못하거나 (어버버..)</li>\n<li>확신의 정도가 다른 추론을 남에게 말하면서 강약 조절실패하거나</li>\n<li>등등 자괴감 모먼트가 종종 있다…… 멋쟁이가 되고싶다 ㅠㅠ</li>\n</ul>\n</li>\n</ul>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 22:58:50 GMT+0900 (대한민국 표준시)","title":"220915","path":"2022/09/15/Diary/220915/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-09-15T09:40:14.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-09-15T09:40:14.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Diary","tags":["Diary"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"230118","date":"2023-01-17T21:43:13.000Z","_content":"### 어느 방향을 커리어를 쌓고싶은지\n다양한 역할의 사람들과 협업하다보면 다른 역할에 대한 흥미가 생길 때가 많다.  \n\n나는 이런 흥미를 사이드 프로젝트를 통해 해소하는 편인데, 이런 경험이 업무에 도움이 될 때도 있지만 당연하게도 대부분은 겉핥기식라서 오히려 잘못된 지식 얻거나 착각을 하게 되기도 한다. \n\n가장 자주 하는 착각은 “나 이정도면 이것도 잘하는데?” 인데, 아주 위험한 (하지만 매 번 또 하게 되는) 생각이다. 특히 요즘에는 적은 작업만으로도 툴이나 프레임워크의 도움을 받아 꽤 그럴싸한 결과물을 얻을 수 있어서 그런지 착각하기 더 좋은 시대인 것 같다. 내부의 철학을 이해하기보다는 겉핥기로 두어번 써보는게 다라서 기억도 깊게 남지 않고, 잘안풀리기 시작하면 마음이 시들해져서 여기저기 또 다른 새로운 것을 찾아다닌다.\n\n그렇다고 여기저기 한 눈 팔지 않고 특정 분야를 파서 1등을 할 수 있을 것 같냐 하면 그것도 자신이 없다. 나는 여전히 레퍼런스를 참고해서 ‘쓰는 사람’으로 일하고 있고 (’만드는 사람’ 이 아닌), 뭔가를 완벽히 알아냈다는 성취감을 느낄 때보다 계속해서 모르는게 늘어가는 느낌이 들어 막막할 때가 더 많기 때문이다.\n\n특히 작년 하반기에 내가 다른사람보다 적은 노력으로도 잘해내는게 뭔지, 그걸하면서 성취 + 수익을 얻으려면 해야하는 일이 뭔지, 그 일을 가장 좋은 환경에서 할 수 있는 조직은 어디인지 고민이 많았다. 답이 없는 고민이라 생각하다보면 어영부영 시간이 훌쩍가버리는 것을 알기 때문에 고민을 하는 것 조차 사치스러운 기분이 들기 일쑤... 올해는 계획적으로 접근하자 😌","source":"_posts/Diary/230113.md","raw":"---\ntitle: 230118\ndate: 2023-01-18 06:43:13\ntags: [Diary]\ncategories: [Diary]\n---\n### 어느 방향을 커리어를 쌓고싶은지\n다양한 역할의 사람들과 협업하다보면 다른 역할에 대한 흥미가 생길 때가 많다.  \n\n나는 이런 흥미를 사이드 프로젝트를 통해 해소하는 편인데, 이런 경험이 업무에 도움이 될 때도 있지만 당연하게도 대부분은 겉핥기식라서 오히려 잘못된 지식 얻거나 착각을 하게 되기도 한다. \n\n가장 자주 하는 착각은 “나 이정도면 이것도 잘하는데?” 인데, 아주 위험한 (하지만 매 번 또 하게 되는) 생각이다. 특히 요즘에는 적은 작업만으로도 툴이나 프레임워크의 도움을 받아 꽤 그럴싸한 결과물을 얻을 수 있어서 그런지 착각하기 더 좋은 시대인 것 같다. 내부의 철학을 이해하기보다는 겉핥기로 두어번 써보는게 다라서 기억도 깊게 남지 않고, 잘안풀리기 시작하면 마음이 시들해져서 여기저기 또 다른 새로운 것을 찾아다닌다.\n\n그렇다고 여기저기 한 눈 팔지 않고 특정 분야를 파서 1등을 할 수 있을 것 같냐 하면 그것도 자신이 없다. 나는 여전히 레퍼런스를 참고해서 ‘쓰는 사람’으로 일하고 있고 (’만드는 사람’ 이 아닌), 뭔가를 완벽히 알아냈다는 성취감을 느낄 때보다 계속해서 모르는게 늘어가는 느낌이 들어 막막할 때가 더 많기 때문이다.\n\n특히 작년 하반기에 내가 다른사람보다 적은 노력으로도 잘해내는게 뭔지, 그걸하면서 성취 + 수익을 얻으려면 해야하는 일이 뭔지, 그 일을 가장 좋은 환경에서 할 수 있는 조직은 어디인지 고민이 많았다. 답이 없는 고민이라 생각하다보면 어영부영 시간이 훌쩍가버리는 것을 알기 때문에 고민을 하는 것 조차 사치스러운 기분이 들기 일쑤... 올해는 계획적으로 접근하자 😌","slug":"Diary/230113","published":1,"updated":"2023-01-22T13:58:50.506Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2rs000dtqwe96a6eks8","content":"<h3 id=\"어느-방향을-커리어를-쌓고싶은지\"><a href=\"#어느-방향을-커리어를-쌓고싶은지\" class=\"headerlink\" title=\"어느 방향을 커리어를 쌓고싶은지\"></a>어느 방향을 커리어를 쌓고싶은지</h3><p>다양한 역할의 사람들과 협업하다보면 다른 역할에 대한 흥미가 생길 때가 많다.  </p>\n<p>나는 이런 흥미를 사이드 프로젝트를 통해 해소하는 편인데, 이런 경험이 업무에 도움이 될 때도 있지만 당연하게도 대부분은 겉핥기식라서 오히려 잘못된 지식 얻거나 착각을 하게 되기도 한다. </p>\n<p>가장 자주 하는 착각은 “나 이정도면 이것도 잘하는데?” 인데, 아주 위험한 (하지만 매 번 또 하게 되는) 생각이다. 특히 요즘에는 적은 작업만으로도 툴이나 프레임워크의 도움을 받아 꽤 그럴싸한 결과물을 얻을 수 있어서 그런지 착각하기 더 좋은 시대인 것 같다. 내부의 철학을 이해하기보다는 겉핥기로 두어번 써보는게 다라서 기억도 깊게 남지 않고, 잘안풀리기 시작하면 마음이 시들해져서 여기저기 또 다른 새로운 것을 찾아다닌다.</p>\n<p>그렇다고 여기저기 한 눈 팔지 않고 특정 분야를 파서 1등을 할 수 있을 것 같냐 하면 그것도 자신이 없다. 나는 여전히 레퍼런스를 참고해서 ‘쓰는 사람’으로 일하고 있고 (’만드는 사람’ 이 아닌), 뭔가를 완벽히 알아냈다는 성취감을 느낄 때보다 계속해서 모르는게 늘어가는 느낌이 들어 막막할 때가 더 많기 때문이다.</p>\n<p>특히 작년 하반기에 내가 다른사람보다 적은 노력으로도 잘해내는게 뭔지, 그걸하면서 성취 + 수익을 얻으려면 해야하는 일이 뭔지, 그 일을 가장 좋은 환경에서 할 수 있는 조직은 어디인지 고민이 많았다. 답이 없는 고민이라 생각하다보면 어영부영 시간이 훌쩍가버리는 것을 알기 때문에 고민을 하는 것 조차 사치스러운 기분이 들기 일쑤… 올해는 계획적으로 접근하자 😌</p>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h3 id=\"어느-방향을-커리어를-쌓고싶은지\"><a href=\"#어느-방향을-커리어를-쌓고싶은지\" class=\"headerlink\" title=\"어느 방향을 커리어를 쌓고싶은지\"></a>어느 방향을 커리어를 쌓고싶은지</h3><p>다양한 역할의 사람들과 협업하다보면 다른 역할에 대한 흥미가 생길 때가 많다.  </p>\n<p>나는 이런 흥미를 사이드 프로젝트를 통해 해소하는 편인데, 이런 경험이 업무에 도움이 될 때도 있지만 당연하게도 대부분은 겉핥기식라서 오히려 잘못된 지식 얻거나 착각을 하게 되기도 한다. </p>\n<p>가장 자주 하는 착각은 “나 이정도면 이것도 잘하는데?” 인데, 아주 위험한 (하지만 매 번 또 하게 되는) 생각이다. 특히 요즘에는 적은 작업만으로도 툴이나 프레임워크의 도움을 받아 꽤 그럴싸한 결과물을 얻을 수 있어서 그런지 착각하기 더 좋은 시대인 것 같다. 내부의 철학을 이해하기보다는 겉핥기로 두어번 써보는게 다라서 기억도 깊게 남지 않고, 잘안풀리기 시작하면 마음이 시들해져서 여기저기 또 다른 새로운 것을 찾아다닌다.</p>\n<p>그렇다고 여기저기 한 눈 팔지 않고 특정 분야를 파서 1등을 할 수 있을 것 같냐 하면 그것도 자신이 없다. 나는 여전히 레퍼런스를 참고해서 ‘쓰는 사람’으로 일하고 있고 (’만드는 사람’ 이 아닌), 뭔가를 완벽히 알아냈다는 성취감을 느낄 때보다 계속해서 모르는게 늘어가는 느낌이 들어 막막할 때가 더 많기 때문이다.</p>\n<p>특히 작년 하반기에 내가 다른사람보다 적은 노력으로도 잘해내는게 뭔지, 그걸하면서 성취 + 수익을 얻으려면 해야하는 일이 뭔지, 그 일을 가장 좋은 환경에서 할 수 있는 조직은 어디인지 고민이 많았다. 답이 없는 고민이라 생각하다보면 어영부영 시간이 훌쩍가버리는 것을 알기 때문에 고민을 하는 것 조차 사치스러운 기분이 들기 일쑤… 올해는 계획적으로 접근하자 😌</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 22:58:50 GMT+0900 (대한민국 표준시)","title":"230118","path":"2023/01/18/Diary/230113/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2023-01-17T21:43:13.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2023-01-17T21:43:13.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Diary","tags":["Diary"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"230122","date":"2023-01-22T13:30:04.000Z","_content":"### 어떤 사람으로 보여지고 싶은지, 어떤 사람이 되고 싶은지 \n매번 고민하는 주제인데   \n주변에 정적 콘텐츠로 표출하는 모습과 실제 모습에 갭이 있는 사람들이 많다. 편집과 선택 과정에서 본인이 보여지고 싶은 모습 위주로 필터링했기 때문이라고 생각한다.\n그런데 그 사람들이 필터링에서 선택하지 않은 모습들 (고급스럽지 않거나, 유쾌하지 않거나, 예쁘지 않거나 등등)이 나는 더 매력적으로 느껴질 때가 많아서 나를 표현하는 콘텐츠를 만들때에 이런저런 고민이 많아졌다. 다른사람의 콘텐츠를 봤을 때 느낀 것 처럼, 멋지지 않은 면들 (현실)을 담고 싶기도 하지만 또 빼버리고 싶기도 하고...\n내가 되고 싶은 사람은 멋있는 일 못난 일 두루 경험해서 단단해진 사람인데, 보여지고 싶은 사람과 모습과 갭이 생기니까 되고 싶은 사람이 되는 것에도 시간이 부족한데 보여지고 싶은 사람인척 하느라 시간을 다 써버리게 되는 느낌이 들때도 있다.\n\n언젠가 두 모습이 같아지는 날도 올까? ㅎㅎ \n\n\n### 회고의 중요성은 이제 알았고, 그 다음은??\n작년부터 개인적으로 작성했던 회고를 모으고 있다. \n한 번에 쭉 써내려가는게 아니라 며칠을 두고 내가 그 시점에 느끼는 바를 충분히 담으려고 노력해서 썼는데 나중에 쭉 훑어보니 기술적인 글보다 더 큰 도움이 되는 것 같다. \n추측하건대 아마도 기술에 대한 견해는 계속해서 넓어지는 방향으로만 발전하지만 스스로에 대한 성찰은 해도해도 제자리 걸음 같은 느낌이 들어서 그런거 아닐까? \n\n이제 회고의 중요성은 알겠는데, 그 다음은 회고할 때 도출하는 '다음엔 이렇게 해보자'를 실제로 추적관리하는게 중요한 것 같다.\n작년 회고에 앞으로 이렇게 하자~ 고 적어둔건 참 많은데 회고 적자마자 까먹어버린게 대부분이다 ㅎㅎ \n\n회고를 한 뒤에는 action item에 대해 주기적으로 관리를 하자. 이렇게 쓴것도 또 까먹는건 아닌가 모르지만 ^^\n","source":"_posts/Diary/230122.md","raw":"---\ntitle: 230122\ndate: 2023-01-22 22:30:04\ntags: [Diary]\ncategories: [Diary]\n---\n### 어떤 사람으로 보여지고 싶은지, 어떤 사람이 되고 싶은지 \n매번 고민하는 주제인데   \n주변에 정적 콘텐츠로 표출하는 모습과 실제 모습에 갭이 있는 사람들이 많다. 편집과 선택 과정에서 본인이 보여지고 싶은 모습 위주로 필터링했기 때문이라고 생각한다.\n그런데 그 사람들이 필터링에서 선택하지 않은 모습들 (고급스럽지 않거나, 유쾌하지 않거나, 예쁘지 않거나 등등)이 나는 더 매력적으로 느껴질 때가 많아서 나를 표현하는 콘텐츠를 만들때에 이런저런 고민이 많아졌다. 다른사람의 콘텐츠를 봤을 때 느낀 것 처럼, 멋지지 않은 면들 (현실)을 담고 싶기도 하지만 또 빼버리고 싶기도 하고...\n내가 되고 싶은 사람은 멋있는 일 못난 일 두루 경험해서 단단해진 사람인데, 보여지고 싶은 사람과 모습과 갭이 생기니까 되고 싶은 사람이 되는 것에도 시간이 부족한데 보여지고 싶은 사람인척 하느라 시간을 다 써버리게 되는 느낌이 들때도 있다.\n\n언젠가 두 모습이 같아지는 날도 올까? ㅎㅎ \n\n\n### 회고의 중요성은 이제 알았고, 그 다음은??\n작년부터 개인적으로 작성했던 회고를 모으고 있다. \n한 번에 쭉 써내려가는게 아니라 며칠을 두고 내가 그 시점에 느끼는 바를 충분히 담으려고 노력해서 썼는데 나중에 쭉 훑어보니 기술적인 글보다 더 큰 도움이 되는 것 같다. \n추측하건대 아마도 기술에 대한 견해는 계속해서 넓어지는 방향으로만 발전하지만 스스로에 대한 성찰은 해도해도 제자리 걸음 같은 느낌이 들어서 그런거 아닐까? \n\n이제 회고의 중요성은 알겠는데, 그 다음은 회고할 때 도출하는 '다음엔 이렇게 해보자'를 실제로 추적관리하는게 중요한 것 같다.\n작년 회고에 앞으로 이렇게 하자~ 고 적어둔건 참 많은데 회고 적자마자 까먹어버린게 대부분이다 ㅎㅎ \n\n회고를 한 뒤에는 action item에 대해 주기적으로 관리를 하자. 이렇게 쓴것도 또 까먹는건 아닌가 모르지만 ^^\n","slug":"Diary/230122","published":1,"updated":"2023-01-22T13:58:50.505Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2rt000htqwehv9x2d7g","content":"<h3 id=\"어떤-사람으로-보여지고-싶은지-어떤-사람이-되고-싶은지\"><a href=\"#어떤-사람으로-보여지고-싶은지-어떤-사람이-되고-싶은지\" class=\"headerlink\" title=\"어떤 사람으로 보여지고 싶은지, 어떤 사람이 되고 싶은지\"></a>어떤 사람으로 보여지고 싶은지, 어떤 사람이 되고 싶은지</h3><p>매번 고민하는 주제인데<br>주변에 정적 콘텐츠로 표출하는 모습과 실제 모습에 갭이 있는 사람들이 많다. 편집과 선택 과정에서 본인이 보여지고 싶은 모습 위주로 필터링했기 때문이라고 생각한다.<br>그런데 그 사람들이 필터링에서 선택하지 않은 모습들 (고급스럽지 않거나, 유쾌하지 않거나, 예쁘지 않거나 등등)이 나는 더 매력적으로 느껴질 때가 많아서 나를 표현하는 콘텐츠를 만들때에 이런저런 고민이 많아졌다. 다른사람의 콘텐츠를 봤을 때 느낀 것 처럼, 멋지지 않은 면들 (현실)을 담고 싶기도 하지만 또 빼버리고 싶기도 하고…<br>내가 되고 싶은 사람은 멋있는 일 못난 일 두루 경험해서 단단해진 사람인데, 보여지고 싶은 사람과 모습과 갭이 생기니까 되고 싶은 사람이 되는 것에도 시간이 부족한데 보여지고 싶은 사람인척 하느라 시간을 다 써버리게 되는 느낌이 들때도 있다.</p>\n<p>언젠가 두 모습이 같아지는 날도 올까? ㅎㅎ </p>\n<h3 id=\"회고의-중요성은-이제-알았고-그-다음은\"><a href=\"#회고의-중요성은-이제-알았고-그-다음은\" class=\"headerlink\" title=\"회고의 중요성은 이제 알았고, 그 다음은??\"></a>회고의 중요성은 이제 알았고, 그 다음은??</h3><p>작년부터 개인적으로 작성했던 회고를 모으고 있다.<br>한 번에 쭉 써내려가는게 아니라 며칠을 두고 내가 그 시점에 느끼는 바를 충분히 담으려고 노력해서 썼는데 나중에 쭉 훑어보니 기술적인 글보다 더 큰 도움이 되는 것 같다.<br>추측하건대 아마도 기술에 대한 견해는 계속해서 넓어지는 방향으로만 발전하지만 스스로에 대한 성찰은 해도해도 제자리 걸음 같은 느낌이 들어서 그런거 아닐까? </p>\n<p>이제 회고의 중요성은 알겠는데, 그 다음은 회고할 때 도출하는 ‘다음엔 이렇게 해보자’를 실제로 추적관리하는게 중요한 것 같다.<br>작년 회고에 앞으로 이렇게 하자~ 고 적어둔건 참 많은데 회고 적자마자 까먹어버린게 대부분이다 ㅎㅎ </p>\n<p>회고를 한 뒤에는 action item에 대해 주기적으로 관리를 하자. 이렇게 쓴것도 또 까먹는건 아닌가 모르지만 ^^</p>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h3 id=\"어떤-사람으로-보여지고-싶은지-어떤-사람이-되고-싶은지\"><a href=\"#어떤-사람으로-보여지고-싶은지-어떤-사람이-되고-싶은지\" class=\"headerlink\" title=\"어떤 사람으로 보여지고 싶은지, 어떤 사람이 되고 싶은지\"></a>어떤 사람으로 보여지고 싶은지, 어떤 사람이 되고 싶은지</h3><p>매번 고민하는 주제인데<br>주변에 정적 콘텐츠로 표출하는 모습과 실제 모습에 갭이 있는 사람들이 많다. 편집과 선택 과정에서 본인이 보여지고 싶은 모습 위주로 필터링했기 때문이라고 생각한다.<br>그런데 그 사람들이 필터링에서 선택하지 않은 모습들 (고급스럽지 않거나, 유쾌하지 않거나, 예쁘지 않거나 등등)이 나는 더 매력적으로 느껴질 때가 많아서 나를 표현하는 콘텐츠를 만들때에 이런저런 고민이 많아졌다. 다른사람의 콘텐츠를 봤을 때 느낀 것 처럼, 멋지지 않은 면들 (현실)을 담고 싶기도 하지만 또 빼버리고 싶기도 하고…<br>내가 되고 싶은 사람은 멋있는 일 못난 일 두루 경험해서 단단해진 사람인데, 보여지고 싶은 사람과 모습과 갭이 생기니까 되고 싶은 사람이 되는 것에도 시간이 부족한데 보여지고 싶은 사람인척 하느라 시간을 다 써버리게 되는 느낌이 들때도 있다.</p>\n<p>언젠가 두 모습이 같아지는 날도 올까? ㅎㅎ </p>\n<h3 id=\"회고의-중요성은-이제-알았고-그-다음은\"><a href=\"#회고의-중요성은-이제-알았고-그-다음은\" class=\"headerlink\" title=\"회고의 중요성은 이제 알았고, 그 다음은??\"></a>회고의 중요성은 이제 알았고, 그 다음은??</h3><p>작년부터 개인적으로 작성했던 회고를 모으고 있다.<br>한 번에 쭉 써내려가는게 아니라 며칠을 두고 내가 그 시점에 느끼는 바를 충분히 담으려고 노력해서 썼는데 나중에 쭉 훑어보니 기술적인 글보다 더 큰 도움이 되는 것 같다.<br>추측하건대 아마도 기술에 대한 견해는 계속해서 넓어지는 방향으로만 발전하지만 스스로에 대한 성찰은 해도해도 제자리 걸음 같은 느낌이 들어서 그런거 아닐까? </p>\n<p>이제 회고의 중요성은 알겠는데, 그 다음은 회고할 때 도출하는 ‘다음엔 이렇게 해보자’를 실제로 추적관리하는게 중요한 것 같다.<br>작년 회고에 앞으로 이렇게 하자~ 고 적어둔건 참 많은데 회고 적자마자 까먹어버린게 대부분이다 ㅎㅎ </p>\n<p>회고를 한 뒤에는 action item에 대해 주기적으로 관리를 하자. 이렇게 쓴것도 또 까먹는건 아닌가 모르지만 ^^</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 22:58:50 GMT+0900 (대한민국 표준시)","title":"230122","path":"2023/01/22/Diary/230122/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2023-01-22T13:30:04.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2023-01-22T13:30:04.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Diary","tags":["Diary"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[JavaScript] 비동기 프로그래밍","date":"2022-04-04T15:01:04.000Z","_content":"\n# 이 글을 쓰게된 이유\n\n나는 웹을 경험한 기간이 짧다. 그래서 감으로만 익히고 넘어간 개념도 많다. 그 중 하나가 JavaScript에서의 비동기 처리이다. 우선은 비동기처리 패턴을 시간 순으로 나열해보고, 마지막으로는 전부터 궁금했던 (하지만 시간이 없다는 핑계로 그냥 넘어갔던 ㅋㅋㅋ) 동기함수에서 비동기 함수를 호출할 때의 코드 패턴에 대해 정리하려고 한다.\n\n# 비동기처리 패턴의 역사\n\n웹을 경험한 기간이 짧아서 아쉬운 점은 실제로 내가 예전의 구린 웹을 써본 적이 없다는 것이다 ㅠㅠ 이건 비단 웹 뿐만 아니라 프로그래밍의 거의 모든 분야에서 그렇긴 하지만. 실제로 불편했던 기억이 있으면 예를 들어 설명하기 더 좋지 않았을까 생각한다.\n아무튼 나는 경험한 바가 없기 때문에, 비동기처리 패턴이 예전엔 어떻게 구렸는 지 좀 찾아봤다.\n\n## Callback 패턴\n\n```javascript\nconst doSomethingAsynchronously(){\n    asyncFuncWithCallback(()=>{\n        doSomethng();\n    })\n}\n```\n\n이건 안써봐도 별로이게 생겼다. 순차적으로 비동기 처리를 원하는 경우, Callback 안에 Callback 안에 Callback.. 을 넣어줘야한다.\n\n## Promise 패턴 (then, catch, finally)\n\n```javascript\nasyncFunc()\n  .then((res) => {\n    //Promise is resolved\n  })\n  .catch(() => {\n    //Promise is rejected\n  })\n  .finally(() => {\n    //Promise is resolved or rejected\n  });\n```\n\nES6에 등장했다는 이 패턴에서는, 순차적으로 비동기 처리를 원하는 경우 then then then.. 으로 Promise를 return하고 다음 then에서 처리하는 방식으로 엮을 수 있다.\n위에 것 보다는 편해보인다. 하지만 뒤쪽의 then 절에서 res에 뭐가 들어있는 지 따라가는 것이 쉽지 않다.\n\n## async await 패턴\n\n```javascript\nconst res1 = await asyncFunc1();\nconst res2 = await asyncFunc2();\nconsole.log(res1, res2);\n```\n\nES8에 등장한 이 패턴은, 확실히 위의 두 패턴보다 가독성이 좋아 보인다.\n\n# 동기함수에서 비동기 함수를 호출하고 싶은데...\n\n예를 들어 화면 쪽 로직에 이런 기능이 있다.\n\n'제출하기 버튼을 누르면 제출 api를 호출하게 해주세요'\n\n물론 제출하기 버튼에 제출 api 호출 함수를 넣으면 된다. 바로 동작하는 것을 볼 수 있다. 그런데 여기에 type checking 이 들어가면 버튼의 onClick 핸들러는 동기 함수를 받기를 원하므로, 비동기인 api 호출 함수를 넣으면 정적 소스 분석툴에서 type이 맞지 않다고 징징거린다.\n\n그래서 처음에는 이런식의 코드를 짰다.\n\n```javascript\nconst groupedAsyncFunc = async () => {\n  const res1 = await asyncFunc1();\n  const res2 = await asyncFunc2();\n  return res1 + res2;\n};\n<button\n  onClick={() => {\n    groupedAsyncFunc.then((res) => {\n      doSomething(res);\n    });\n  }}\n/>;\n```\n\n다건의 연속된 비동기 처리는 async await로 보기 좋게 짜더라도, 마지막에 한번은 동기로 마무리하려면 then을 써주어야한다고 생각한 것이다. 여유를 갖고 검색해볼 시간이 없었던 것 같다.\n\n다행히 시간을 내어 이 내용을 구글링한 끝에, 두 가지의 대안을 찾았다.\n\n1. 비동기 함수 호출 시 void 붙여주기\n\n```javascript\nconst groupedAsyncFunc = async () => {\n  const res1 = await asyncFunc1();\n  const res2 = await asyncFunc2();\n  return res1 + res2;\n};\n<button onClick={() => void groupedAsyncFunc()} />;\n```\n\n2. IIFE (즉시실행함수) 패턴 사용하기\n\n```javascript\nconst groupedAsyncFunc = async () => {\n  const res1 = await asyncFunc1();\n  const res2 = await asyncFunc2();\n  return res1 + res2;\n};\n<button\n  onClick={() => {\n    (async () => await groupedAsyncFunc())();\n  }}\n/>;\n```\n\n개인적으로는 1안의 void 가 가독성이 좋아서 1안을 사용하기로 했으나, 찾아보니 [2안을 사용하도록 가이드](https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/async_function)하는 경우도 꽤 있었다. 나는 몰랐지만, IIFE는 이 케이스 뿐만 아니라 javascript 진영에서 원래 널리 쓰고 있는 패턴이며, 변수의 호이스팅 때문에 원하는 대로 동작하지 않는 케이스를 방지해준다는 큰 장점이 있다고 한다. 이 내용을 접했을 때, 내가 _동기함수에서 비동기 함수를 호출_ 하고 싶다는 내 작은 요건에 너무 오버되는 패턴을 찾은 것 같다는 생각을 했다. ㅋㅋㅋ 굳이 이걸 쓸 필요가 없어보였다. Scope 처리가 너무나 당연한 환경에서 웹 개발을 하고있는 나에게는 별로 매력적이지 않아보였기 때문이다. 그래서 2안은 IIFE 개념에 대해 접할 수 있었던 것에만 의의를 두고, 사용하지는 않기로 했다.\n\n# 결론\n\n비동기 action의 결과를 명시적으로 기다리지 않는 경우 void 키워드를 붙여주자.\n","source":"_posts/Tech/JavaScript/asynchronous-programming.md","raw":"---\ntitle: \"[JavaScript] 비동기 프로그래밍\"\ndate: 2022-04-05 00:01:04\ntags: [JavaScript]\ncategories: [Tech, JavaScript]\n---\n\n# 이 글을 쓰게된 이유\n\n나는 웹을 경험한 기간이 짧다. 그래서 감으로만 익히고 넘어간 개념도 많다. 그 중 하나가 JavaScript에서의 비동기 처리이다. 우선은 비동기처리 패턴을 시간 순으로 나열해보고, 마지막으로는 전부터 궁금했던 (하지만 시간이 없다는 핑계로 그냥 넘어갔던 ㅋㅋㅋ) 동기함수에서 비동기 함수를 호출할 때의 코드 패턴에 대해 정리하려고 한다.\n\n# 비동기처리 패턴의 역사\n\n웹을 경험한 기간이 짧아서 아쉬운 점은 실제로 내가 예전의 구린 웹을 써본 적이 없다는 것이다 ㅠㅠ 이건 비단 웹 뿐만 아니라 프로그래밍의 거의 모든 분야에서 그렇긴 하지만. 실제로 불편했던 기억이 있으면 예를 들어 설명하기 더 좋지 않았을까 생각한다.\n아무튼 나는 경험한 바가 없기 때문에, 비동기처리 패턴이 예전엔 어떻게 구렸는 지 좀 찾아봤다.\n\n## Callback 패턴\n\n```javascript\nconst doSomethingAsynchronously(){\n    asyncFuncWithCallback(()=>{\n        doSomethng();\n    })\n}\n```\n\n이건 안써봐도 별로이게 생겼다. 순차적으로 비동기 처리를 원하는 경우, Callback 안에 Callback 안에 Callback.. 을 넣어줘야한다.\n\n## Promise 패턴 (then, catch, finally)\n\n```javascript\nasyncFunc()\n  .then((res) => {\n    //Promise is resolved\n  })\n  .catch(() => {\n    //Promise is rejected\n  })\n  .finally(() => {\n    //Promise is resolved or rejected\n  });\n```\n\nES6에 등장했다는 이 패턴에서는, 순차적으로 비동기 처리를 원하는 경우 then then then.. 으로 Promise를 return하고 다음 then에서 처리하는 방식으로 엮을 수 있다.\n위에 것 보다는 편해보인다. 하지만 뒤쪽의 then 절에서 res에 뭐가 들어있는 지 따라가는 것이 쉽지 않다.\n\n## async await 패턴\n\n```javascript\nconst res1 = await asyncFunc1();\nconst res2 = await asyncFunc2();\nconsole.log(res1, res2);\n```\n\nES8에 등장한 이 패턴은, 확실히 위의 두 패턴보다 가독성이 좋아 보인다.\n\n# 동기함수에서 비동기 함수를 호출하고 싶은데...\n\n예를 들어 화면 쪽 로직에 이런 기능이 있다.\n\n'제출하기 버튼을 누르면 제출 api를 호출하게 해주세요'\n\n물론 제출하기 버튼에 제출 api 호출 함수를 넣으면 된다. 바로 동작하는 것을 볼 수 있다. 그런데 여기에 type checking 이 들어가면 버튼의 onClick 핸들러는 동기 함수를 받기를 원하므로, 비동기인 api 호출 함수를 넣으면 정적 소스 분석툴에서 type이 맞지 않다고 징징거린다.\n\n그래서 처음에는 이런식의 코드를 짰다.\n\n```javascript\nconst groupedAsyncFunc = async () => {\n  const res1 = await asyncFunc1();\n  const res2 = await asyncFunc2();\n  return res1 + res2;\n};\n<button\n  onClick={() => {\n    groupedAsyncFunc.then((res) => {\n      doSomething(res);\n    });\n  }}\n/>;\n```\n\n다건의 연속된 비동기 처리는 async await로 보기 좋게 짜더라도, 마지막에 한번은 동기로 마무리하려면 then을 써주어야한다고 생각한 것이다. 여유를 갖고 검색해볼 시간이 없었던 것 같다.\n\n다행히 시간을 내어 이 내용을 구글링한 끝에, 두 가지의 대안을 찾았다.\n\n1. 비동기 함수 호출 시 void 붙여주기\n\n```javascript\nconst groupedAsyncFunc = async () => {\n  const res1 = await asyncFunc1();\n  const res2 = await asyncFunc2();\n  return res1 + res2;\n};\n<button onClick={() => void groupedAsyncFunc()} />;\n```\n\n2. IIFE (즉시실행함수) 패턴 사용하기\n\n```javascript\nconst groupedAsyncFunc = async () => {\n  const res1 = await asyncFunc1();\n  const res2 = await asyncFunc2();\n  return res1 + res2;\n};\n<button\n  onClick={() => {\n    (async () => await groupedAsyncFunc())();\n  }}\n/>;\n```\n\n개인적으로는 1안의 void 가 가독성이 좋아서 1안을 사용하기로 했으나, 찾아보니 [2안을 사용하도록 가이드](https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/async_function)하는 경우도 꽤 있었다. 나는 몰랐지만, IIFE는 이 케이스 뿐만 아니라 javascript 진영에서 원래 널리 쓰고 있는 패턴이며, 변수의 호이스팅 때문에 원하는 대로 동작하지 않는 케이스를 방지해준다는 큰 장점이 있다고 한다. 이 내용을 접했을 때, 내가 _동기함수에서 비동기 함수를 호출_ 하고 싶다는 내 작은 요건에 너무 오버되는 패턴을 찾은 것 같다는 생각을 했다. ㅋㅋㅋ 굳이 이걸 쓸 필요가 없어보였다. Scope 처리가 너무나 당연한 환경에서 웹 개발을 하고있는 나에게는 별로 매력적이지 않아보였기 때문이다. 그래서 2안은 IIFE 개념에 대해 접할 수 있었던 것에만 의의를 두고, 사용하지는 않기로 했다.\n\n# 결론\n\n비동기 action의 결과를 명시적으로 기다리지 않는 경우 void 키워드를 붙여주자.\n","slug":"Tech/JavaScript/asynchronous-programming","published":1,"updated":"2023-01-22T14:04:52.335Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2ru000itqwe4xp8dkqd","content":"<h1 id=\"이-글을-쓰게된-이유\"><a href=\"#이-글을-쓰게된-이유\" class=\"headerlink\" title=\"이 글을 쓰게된 이유\"></a>이 글을 쓰게된 이유</h1><p>나는 웹을 경험한 기간이 짧다. 그래서 감으로만 익히고 넘어간 개념도 많다. 그 중 하나가 JavaScript에서의 비동기 처리이다. 우선은 비동기처리 패턴을 시간 순으로 나열해보고, 마지막으로는 전부터 궁금했던 (하지만 시간이 없다는 핑계로 그냥 넘어갔던 ㅋㅋㅋ) 동기함수에서 비동기 함수를 호출할 때의 코드 패턴에 대해 정리하려고 한다.</p>\n<h1 id=\"비동기처리-패턴의-역사\"><a href=\"#비동기처리-패턴의-역사\" class=\"headerlink\" title=\"비동기처리 패턴의 역사\"></a>비동기처리 패턴의 역사</h1><p>웹을 경험한 기간이 짧아서 아쉬운 점은 실제로 내가 예전의 구린 웹을 써본 적이 없다는 것이다 ㅠㅠ 이건 비단 웹 뿐만 아니라 프로그래밍의 거의 모든 분야에서 그렇긴 하지만. 실제로 불편했던 기억이 있으면 예를 들어 설명하기 더 좋지 않았을까 생각한다.<br>아무튼 나는 경험한 바가 없기 때문에, 비동기처리 패턴이 예전엔 어떻게 구렸는 지 좀 찾아봤다.</p>\n<h2 id=\"Callback-패턴\"><a href=\"#Callback-패턴\" class=\"headerlink\" title=\"Callback 패턴\"></a>Callback 패턴</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">doSomethingAsynchronously</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_\">asyncFuncWithCallback</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_\">doSomethng</span>();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>이건 안써봐도 별로이게 생겼다. 순차적으로 비동기 처리를 원하는 경우, Callback 안에 Callback 안에 Callback.. 을 넣어줘야한다.</p>\n<h2 id=\"Promise-패턴-then-catch-finally\"><a href=\"#Promise-패턴-then-catch-finally\" class=\"headerlink\" title=\"Promise 패턴 (then, catch, finally)\"></a>Promise 패턴 (then, catch, finally)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">asyncFunc</span>()</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//Promise is resolved</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .<span class=\"title function_\">catch</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//Promise is rejected</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .<span class=\"title function_\">finally</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//Promise is resolved or rejected</span></span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>ES6에 등장했다는 이 패턴에서는, 순차적으로 비동기 처리를 원하는 경우 then then then.. 으로 Promise를 return하고 다음 then에서 처리하는 방식으로 엮을 수 있다.<br>위에 것 보다는 편해보인다. 하지만 뒤쪽의 then 절에서 res에 뭐가 들어있는 지 따라가는 것이 쉽지 않다.</p>\n<h2 id=\"async-await-패턴\"><a href=\"#async-await-패턴\" class=\"headerlink\" title=\"async await 패턴\"></a>async await 패턴</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> res1 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc1</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> res2 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc2</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res1, res2);</span><br></pre></td></tr></table></figure>\n\n<p>ES8에 등장한 이 패턴은, 확실히 위의 두 패턴보다 가독성이 좋아 보인다.</p>\n<h1 id=\"동기함수에서-비동기-함수를-호출하고-싶은데…\"><a href=\"#동기함수에서-비동기-함수를-호출하고-싶은데…\" class=\"headerlink\" title=\"동기함수에서 비동기 함수를 호출하고 싶은데…\"></a>동기함수에서 비동기 함수를 호출하고 싶은데…</h1><p>예를 들어 화면 쪽 로직에 이런 기능이 있다.</p>\n<p>‘제출하기 버튼을 누르면 제출 api를 호출하게 해주세요’</p>\n<p>물론 제출하기 버튼에 제출 api 호출 함수를 넣으면 된다. 바로 동작하는 것을 볼 수 있다. 그런데 여기에 type checking 이 들어가면 버튼의 onClick 핸들러는 동기 함수를 받기를 원하므로, 비동기인 api 호출 함수를 넣으면 정적 소스 분석툴에서 type이 맞지 않다고 징징거린다.</p>\n<p>그래서 처음에는 이런식의 코드를 짰다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">groupedAsyncFunc</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res1 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc1</span>();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res2 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc2</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res1 + res2;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">    groupedAsyncFunc.then((res) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">      doSomething(res);</span></span><br><span class=\"line\"><span class=\"language-xml\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-xml\">  &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">/&gt;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>다건의 연속된 비동기 처리는 async await로 보기 좋게 짜더라도, 마지막에 한번은 동기로 마무리하려면 then을 써주어야한다고 생각한 것이다. 여유를 갖고 검색해볼 시간이 없었던 것 같다.</p>\n<p>다행히 시간을 내어 이 내용을 구글링한 끝에, 두 가지의 대안을 찾았다.</p>\n<ol>\n<li>비동기 함수 호출 시 void 붙여주기</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">groupedAsyncFunc</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res1 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc1</span>();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res2 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc2</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res1 + res2;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> void groupedAsyncFunc()&#125; /&gt;</span>;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>IIFE (즉시실행함수) 패턴 사용하기</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">groupedAsyncFunc</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res1 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc1</span>();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res2 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc2</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res1 + res2;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">    (async () =&gt; await groupedAsyncFunc())();</span></span><br><span class=\"line\"><span class=\"language-xml\">  &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">/&gt;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>개인적으로는 1안의 void 가 가독성이 좋아서 1안을 사용하기로 했으나, 찾아보니 <a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/async_function\">2안을 사용하도록 가이드</a>하는 경우도 꽤 있었다. 나는 몰랐지만, IIFE는 이 케이스 뿐만 아니라 javascript 진영에서 원래 널리 쓰고 있는 패턴이며, 변수의 호이스팅 때문에 원하는 대로 동작하지 않는 케이스를 방지해준다는 큰 장점이 있다고 한다. 이 내용을 접했을 때, 내가 <em>동기함수에서 비동기 함수를 호출</em> 하고 싶다는 내 작은 요건에 너무 오버되는 패턴을 찾은 것 같다는 생각을 했다. ㅋㅋㅋ 굳이 이걸 쓸 필요가 없어보였다. Scope 처리가 너무나 당연한 환경에서 웹 개발을 하고있는 나에게는 별로 매력적이지 않아보였기 때문이다. 그래서 2안은 IIFE 개념에 대해 접할 수 있었던 것에만 의의를 두고, 사용하지는 않기로 했다.</p>\n<h1 id=\"결론\"><a href=\"#결론\" class=\"headerlink\" title=\"결론\"></a>결론</h1><p>비동기 action의 결과를 명시적으로 기다리지 않는 경우 void 키워드를 붙여주자.</p>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"이-글을-쓰게된-이유\"><a href=\"#이-글을-쓰게된-이유\" class=\"headerlink\" title=\"이 글을 쓰게된 이유\"></a>이 글을 쓰게된 이유</h1><p>나는 웹을 경험한 기간이 짧다. 그래서 감으로만 익히고 넘어간 개념도 많다. 그 중 하나가 JavaScript에서의 비동기 처리이다. 우선은 비동기처리 패턴을 시간 순으로 나열해보고, 마지막으로는 전부터 궁금했던 (하지만 시간이 없다는 핑계로 그냥 넘어갔던 ㅋㅋㅋ) 동기함수에서 비동기 함수를 호출할 때의 코드 패턴에 대해 정리하려고 한다.</p>\n<h1 id=\"비동기처리-패턴의-역사\"><a href=\"#비동기처리-패턴의-역사\" class=\"headerlink\" title=\"비동기처리 패턴의 역사\"></a>비동기처리 패턴의 역사</h1><p>웹을 경험한 기간이 짧아서 아쉬운 점은 실제로 내가 예전의 구린 웹을 써본 적이 없다는 것이다 ㅠㅠ 이건 비단 웹 뿐만 아니라 프로그래밍의 거의 모든 분야에서 그렇긴 하지만. 실제로 불편했던 기억이 있으면 예를 들어 설명하기 더 좋지 않았을까 생각한다.<br>아무튼 나는 경험한 바가 없기 때문에, 비동기처리 패턴이 예전엔 어떻게 구렸는 지 좀 찾아봤다.</p>\n<h2 id=\"Callback-패턴\"><a href=\"#Callback-패턴\" class=\"headerlink\" title=\"Callback 패턴\"></a>Callback 패턴</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">doSomethingAsynchronously</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_\">asyncFuncWithCallback</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_\">doSomethng</span>();</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>이건 안써봐도 별로이게 생겼다. 순차적으로 비동기 처리를 원하는 경우, Callback 안에 Callback 안에 Callback.. 을 넣어줘야한다.</p>\n<h2 id=\"Promise-패턴-then-catch-finally\"><a href=\"#Promise-패턴-then-catch-finally\" class=\"headerlink\" title=\"Promise 패턴 (then, catch, finally)\"></a>Promise 패턴 (then, catch, finally)</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">asyncFunc</span>()</span><br><span class=\"line\">  .<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//Promise is resolved</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .<span class=\"title function_\">catch</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//Promise is rejected</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  .<span class=\"title function_\">finally</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//Promise is resolved or rejected</span></span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>ES6에 등장했다는 이 패턴에서는, 순차적으로 비동기 처리를 원하는 경우 then then then.. 으로 Promise를 return하고 다음 then에서 처리하는 방식으로 엮을 수 있다.<br>위에 것 보다는 편해보인다. 하지만 뒤쪽의 then 절에서 res에 뭐가 들어있는 지 따라가는 것이 쉽지 않다.</p>\n<h2 id=\"async-await-패턴\"><a href=\"#async-await-패턴\" class=\"headerlink\" title=\"async await 패턴\"></a>async await 패턴</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> res1 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc1</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> res2 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc2</span>();</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(res1, res2);</span><br></pre></td></tr></table></figure>\n\n<p>ES8에 등장한 이 패턴은, 확실히 위의 두 패턴보다 가독성이 좋아 보인다.</p>\n<h1 id=\"동기함수에서-비동기-함수를-호출하고-싶은데…\"><a href=\"#동기함수에서-비동기-함수를-호출하고-싶은데…\" class=\"headerlink\" title=\"동기함수에서 비동기 함수를 호출하고 싶은데…\"></a>동기함수에서 비동기 함수를 호출하고 싶은데…</h1><p>예를 들어 화면 쪽 로직에 이런 기능이 있다.</p>\n<p>‘제출하기 버튼을 누르면 제출 api를 호출하게 해주세요’</p>\n<p>물론 제출하기 버튼에 제출 api 호출 함수를 넣으면 된다. 바로 동작하는 것을 볼 수 있다. 그런데 여기에 type checking 이 들어가면 버튼의 onClick 핸들러는 동기 함수를 받기를 원하므로, 비동기인 api 호출 함수를 넣으면 정적 소스 분석툴에서 type이 맞지 않다고 징징거린다.</p>\n<p>그래서 처음에는 이런식의 코드를 짰다.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">groupedAsyncFunc</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res1 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc1</span>();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res2 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc2</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res1 + res2;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">    groupedAsyncFunc.then((res) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">      doSomething(res);</span></span><br><span class=\"line\"><span class=\"language-xml\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-xml\">  &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">/&gt;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>다건의 연속된 비동기 처리는 async await로 보기 좋게 짜더라도, 마지막에 한번은 동기로 마무리하려면 then을 써주어야한다고 생각한 것이다. 여유를 갖고 검색해볼 시간이 없었던 것 같다.</p>\n<p>다행히 시간을 내어 이 내용을 구글링한 끝에, 두 가지의 대안을 찾았다.</p>\n<ol>\n<li>비동기 함수 호출 시 void 붙여주기</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">groupedAsyncFunc</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res1 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc1</span>();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res2 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc2</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res1 + res2;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> void groupedAsyncFunc()&#125; /&gt;</span>;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>IIFE (즉시실행함수) 패턴 사용하기</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">groupedAsyncFunc</span> = <span class=\"keyword\">async</span> (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res1 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc1</span>();</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res2 = <span class=\"keyword\">await</span> <span class=\"title function_\">asyncFunc2</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res1 + res2;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-xml\">    (async () =&gt; await groupedAsyncFunc())();</span></span><br><span class=\"line\"><span class=\"language-xml\">  &#125;&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">/&gt;</span>;</span><br></pre></td></tr></table></figure>\n\n<p>개인적으로는 1안의 void 가 가독성이 좋아서 1안을 사용하기로 했으나, 찾아보니 <a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/async_function\">2안을 사용하도록 가이드</a>하는 경우도 꽤 있었다. 나는 몰랐지만, IIFE는 이 케이스 뿐만 아니라 javascript 진영에서 원래 널리 쓰고 있는 패턴이며, 변수의 호이스팅 때문에 원하는 대로 동작하지 않는 케이스를 방지해준다는 큰 장점이 있다고 한다. 이 내용을 접했을 때, 내가 <em>동기함수에서 비동기 함수를 호출</em> 하고 싶다는 내 작은 요건에 너무 오버되는 패턴을 찾은 것 같다는 생각을 했다. ㅋㅋㅋ 굳이 이걸 쓸 필요가 없어보였다. Scope 처리가 너무나 당연한 환경에서 웹 개발을 하고있는 나에게는 별로 매력적이지 않아보였기 때문이다. 그래서 2안은 IIFE 개념에 대해 접할 수 있었던 것에만 의의를 두고, 사용하지는 않기로 했다.</p>\n<h1 id=\"결론\"><a href=\"#결론\" class=\"headerlink\" title=\"결론\"></a>결론</h1><p>비동기 action의 결과를 명시적으로 기다리지 않는 경우 void 키워드를 붙여주자.</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:04:52 GMT+0900 (대한민국 표준시)","title":"[JavaScript] 비동기 프로그래밍","path":"2022/04/05/Tech/JavaScript/asynchronous-programming/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-04-04T15:01:04.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-04-04T15:01:04.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Tech > JavaScript","tags":["JavaScript"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Spring Boot + MySQL + JPA + Flyway 셋업하고 REST api 만들기","date":"2022-11-15T14:49:08.000Z","_content":"\n# Motivation\n\n나는 JPA를 써본적이 없당\n\nJPA를 사용해본/하고있는 사람들에게 JPA를 설명해달라고 하면 \"하... 너넨 이런거 하지마라 🚬\" 느낌으로다가 말해주곤 하는데\n\n하지 말라고 하면 더 해보고 싶은 법이다. 왜 하지말라는건데~~~~\n\n그래서 사이드 프로젝트 BE를 JPA로 만들기로 결정~!~!\n\n# Spring Initializer 로 프로젝트 뼈대 생성\n\n[Initializer](https://start.spring.io/)로 프로젝트 뼈대를 생성한다.\n\n언어 옵션 중 Kotlin이 아주 잠깐 궁금했으나 잘 참고 Java를 고른다 ㅎㅎ 왜냐면 아직 Java도 아직 잘모름 🤦‍♀️\nDependency는 각자 필요한 것을 선택하면 되는데 나는 Lombok, JPA, Flyway, Web 정도가 필요하다.\n\n+) 개발자인데 GUI가 좋다고 하면 왠지 주눅이 들어서 잘 말하고 다니지 않지만, Initializer를 처음 찾았을때 너무 기분이 좋았다 ㅋㅋㅋ ㅠㅠ\n\n# Application.yaml 설정\n\nInitializer로 만든 폴더 안에는 application.properties가 기본으로 생성되어있으나 나는 가독성 때문에 yaml 포맷을 선호하므로 application.yaml 파일을 만든다.\n\n위에서 만들어준 프로젝트에 MySQL을 붙이고 JPA, flyway를 사용하기 위해 구글링 구글링..\n\n[baeldung 아티클](https://www.baeldung.com/spring-data-jpa-run-app-without-db) 에서 database 없이 JPA 를 붙이고, 에러가 나지 않도록 줘야하는 옵션값을 설명해준다.\n( JPA에 대해 정말 지식이 없어서 단순히 메소드 명으로 쿼리 만들어주는 그런 친구인줄로 알았는데, DDL 자동 생성 기능도 있었다.\n여기저기 포스트를 찾아보기도 하고 혼자서도 생각해보니 오히려 불편할 것 같다는 생각이 들어 이 기능은 끄기로 한다. )\n\n아래와 같이 application.yaml를 설정해주면 `MySQL - JPA - flyway` 는 잘 연동이 된다.\n\n```yaml\nserver:\n  address: localhost\n  port: 8080\n\nspring:\n  flyway:\n    enabled: true\n    locations: classpath:db/migration\n    schemas: coworksaga\n    baseline-on-migrate: true\n    url: &db-url jdbc:mysql://localhost:3306/coworksaga?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true\n    user: &db-user coworksaga\n    password: &db-pwd root1234\n    create-schemas: true\n  jpa:\n    database: mysql\n    hibernate:\n      ddl-auto: validate\n    show-sql: true\n    format-sql: true\n    use-sql-comments: true\n    properties:\n      hibernate:\n        temp:\n          use_jdbc_metadata_defaults: false\n  datasource:\n      url: *db-url\n      username: *db-user\n      password: *db-pwd\n      driver-class-name: com.mysql.cj.jdbc.Driver\n\n\nlogging:\n  level:\n    org.hibernate.SQL: DEBUG\n    org.hibernate.type: TRACE\n```\n\n+) yaml 쓰면서 깨달은점\n\n- &, * 페어로 변수를 선언하고 불러다 쓸 수 있다. 굿굿\n- database가 없을때 자동으로 생성하도록 하는 옵션을 검색하는게 어려웠다. 어떤사람은 hibernate.ddl-auto 라고 하고 어떤 사람은 create-schemas라고 하고 ㅎㅎ 결론은 jdbc url에 `createDatabaseIfNotExist=true` 요 옵션을 주는걸로.\n\n+) yaml 쓰면서 궁금한점\n\n- 비슷한 카테고리 같은데 왜 depth가 왜 다른걸까? jpa.hibernate랑 jpa.properties.hibernate 처럼.\n- url username passwork 이거 다 datasource, flyway에 두 번씩 쓰게 되어있는데 ㅠ 변수로 정리해두긴 했으나.. 두 옵션이 한 값을 바라보도록 바로 설정은 안되는걸까?\n\n\n\n# Layer 별 폴더 트리 생성\n\n이제 로컬에 서버를 띄울 수 있는 상태가 되었으니 실제로 기능 개발을 할 수 있도록 폴더를 생성하자.\n\n매번 Layer (Controller, Service, Repository) 별로 폴더링을 했는데 문득 다른 사람들은 어쩌고 있나 싶어 찾아보니 Entity/Domain별로 묶는 방법도 쓰이고 있다. 음 폴더로 묶으면 한 패키지가 되는데.. 패키지랑 맥락이 비슷한 개념은 Layer보단 Entity/Domain인 것 같기도 하고 고민이 되었지만... 실제로 패키지별로 따로 묶어서 배포/공유하는 것도 아니니 생각보다 엄청나게 메리트가 있을 것 같지 않다. 이번에도 Layer로 쪼개도록 한다.\n\n\n\n# 첫번째 flyway 스크립트와 REST api 만들기\n\n위에 yaml에 써있기는 한데 지금 만들고 있는 건 사이드프로젝트 중 하나였던 cowork-saga의 BE 이다. 만들 당시에는 node.js로 급하게 만들어서 썼는데 마음에 썩 들지 않았다... ㅎㅎ 그리고 그마저도 처음엔 장고였고 나의 pyhon 생산성이 심각히 떨어지는 것을 깨닫고 포기했던 것...  그래도 예전에 좀 써봤으니 할 수 있지 않을까 했는데 충격이었다 ^^\n\n암튼 요 BE는 signalling server의 기능을 수행하기 위해 socket 통신도 필요하고, 메타 정보를 조회하고 저장하기 위해 REST 통신도 필요하다. 우선은 익숙한 REST api 부터 만들도록 한다.\n\nuuid를 넘기면 workspace 이름을 조회하는 api를 만들어볼건데, 그러려면 우선 workspace 테이블을 생성해주어야겠다.\n\n- V0_1_0__create_workspaces.sql\n\n  ```sql\n  CREATE TABLE workspaces (\n  \tworkspace_id INT UNSIGNED auto_increment NOT NULL PRIMARY KEY,\n  \tworkspace_name varchar(100) NOT NULL,\n  \tworkspace_uuid varchar(36) NOT NULL,\n  \tworkspace_password varchar(10) NULL,\n  \tcreated_at DATETIME NOT NULL DEFAULT NOW(),\n  \tupdated_at DATETIME NOT NULL DEFAULT NOW() ON UPDATE NOW()\n  )\n  ENGINE=InnoDB\n  DEFAULT CHARSET=utf8mb4\n  COLLATE=utf8mb4_unicode_ci\n  ```\n\n- V0_1_1__insert_workspaces.sql\n\n  ```sql\n  INSERT INTO workspaces\n  (workspace_id, workspace_name, workspace_uuid, workspace_password, created_at, updated_at)\n  VALUES(1, \"HYEON's workspace\", '2a2ba386-1ca1-49c6-8573-076916ac6139', 'Password', now(), now());\n  ```\n\n\n\n이제 Entity를 생성해준다.\n\n- Workspace\n\n  ```java\n  @Entity\n  @Table(name = \"workspaces\")\n  @Builder\n  @AllArgsConstructor\n  @NoArgsConstructor\n  @Getter\n  public class Workspace {\n      @Id\n      private Integer id;\n      private String name;\n      @Column(name = \"uuid\", unique = true)\n      private String uuid;\n      private String password;\n      private String createdAt;\n      private String updatedAt;\n  }\n  ```\n\n그리고 차례대로 Repository, Service, Controller를 만들어준다.\n\n- WorkspaceRepository\n\n  ```java\n  @Repository\n  public interface WorkspaceRepository extends JpaRepository<Workspace, Integer> {\n      Workspace findByUuid(String uuid);\n  }\n  ```\n\n- WorkspaceService\n\n  ```java\n  @Service\n  @RequiredArgsConstructor\n  public class WorkspaceService {\n      private final WorkspaceRepository workspaceRepository;\n  \n      public Workspace getWorkspace(String uuid) {\n          return workspaceRepository.findByUuid(uuid);\n      }\n  }\n  ```\n\n- WorkspaceController\n\n  ```java\n  @RestController\n  @RequiredArgsConstructor\n  public class WorkspaceController {\n      private final WorkspaceService workspaceService;\n  \n      @GetMapping(\"/workspaces/{uuid}\")\n      public Workspace workspaceDetail(@PathVariable @Length(min=16, max=16) String uuid) {\n          return workspaceService.getWorkspace(uuid);\n      }\n  }\n  ```\n\n\n\n+) 쿼리 결과는 정상적이지만 api 응답이 그냥  \u0010`{}` 로 떨어질 때\n\n- return 한 Entity에 public getter가 없어서 그럴 수 있다. [참고](https://stackoverflow.com/questions/49117622/spring-rest-controller-returns-empty-json-iterable-data-structure-why)\n\n이제 뼈대는 얼추 갖추게 된 것 같다. 다음 api 부터는 유용한 annotation 좀 찾고 aspect 붙이면서 보완해나가면 될 듯. 👩‍💻\n\n# 마치며\n\n- 처음부터 해보면 머리에 확실히 잘 들오는 것 같다. get api 하나 만드는데 생각보다 많은 것을 배웠다!\n- JPA 아직은 왜 \"하... 너넨 이런거 하지마라 🚬\" 하는건 지 못느꼈다. 더 써봐야지.\n\n\n\n\n\n\n\n","source":"_posts/Tech/SpringBoot/setting-JPA.md","raw":"---\ntitle: Spring Boot + MySQL + JPA + Flyway 셋업하고 REST api 만들기\ndate: 2022-11-15 23:49:08\ntags: [Spring Boot, MySQL, JPA, Flyway]\ncategories: [Tech, Spring Boot]\n---\n\n# Motivation\n\n나는 JPA를 써본적이 없당\n\nJPA를 사용해본/하고있는 사람들에게 JPA를 설명해달라고 하면 \"하... 너넨 이런거 하지마라 🚬\" 느낌으로다가 말해주곤 하는데\n\n하지 말라고 하면 더 해보고 싶은 법이다. 왜 하지말라는건데~~~~\n\n그래서 사이드 프로젝트 BE를 JPA로 만들기로 결정~!~!\n\n# Spring Initializer 로 프로젝트 뼈대 생성\n\n[Initializer](https://start.spring.io/)로 프로젝트 뼈대를 생성한다.\n\n언어 옵션 중 Kotlin이 아주 잠깐 궁금했으나 잘 참고 Java를 고른다 ㅎㅎ 왜냐면 아직 Java도 아직 잘모름 🤦‍♀️\nDependency는 각자 필요한 것을 선택하면 되는데 나는 Lombok, JPA, Flyway, Web 정도가 필요하다.\n\n+) 개발자인데 GUI가 좋다고 하면 왠지 주눅이 들어서 잘 말하고 다니지 않지만, Initializer를 처음 찾았을때 너무 기분이 좋았다 ㅋㅋㅋ ㅠㅠ\n\n# Application.yaml 설정\n\nInitializer로 만든 폴더 안에는 application.properties가 기본으로 생성되어있으나 나는 가독성 때문에 yaml 포맷을 선호하므로 application.yaml 파일을 만든다.\n\n위에서 만들어준 프로젝트에 MySQL을 붙이고 JPA, flyway를 사용하기 위해 구글링 구글링..\n\n[baeldung 아티클](https://www.baeldung.com/spring-data-jpa-run-app-without-db) 에서 database 없이 JPA 를 붙이고, 에러가 나지 않도록 줘야하는 옵션값을 설명해준다.\n( JPA에 대해 정말 지식이 없어서 단순히 메소드 명으로 쿼리 만들어주는 그런 친구인줄로 알았는데, DDL 자동 생성 기능도 있었다.\n여기저기 포스트를 찾아보기도 하고 혼자서도 생각해보니 오히려 불편할 것 같다는 생각이 들어 이 기능은 끄기로 한다. )\n\n아래와 같이 application.yaml를 설정해주면 `MySQL - JPA - flyway` 는 잘 연동이 된다.\n\n```yaml\nserver:\n  address: localhost\n  port: 8080\n\nspring:\n  flyway:\n    enabled: true\n    locations: classpath:db/migration\n    schemas: coworksaga\n    baseline-on-migrate: true\n    url: &db-url jdbc:mysql://localhost:3306/coworksaga?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true\n    user: &db-user coworksaga\n    password: &db-pwd root1234\n    create-schemas: true\n  jpa:\n    database: mysql\n    hibernate:\n      ddl-auto: validate\n    show-sql: true\n    format-sql: true\n    use-sql-comments: true\n    properties:\n      hibernate:\n        temp:\n          use_jdbc_metadata_defaults: false\n  datasource:\n      url: *db-url\n      username: *db-user\n      password: *db-pwd\n      driver-class-name: com.mysql.cj.jdbc.Driver\n\n\nlogging:\n  level:\n    org.hibernate.SQL: DEBUG\n    org.hibernate.type: TRACE\n```\n\n+) yaml 쓰면서 깨달은점\n\n- &, * 페어로 변수를 선언하고 불러다 쓸 수 있다. 굿굿\n- database가 없을때 자동으로 생성하도록 하는 옵션을 검색하는게 어려웠다. 어떤사람은 hibernate.ddl-auto 라고 하고 어떤 사람은 create-schemas라고 하고 ㅎㅎ 결론은 jdbc url에 `createDatabaseIfNotExist=true` 요 옵션을 주는걸로.\n\n+) yaml 쓰면서 궁금한점\n\n- 비슷한 카테고리 같은데 왜 depth가 왜 다른걸까? jpa.hibernate랑 jpa.properties.hibernate 처럼.\n- url username passwork 이거 다 datasource, flyway에 두 번씩 쓰게 되어있는데 ㅠ 변수로 정리해두긴 했으나.. 두 옵션이 한 값을 바라보도록 바로 설정은 안되는걸까?\n\n\n\n# Layer 별 폴더 트리 생성\n\n이제 로컬에 서버를 띄울 수 있는 상태가 되었으니 실제로 기능 개발을 할 수 있도록 폴더를 생성하자.\n\n매번 Layer (Controller, Service, Repository) 별로 폴더링을 했는데 문득 다른 사람들은 어쩌고 있나 싶어 찾아보니 Entity/Domain별로 묶는 방법도 쓰이고 있다. 음 폴더로 묶으면 한 패키지가 되는데.. 패키지랑 맥락이 비슷한 개념은 Layer보단 Entity/Domain인 것 같기도 하고 고민이 되었지만... 실제로 패키지별로 따로 묶어서 배포/공유하는 것도 아니니 생각보다 엄청나게 메리트가 있을 것 같지 않다. 이번에도 Layer로 쪼개도록 한다.\n\n\n\n# 첫번째 flyway 스크립트와 REST api 만들기\n\n위에 yaml에 써있기는 한데 지금 만들고 있는 건 사이드프로젝트 중 하나였던 cowork-saga의 BE 이다. 만들 당시에는 node.js로 급하게 만들어서 썼는데 마음에 썩 들지 않았다... ㅎㅎ 그리고 그마저도 처음엔 장고였고 나의 pyhon 생산성이 심각히 떨어지는 것을 깨닫고 포기했던 것...  그래도 예전에 좀 써봤으니 할 수 있지 않을까 했는데 충격이었다 ^^\n\n암튼 요 BE는 signalling server의 기능을 수행하기 위해 socket 통신도 필요하고, 메타 정보를 조회하고 저장하기 위해 REST 통신도 필요하다. 우선은 익숙한 REST api 부터 만들도록 한다.\n\nuuid를 넘기면 workspace 이름을 조회하는 api를 만들어볼건데, 그러려면 우선 workspace 테이블을 생성해주어야겠다.\n\n- V0_1_0__create_workspaces.sql\n\n  ```sql\n  CREATE TABLE workspaces (\n  \tworkspace_id INT UNSIGNED auto_increment NOT NULL PRIMARY KEY,\n  \tworkspace_name varchar(100) NOT NULL,\n  \tworkspace_uuid varchar(36) NOT NULL,\n  \tworkspace_password varchar(10) NULL,\n  \tcreated_at DATETIME NOT NULL DEFAULT NOW(),\n  \tupdated_at DATETIME NOT NULL DEFAULT NOW() ON UPDATE NOW()\n  )\n  ENGINE=InnoDB\n  DEFAULT CHARSET=utf8mb4\n  COLLATE=utf8mb4_unicode_ci\n  ```\n\n- V0_1_1__insert_workspaces.sql\n\n  ```sql\n  INSERT INTO workspaces\n  (workspace_id, workspace_name, workspace_uuid, workspace_password, created_at, updated_at)\n  VALUES(1, \"HYEON's workspace\", '2a2ba386-1ca1-49c6-8573-076916ac6139', 'Password', now(), now());\n  ```\n\n\n\n이제 Entity를 생성해준다.\n\n- Workspace\n\n  ```java\n  @Entity\n  @Table(name = \"workspaces\")\n  @Builder\n  @AllArgsConstructor\n  @NoArgsConstructor\n  @Getter\n  public class Workspace {\n      @Id\n      private Integer id;\n      private String name;\n      @Column(name = \"uuid\", unique = true)\n      private String uuid;\n      private String password;\n      private String createdAt;\n      private String updatedAt;\n  }\n  ```\n\n그리고 차례대로 Repository, Service, Controller를 만들어준다.\n\n- WorkspaceRepository\n\n  ```java\n  @Repository\n  public interface WorkspaceRepository extends JpaRepository<Workspace, Integer> {\n      Workspace findByUuid(String uuid);\n  }\n  ```\n\n- WorkspaceService\n\n  ```java\n  @Service\n  @RequiredArgsConstructor\n  public class WorkspaceService {\n      private final WorkspaceRepository workspaceRepository;\n  \n      public Workspace getWorkspace(String uuid) {\n          return workspaceRepository.findByUuid(uuid);\n      }\n  }\n  ```\n\n- WorkspaceController\n\n  ```java\n  @RestController\n  @RequiredArgsConstructor\n  public class WorkspaceController {\n      private final WorkspaceService workspaceService;\n  \n      @GetMapping(\"/workspaces/{uuid}\")\n      public Workspace workspaceDetail(@PathVariable @Length(min=16, max=16) String uuid) {\n          return workspaceService.getWorkspace(uuid);\n      }\n  }\n  ```\n\n\n\n+) 쿼리 결과는 정상적이지만 api 응답이 그냥  \u0010`{}` 로 떨어질 때\n\n- return 한 Entity에 public getter가 없어서 그럴 수 있다. [참고](https://stackoverflow.com/questions/49117622/spring-rest-controller-returns-empty-json-iterable-data-structure-why)\n\n이제 뼈대는 얼추 갖추게 된 것 같다. 다음 api 부터는 유용한 annotation 좀 찾고 aspect 붙이면서 보완해나가면 될 듯. 👩‍💻\n\n# 마치며\n\n- 처음부터 해보면 머리에 확실히 잘 들오는 것 같다. get api 하나 만드는데 생각보다 많은 것을 배웠다!\n- JPA 아직은 왜 \"하... 너넨 이런거 하지마라 🚬\" 하는건 지 못느꼈다. 더 써봐야지.\n\n\n\n\n\n\n\n","slug":"Tech/SpringBoot/setting-JPA","published":1,"updated":"2023-01-22T14:05:40.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2rv000ntqwe9ab0g000","content":"<h1 id=\"Motivation\"><a href=\"#Motivation\" class=\"headerlink\" title=\"Motivation\"></a>Motivation</h1><p>나는 JPA를 써본적이 없당</p>\n<p>JPA를 사용해본/하고있는 사람들에게 JPA를 설명해달라고 하면 “하… 너넨 이런거 하지마라 🚬” 느낌으로다가 말해주곤 하는데</p>\n<p>하지 말라고 하면 더 해보고 싶은 법이다. 왜 하지말라는건데~~~~</p>\n<p>그래서 사이드 프로젝트 BE를 JPA로 만들기로 결정<del>!</del>!</p>\n<h1 id=\"Spring-Initializer-로-프로젝트-뼈대-생성\"><a href=\"#Spring-Initializer-로-프로젝트-뼈대-생성\" class=\"headerlink\" title=\"Spring Initializer 로 프로젝트 뼈대 생성\"></a>Spring Initializer 로 프로젝트 뼈대 생성</h1><p><a href=\"https://start.spring.io/\">Initializer</a>로 프로젝트 뼈대를 생성한다.</p>\n<p>언어 옵션 중 Kotlin이 아주 잠깐 궁금했으나 잘 참고 Java를 고른다 ㅎㅎ 왜냐면 아직 Java도 아직 잘모름 🤦‍♀️<br>Dependency는 각자 필요한 것을 선택하면 되는데 나는 Lombok, JPA, Flyway, Web 정도가 필요하다.</p>\n<p>+) 개발자인데 GUI가 좋다고 하면 왠지 주눅이 들어서 잘 말하고 다니지 않지만, Initializer를 처음 찾았을때 너무 기분이 좋았다 ㅋㅋㅋ ㅠㅠ</p>\n<h1 id=\"Application-yaml-설정\"><a href=\"#Application-yaml-설정\" class=\"headerlink\" title=\"Application.yaml 설정\"></a>Application.yaml 설정</h1><p>Initializer로 만든 폴더 안에는 application.properties가 기본으로 생성되어있으나 나는 가독성 때문에 yaml 포맷을 선호하므로 application.yaml 파일을 만든다.</p>\n<p>위에서 만들어준 프로젝트에 MySQL을 붙이고 JPA, flyway를 사용하기 위해 구글링 구글링..</p>\n<p><a href=\"https://www.baeldung.com/spring-data-jpa-run-app-without-db\">baeldung 아티클</a> 에서 database 없이 JPA 를 붙이고, 에러가 나지 않도록 줘야하는 옵션값을 설명해준다.<br>( JPA에 대해 정말 지식이 없어서 단순히 메소드 명으로 쿼리 만들어주는 그런 친구인줄로 알았는데, DDL 자동 생성 기능도 있었다.<br>여기저기 포스트를 찾아보기도 하고 혼자서도 생각해보니 오히려 불편할 것 같다는 생각이 들어 이 기능은 끄기로 한다. )</p>\n<p>아래와 같이 application.yaml를 설정해주면 <code>MySQL - JPA - flyway</code> 는 잘 연동이 된다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">address:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">flyway:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">locations:</span> <span class=\"string\">classpath:db/migration</span></span><br><span class=\"line\">    <span class=\"attr\">schemas:</span> <span class=\"string\">coworksaga</span></span><br><span class=\"line\">    <span class=\"attr\">baseline-on-migrate:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">&amp;db-url</span> <span class=\"string\">jdbc:mysql://localhost:3306/coworksaga?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Seoul&amp;createDatabaseIfNotExist=true&amp;allowPublicKeyRetrieval=true</span></span><br><span class=\"line\">    <span class=\"attr\">user:</span> <span class=\"string\">&amp;db-user</span> <span class=\"string\">coworksaga</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">&amp;db-pwd</span> <span class=\"string\">root1234</span></span><br><span class=\"line\">    <span class=\"attr\">create-schemas:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">jpa:</span></span><br><span class=\"line\">    <span class=\"attr\">database:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\">    <span class=\"attr\">hibernate:</span></span><br><span class=\"line\">      <span class=\"attr\">ddl-auto:</span> <span class=\"string\">validate</span></span><br><span class=\"line\">    <span class=\"attr\">show-sql:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">format-sql:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">use-sql-comments:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">properties:</span></span><br><span class=\"line\">      <span class=\"attr\">hibernate:</span></span><br><span class=\"line\">        <span class=\"attr\">temp:</span></span><br><span class=\"line\">          <span class=\"attr\">use_jdbc_metadata_defaults:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">      <span class=\"attr\">url:</span> <span class=\"string\">*db-url</span></span><br><span class=\"line\">      <span class=\"attr\">username:</span> <span class=\"string\">*db-user</span></span><br><span class=\"line\">      <span class=\"attr\">password:</span> <span class=\"string\">*db-pwd</span></span><br><span class=\"line\">      <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">logging:</span></span><br><span class=\"line\">  <span class=\"attr\">level:</span></span><br><span class=\"line\">    <span class=\"attr\">org.hibernate.SQL:</span> <span class=\"string\">DEBUG</span></span><br><span class=\"line\">    <span class=\"attr\">org.hibernate.type:</span> <span class=\"string\">TRACE</span></span><br></pre></td></tr></table></figure>\n\n<p>+) yaml 쓰면서 깨달은점</p>\n<ul>\n<li>&amp;, * 페어로 변수를 선언하고 불러다 쓸 수 있다. 굿굿</li>\n<li>database가 없을때 자동으로 생성하도록 하는 옵션을 검색하는게 어려웠다. 어떤사람은 hibernate.ddl-auto 라고 하고 어떤 사람은 create-schemas라고 하고 ㅎㅎ 결론은 jdbc url에 <code>createDatabaseIfNotExist=true</code> 요 옵션을 주는걸로.</li>\n</ul>\n<p>+) yaml 쓰면서 궁금한점</p>\n<ul>\n<li>비슷한 카테고리 같은데 왜 depth가 왜 다른걸까? jpa.hibernate랑 jpa.properties.hibernate 처럼.</li>\n<li>url username passwork 이거 다 datasource, flyway에 두 번씩 쓰게 되어있는데 ㅠ 변수로 정리해두긴 했으나.. 두 옵션이 한 값을 바라보도록 바로 설정은 안되는걸까?</li>\n</ul>\n<h1 id=\"Layer-별-폴더-트리-생성\"><a href=\"#Layer-별-폴더-트리-생성\" class=\"headerlink\" title=\"Layer 별 폴더 트리 생성\"></a>Layer 별 폴더 트리 생성</h1><p>이제 로컬에 서버를 띄울 수 있는 상태가 되었으니 실제로 기능 개발을 할 수 있도록 폴더를 생성하자.</p>\n<p>매번 Layer (Controller, Service, Repository) 별로 폴더링을 했는데 문득 다른 사람들은 어쩌고 있나 싶어 찾아보니 Entity/Domain별로 묶는 방법도 쓰이고 있다. 음 폴더로 묶으면 한 패키지가 되는데.. 패키지랑 맥락이 비슷한 개념은 Layer보단 Entity/Domain인 것 같기도 하고 고민이 되었지만… 실제로 패키지별로 따로 묶어서 배포/공유하는 것도 아니니 생각보다 엄청나게 메리트가 있을 것 같지 않다. 이번에도 Layer로 쪼개도록 한다.</p>\n<h1 id=\"첫번째-flyway-스크립트와-REST-api-만들기\"><a href=\"#첫번째-flyway-스크립트와-REST-api-만들기\" class=\"headerlink\" title=\"첫번째 flyway 스크립트와 REST api 만들기\"></a>첫번째 flyway 스크립트와 REST api 만들기</h1><p>위에 yaml에 써있기는 한데 지금 만들고 있는 건 사이드프로젝트 중 하나였던 cowork-saga의 BE 이다. 만들 당시에는 node.js로 급하게 만들어서 썼는데 마음에 썩 들지 않았다… ㅎㅎ 그리고 그마저도 처음엔 장고였고 나의 pyhon 생산성이 심각히 떨어지는 것을 깨닫고 포기했던 것…  그래도 예전에 좀 써봤으니 할 수 있지 않을까 했는데 충격이었다 ^^</p>\n<p>암튼 요 BE는 signalling server의 기능을 수행하기 위해 socket 통신도 필요하고, 메타 정보를 조회하고 저장하기 위해 REST 통신도 필요하다. 우선은 익숙한 REST api 부터 만들도록 한다.</p>\n<p>uuid를 넘기면 workspace 이름을 조회하는 api를 만들어볼건데, 그러려면 우선 workspace 테이블을 생성해주어야겠다.</p>\n<ul>\n<li><p>V0_1_0__create_workspaces.sql</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> workspaces (</span><br><span class=\"line\">\tworkspace_id <span class=\"type\">INT</span> UNSIGNED auto_increment <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">\tworkspace_name <span class=\"type\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tworkspace_uuid <span class=\"type\">varchar</span>(<span class=\"number\">36</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tworkspace_password <span class=\"type\">varchar</span>(<span class=\"number\">10</span>) <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tcreated_at DATETIME <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> NOW(),</span><br><span class=\"line\">\tupdated_at DATETIME <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> NOW() <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> NOW()</span><br><span class=\"line\">)</span><br><span class=\"line\">ENGINE<span class=\"operator\">=</span>InnoDB</span><br><span class=\"line\"><span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>utf8mb4</span><br><span class=\"line\"><span class=\"keyword\">COLLATE</span><span class=\"operator\">=</span>utf8mb4_unicode_ci</span><br></pre></td></tr></table></figure></li>\n<li><p>V0_1_1__insert_workspaces.sql</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> workspaces</span><br><span class=\"line\">(workspace_id, workspace_name, workspace_uuid, workspace_password, created_at, updated_at)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span>(<span class=\"number\">1</span>, &quot;HYEON&#x27;s workspace&quot;, <span class=\"string\">&#x27;2a2ba386-1ca1-49c6-8573-076916ac6139&#x27;</span>, <span class=\"string\">&#x27;Password&#x27;</span>, now(), now());</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>이제 Entity를 생성해준다.</p>\n<ul>\n<li><p>Workspace</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Entity</span></span><br><span class=\"line\"><span class=\"meta\">@Table(name = &quot;workspaces&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@Builder</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Workspace</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;uuid&quot;, unique = true)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String uuid;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String createdAt;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String updatedAt;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>그리고 차례대로 Repository, Service, Controller를 만들어준다.</p>\n<ul>\n<li><p>WorkspaceRepository</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Repository</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">WorkspaceRepository</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JpaRepository</span>&lt;Workspace, Integer&gt; &#123;</span><br><span class=\"line\">    Workspace <span class=\"title function_\">findByUuid</span><span class=\"params\">(String uuid)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>WorkspaceService</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"meta\">@RequiredArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WorkspaceService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> WorkspaceRepository workspaceRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Workspace <span class=\"title function_\">getWorkspace</span><span class=\"params\">(String uuid)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> workspaceRepository.findByUuid(uuid);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>WorkspaceController</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequiredArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WorkspaceController</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> WorkspaceService workspaceService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/workspaces/&#123;uuid&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Workspace <span class=\"title function_\">workspaceDetail</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> <span class=\"meta\">@Length(min=16, max=16)</span> String uuid)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> workspaceService.getWorkspace(uuid);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>+) 쿼리 결과는 정상적이지만 api 응답이 그냥  \u0010<code>&#123;&#125;</code> 로 떨어질 때</p>\n<ul>\n<li>return 한 Entity에 public getter가 없어서 그럴 수 있다. <a href=\"https://stackoverflow.com/questions/49117622/spring-rest-controller-returns-empty-json-iterable-data-structure-why\">참고</a></li>\n</ul>\n<p>이제 뼈대는 얼추 갖추게 된 것 같다. 다음 api 부터는 유용한 annotation 좀 찾고 aspect 붙이면서 보완해나가면 될 듯. 👩‍💻</p>\n<h1 id=\"마치며\"><a href=\"#마치며\" class=\"headerlink\" title=\"마치며\"></a>마치며</h1><ul>\n<li>처음부터 해보면 머리에 확실히 잘 들오는 것 같다. get api 하나 만드는데 생각보다 많은 것을 배웠다!</li>\n<li>JPA 아직은 왜 “하… 너넨 이런거 하지마라 🚬” 하는건 지 못느꼈다. 더 써봐야지.</li>\n</ul>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"Motivation\"><a href=\"#Motivation\" class=\"headerlink\" title=\"Motivation\"></a>Motivation</h1><p>나는 JPA를 써본적이 없당</p>\n<p>JPA를 사용해본/하고있는 사람들에게 JPA를 설명해달라고 하면 “하… 너넨 이런거 하지마라 🚬” 느낌으로다가 말해주곤 하는데</p>\n<p>하지 말라고 하면 더 해보고 싶은 법이다. 왜 하지말라는건데~~~~</p>\n<p>그래서 사이드 프로젝트 BE를 JPA로 만들기로 결정<del>!</del>!</p>\n<h1 id=\"Spring-Initializer-로-프로젝트-뼈대-생성\"><a href=\"#Spring-Initializer-로-프로젝트-뼈대-생성\" class=\"headerlink\" title=\"Spring Initializer 로 프로젝트 뼈대 생성\"></a>Spring Initializer 로 프로젝트 뼈대 생성</h1><p><a href=\"https://start.spring.io/\">Initializer</a>로 프로젝트 뼈대를 생성한다.</p>\n<p>언어 옵션 중 Kotlin이 아주 잠깐 궁금했으나 잘 참고 Java를 고른다 ㅎㅎ 왜냐면 아직 Java도 아직 잘모름 🤦‍♀️<br>Dependency는 각자 필요한 것을 선택하면 되는데 나는 Lombok, JPA, Flyway, Web 정도가 필요하다.</p>\n<p>+) 개발자인데 GUI가 좋다고 하면 왠지 주눅이 들어서 잘 말하고 다니지 않지만, Initializer를 처음 찾았을때 너무 기분이 좋았다 ㅋㅋㅋ ㅠㅠ</p>\n<h1 id=\"Application-yaml-설정\"><a href=\"#Application-yaml-설정\" class=\"headerlink\" title=\"Application.yaml 설정\"></a>Application.yaml 설정</h1><p>Initializer로 만든 폴더 안에는 application.properties가 기본으로 생성되어있으나 나는 가독성 때문에 yaml 포맷을 선호하므로 application.yaml 파일을 만든다.</p>\n<p>위에서 만들어준 프로젝트에 MySQL을 붙이고 JPA, flyway를 사용하기 위해 구글링 구글링..</p>\n<p><a href=\"https://www.baeldung.com/spring-data-jpa-run-app-without-db\">baeldung 아티클</a> 에서 database 없이 JPA 를 붙이고, 에러가 나지 않도록 줘야하는 옵션값을 설명해준다.<br>( JPA에 대해 정말 지식이 없어서 단순히 메소드 명으로 쿼리 만들어주는 그런 친구인줄로 알았는데, DDL 자동 생성 기능도 있었다.<br>여기저기 포스트를 찾아보기도 하고 혼자서도 생각해보니 오히려 불편할 것 같다는 생각이 들어 이 기능은 끄기로 한다. )</p>\n<p>아래와 같이 application.yaml를 설정해주면 <code>MySQL - JPA - flyway</code> 는 잘 연동이 된다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">address:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">8080</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">flyway:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">locations:</span> <span class=\"string\">classpath:db/migration</span></span><br><span class=\"line\">    <span class=\"attr\">schemas:</span> <span class=\"string\">coworksaga</span></span><br><span class=\"line\">    <span class=\"attr\">baseline-on-migrate:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">&amp;db-url</span> <span class=\"string\">jdbc:mysql://localhost:3306/coworksaga?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=Asia/Seoul&amp;createDatabaseIfNotExist=true&amp;allowPublicKeyRetrieval=true</span></span><br><span class=\"line\">    <span class=\"attr\">user:</span> <span class=\"string\">&amp;db-user</span> <span class=\"string\">coworksaga</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">&amp;db-pwd</span> <span class=\"string\">root1234</span></span><br><span class=\"line\">    <span class=\"attr\">create-schemas:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"attr\">jpa:</span></span><br><span class=\"line\">    <span class=\"attr\">database:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\">    <span class=\"attr\">hibernate:</span></span><br><span class=\"line\">      <span class=\"attr\">ddl-auto:</span> <span class=\"string\">validate</span></span><br><span class=\"line\">    <span class=\"attr\">show-sql:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">format-sql:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">use-sql-comments:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"attr\">properties:</span></span><br><span class=\"line\">      <span class=\"attr\">hibernate:</span></span><br><span class=\"line\">        <span class=\"attr\">temp:</span></span><br><span class=\"line\">          <span class=\"attr\">use_jdbc_metadata_defaults:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">      <span class=\"attr\">url:</span> <span class=\"string\">*db-url</span></span><br><span class=\"line\">      <span class=\"attr\">username:</span> <span class=\"string\">*db-user</span></span><br><span class=\"line\">      <span class=\"attr\">password:</span> <span class=\"string\">*db-pwd</span></span><br><span class=\"line\">      <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.cj.jdbc.Driver</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">logging:</span></span><br><span class=\"line\">  <span class=\"attr\">level:</span></span><br><span class=\"line\">    <span class=\"attr\">org.hibernate.SQL:</span> <span class=\"string\">DEBUG</span></span><br><span class=\"line\">    <span class=\"attr\">org.hibernate.type:</span> <span class=\"string\">TRACE</span></span><br></pre></td></tr></table></figure>\n\n<p>+) yaml 쓰면서 깨달은점</p>\n<ul>\n<li>&amp;, * 페어로 변수를 선언하고 불러다 쓸 수 있다. 굿굿</li>\n<li>database가 없을때 자동으로 생성하도록 하는 옵션을 검색하는게 어려웠다. 어떤사람은 hibernate.ddl-auto 라고 하고 어떤 사람은 create-schemas라고 하고 ㅎㅎ 결론은 jdbc url에 <code>createDatabaseIfNotExist=true</code> 요 옵션을 주는걸로.</li>\n</ul>\n<p>+) yaml 쓰면서 궁금한점</p>\n<ul>\n<li>비슷한 카테고리 같은데 왜 depth가 왜 다른걸까? jpa.hibernate랑 jpa.properties.hibernate 처럼.</li>\n<li>url username passwork 이거 다 datasource, flyway에 두 번씩 쓰게 되어있는데 ㅠ 변수로 정리해두긴 했으나.. 두 옵션이 한 값을 바라보도록 바로 설정은 안되는걸까?</li>\n</ul>\n<h1 id=\"Layer-별-폴더-트리-생성\"><a href=\"#Layer-별-폴더-트리-생성\" class=\"headerlink\" title=\"Layer 별 폴더 트리 생성\"></a>Layer 별 폴더 트리 생성</h1><p>이제 로컬에 서버를 띄울 수 있는 상태가 되었으니 실제로 기능 개발을 할 수 있도록 폴더를 생성하자.</p>\n<p>매번 Layer (Controller, Service, Repository) 별로 폴더링을 했는데 문득 다른 사람들은 어쩌고 있나 싶어 찾아보니 Entity/Domain별로 묶는 방법도 쓰이고 있다. 음 폴더로 묶으면 한 패키지가 되는데.. 패키지랑 맥락이 비슷한 개념은 Layer보단 Entity/Domain인 것 같기도 하고 고민이 되었지만… 실제로 패키지별로 따로 묶어서 배포/공유하는 것도 아니니 생각보다 엄청나게 메리트가 있을 것 같지 않다. 이번에도 Layer로 쪼개도록 한다.</p>\n<h1 id=\"첫번째-flyway-스크립트와-REST-api-만들기\"><a href=\"#첫번째-flyway-스크립트와-REST-api-만들기\" class=\"headerlink\" title=\"첫번째 flyway 스크립트와 REST api 만들기\"></a>첫번째 flyway 스크립트와 REST api 만들기</h1><p>위에 yaml에 써있기는 한데 지금 만들고 있는 건 사이드프로젝트 중 하나였던 cowork-saga의 BE 이다. 만들 당시에는 node.js로 급하게 만들어서 썼는데 마음에 썩 들지 않았다… ㅎㅎ 그리고 그마저도 처음엔 장고였고 나의 pyhon 생산성이 심각히 떨어지는 것을 깨닫고 포기했던 것…  그래도 예전에 좀 써봤으니 할 수 있지 않을까 했는데 충격이었다 ^^</p>\n<p>암튼 요 BE는 signalling server의 기능을 수행하기 위해 socket 통신도 필요하고, 메타 정보를 조회하고 저장하기 위해 REST 통신도 필요하다. 우선은 익숙한 REST api 부터 만들도록 한다.</p>\n<p>uuid를 넘기면 workspace 이름을 조회하는 api를 만들어볼건데, 그러려면 우선 workspace 테이블을 생성해주어야겠다.</p>\n<ul>\n<li><p>V0_1_0__create_workspaces.sql</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> workspaces (</span><br><span class=\"line\">\tworkspace_id <span class=\"type\">INT</span> UNSIGNED auto_increment <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">\tworkspace_name <span class=\"type\">varchar</span>(<span class=\"number\">100</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tworkspace_uuid <span class=\"type\">varchar</span>(<span class=\"number\">36</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tworkspace_password <span class=\"type\">varchar</span>(<span class=\"number\">10</span>) <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">\tcreated_at DATETIME <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> NOW(),</span><br><span class=\"line\">\tupdated_at DATETIME <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">DEFAULT</span> NOW() <span class=\"keyword\">ON</span> <span class=\"keyword\">UPDATE</span> NOW()</span><br><span class=\"line\">)</span><br><span class=\"line\">ENGINE<span class=\"operator\">=</span>InnoDB</span><br><span class=\"line\"><span class=\"keyword\">DEFAULT</span> CHARSET<span class=\"operator\">=</span>utf8mb4</span><br><span class=\"line\"><span class=\"keyword\">COLLATE</span><span class=\"operator\">=</span>utf8mb4_unicode_ci</span><br></pre></td></tr></table></figure></li>\n<li><p>V0_1_1__insert_workspaces.sql</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> workspaces</span><br><span class=\"line\">(workspace_id, workspace_name, workspace_uuid, workspace_password, created_at, updated_at)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span>(<span class=\"number\">1</span>, &quot;HYEON&#x27;s workspace&quot;, <span class=\"string\">&#x27;2a2ba386-1ca1-49c6-8573-076916ac6139&#x27;</span>, <span class=\"string\">&#x27;Password&#x27;</span>, now(), now());</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>이제 Entity를 생성해준다.</p>\n<ul>\n<li><p>Workspace</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Entity</span></span><br><span class=\"line\"><span class=\"meta\">@Table(name = &quot;workspaces&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@Builder</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@NoArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@Getter</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Workspace</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Id</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"meta\">@Column(name = &quot;uuid&quot;, unique = true)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String uuid;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String createdAt;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String updatedAt;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>그리고 차례대로 Repository, Service, Controller를 만들어준다.</p>\n<ul>\n<li><p>WorkspaceRepository</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Repository</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">WorkspaceRepository</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">JpaRepository</span>&lt;Workspace, Integer&gt; &#123;</span><br><span class=\"line\">    Workspace <span class=\"title function_\">findByUuid</span><span class=\"params\">(String uuid)</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>WorkspaceService</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"meta\">@RequiredArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WorkspaceService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> WorkspaceRepository workspaceRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Workspace <span class=\"title function_\">getWorkspace</span><span class=\"params\">(String uuid)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> workspaceRepository.findByUuid(uuid);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>WorkspaceController</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequiredArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">WorkspaceController</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> WorkspaceService workspaceService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/workspaces/&#123;uuid&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Workspace <span class=\"title function_\">workspaceDetail</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> <span class=\"meta\">@Length(min=16, max=16)</span> String uuid)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> workspaceService.getWorkspace(uuid);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>+) 쿼리 결과는 정상적이지만 api 응답이 그냥  \u0010<code>&#123;&#125;</code> 로 떨어질 때</p>\n<ul>\n<li>return 한 Entity에 public getter가 없어서 그럴 수 있다. <a href=\"https://stackoverflow.com/questions/49117622/spring-rest-controller-returns-empty-json-iterable-data-structure-why\">참고</a></li>\n</ul>\n<p>이제 뼈대는 얼추 갖추게 된 것 같다. 다음 api 부터는 유용한 annotation 좀 찾고 aspect 붙이면서 보완해나가면 될 듯. 👩‍💻</p>\n<h1 id=\"마치며\"><a href=\"#마치며\" class=\"headerlink\" title=\"마치며\"></a>마치며</h1><ul>\n<li>처음부터 해보면 머리에 확실히 잘 들오는 것 같다. get api 하나 만드는데 생각보다 많은 것을 배웠다!</li>\n<li>JPA 아직은 왜 “하… 너넨 이런거 하지마라 🚬” 하는건 지 못느꼈다. 더 써봐야지.</li>\n</ul>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:05:40 GMT+0900 (대한민국 표준시)","title":"Spring Boot + MySQL + JPA + Flyway 셋업하고 REST api 만들기","path":"2022/11/15/Tech/SpringBoot/setting-JPA/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-11-15T14:49:08.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-11-15T14:49:08.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Tech > Spring Boot","tags":["Spring Boot","MySQL","JPA","Flyway"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[Spring] @Valid @Validated에 대해 알아보자","date":"2022-02-18T14:00:19.000Z","_content":"\n# MOTIVATION\n\n사용자로부터 받아온 Input 값을 우리 시스템에 넣어 처리하기 전에 검증하는 것은 매우 흔한 작업임. 볼 필요도 없는 값을 시스템 자원을 써가면서 처리할 필요가 없음.  \n이러한 검증은 몇 개의 if문과 validation utility로 물론 쉽게 구현이 가능하지만, server framework로 spring을 사용하고 있다면 아래와 같이 더 간결한 코드로 검증을 마칠 수 있음.\n\n```java\npublic class UserAcccount{\n    @NotBlank\n    private String name;\n\n    @NotNull\n    @Size(min = 4, max = 15)\n    private String password;\n}\n```\n\n```java\npublic void login(\n    @Valid UserAccount userAccount,\n){\n    service.login(userAccount);\n}\n```\n\n여기까지는 이해가 쉬운데, 실제로 application에 붙이려고 보니 좀 더 자세히 알아야할 내용들이 많았음. --\n이 글에서는 그 내용을 모아서 정리해봄.\n\n# @Valid 그리고 @Validated 어노테이션에 관하여\n\nide에서 @Valid를 입력할 때 자동완성 추천 결과에서 @Validated이 뜨던데, 처음에는 지나쳤었다.\n\n@Valid를 잘 써보고자 구글링을 하니 두 어노테이션에는 다음과 같은 차이점이 있다는 내용이 아주 많이 나왔다.\n\n👉 @Valid는 Java에서 제공됨\n👉 @Validated는 Spring 프레임워크에서 제공되며, @Valid의 기능을 포함함\n👉 @Valid는 method의 parameter 또는 class field에 사용된 complex object에 적용할 수 있음\n👉 @Validated는 @Valid가 사용되는 상황 뿐만 아니라, primitive type parameter에 Validation을 추가하고 싶을 때도 사용할 수 있음 (하단에서 후술)\n👉 @Valid와 달리 @Validated에는 Group을 지정할 수 있음. Validation Group에 대한 내용은 아래에 좀 더 자세히 정리함\n\n# Validation Group에 대하여. 그리고 이거 정말 꿀기능 맞을까?\n\n한 개의 class 안에 여러 개의 제약조건 그룹을 지정하고자 하는 경우에 유용하게 사용할 수 있음.\n제약조건마다, 즉 Request마다 VO를 모두 따로따로 만들어야 하는건가 절망에 빠져있을 때 찾은 내용이라 매우 꿀기능처럼 느껴졌음. (꿀인지 아닌지 아직 엄청 많이 써보지는 않아서 모름 ^\\_^)\n\n```java\npublic class ValidationGroups {\n    public interface EmailChange {};\n    public interface PasswordChange {};\n}\n```\n\n```java\npublic class ChangeUserAccountRequest {\n    @Email(groups = {ValidationGroups.EmailChange.class})\n    private String email;\n\n    @NotEmpty(groups = {ValidationGroups.PasswordChange.class})\n    private String password;\n}\n```\n\n```java\npublic void changeUserEmail(\n    @Validated(ValidationGroups.EmailChange) ChangeUserAccountRequest request,\n){\n    service.changeUserEmail(request);\n}\n\npublic void changeUserPassword(\n    @Validated(ValidationGroups.PasswordChange) ChangeUserAccountRequest request,\n){\n    service.changeUserPassword(request);\n}\n```\n\n+) 개인적인 의견\nVO, DTO 객체 한 개만으로도 여러개의 constraint를 제어할 수 있어서 엄청난 꿀 기능처럼 보이기도 하지만, 지나치게 많아지면 가독성에는 문제가 조금 있는 것 같다... 🤣\n\n# Custom Validator에 관하여\n\n제공되는 기본 validator도 충분히 다양하지만, 우리 서비스만의 validator를 만들고 싶을 때도 있음\n\n```java\n@Constraint(validatedBy = NicknameValidator.class)\n@Target( { ElementType.METHOD, ElementType.FIELD })\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface NickNameConstraint {\n    String message() default \"유효하지 않은 닉네임 형식입니다.\";\n    Class<?>[] groups() default {};\n    Class<? extends Payload>[] payload() default {};\n}\n```\n\n```java\npublic class NicknameValidator implements\n  ConstraintValidator<NickNameConstraint, String> {\n\n    private NickNameConstraint constraint;\n\n    @Override\n    public void initialize(NickNameConstraint constraint) {\n        this.constraint = constraint;\n    }\n\n    @Override\n    public boolean isValid(String value,\n      ConstraintValidatorContext cxt) {\n        return value != null && value.matches(\"system's nickname format\");\n    }\n\n}\n```\n\n+) 개인적인 의견  \n신기하게도 custom validator는 아직 단점을 잘 모르겠다...! 지나치게 많이 선언하는거야 당연히 안좋은거고, 프로젝트 내에서 통용되는 몇 가지 validation 로직을 공통화 해놓으면 코드가 부드럽게 읽히는 magic이...  \n( 단점을 발견하게되면 충격받아서 흑역사 지우러 바로 위의 문장 수정하러 올 듯 .... ㅎㅎ )\n\n# Trouble Shooting🔥\n\n## ⚠ @Valid가 primitive type의 변수(대표적으로 Controller에서 PathVariable로 받아온 값들..)에서 동작하지 않음\n\n이 부분 때문에 많이 헤맸음 ㅠㅠㅠㅜㅜ  \nController에서 특정 api의 PathVariable에 Validator를 달아주고 싶었는데, 이때는 parameter 앞에 @Valid를 붙여주는 것 만으로는 원하는 대로 동작하지 않았음 😥 WHY?!?!!\n객체로 받아오는 BodyParam에 붙여준 @Valid는 잘 동작했는디...\n\n.\n.\n.\n\n두구두구\n\n위에서 @Valid와 @Validated의 차이에 스포해둔 것 처럼, PathVariable에 Validator를 적용하기 위해서는 상위 Class에 @Validated 어노테이션을 달아줘야함\n\n```java\n@Validated\npublic class YourController {\n\n    private final YourService yourService;\n\n    @GetMapping(\"somethings/{type_code}\")\n    public ResponseEntity<List<SomeVO>> findSomethingByTypeCode(@Size(min = 4, max = 6)\n                                                        @PathVariable String typeCode) {\n        return ResponseEntity.ok(yourService.findSomethingByTypeCode(typeCode));\n    }\n}\n\n```\n\n## ⚠ Exception 처리 시 주의\n\n@Valid와 @Validated 어노테이션은 서로 다른 타입의 Error를 던지므로, 공통 처리 모듈에서 약간의 분기 처리가 필요함\n\n@Valid 어노테이션에서는 javax.validation.ConstraintViolationException 을,  \n@Validated 어노테이션에서는 org.springframework.web.bind.MethodArgumentNotValidException 을 발생시킴\n\n어떤 field에서 Error가 발생했는지, 어떤 Error가 발생했는지 두 개의 Exception이 제공하는 field가 달라서 공통화에 시간이 조금 들었음, 참고하면 좋을 듯 :)\n\n## ⚠ 달기 쉬운 만큼, 중복하여 validate 하지 않도록 주의\n\n이 부분은 지금도 계속 어떻게 하면 중복을 최소화할까 고민하며 코딩하고 있는 내용임.\n\n코드로 적혀있는 로직은 중복되어있으면 쉽게 눈에 밟히는데, annotation은 무심코 넘어가게 되는 경우가 많아서 valid도 무심코 여러번 태우게되는 경우가 있었음.  \n정석적인 답은 \"가장 안쪽의 로직에만 적용하라\" 겠지만 이 메소드 저 메소드 서로 공유하는 상황에서 그러기가 쉽지가 않다. 🤣  \n\"이 값은 보장되어서 들어온 값이니까 믿어도 돼\" 라는 flag를 함께 넘겨줄 수 있을까? 이것저것 고민해봐야지!\n","source":"_posts/Tech/SpringBoot/spring-validation.md","raw":"---\ntitle: \"[Spring] @Valid @Validated에 대해 알아보자\"\ndate: 2022-02-18 23:00:19\ntags: [\"@Valid\", Spring, Annotation]\ncategories: [Tech, Spring Boot]\n---\n\n# MOTIVATION\n\n사용자로부터 받아온 Input 값을 우리 시스템에 넣어 처리하기 전에 검증하는 것은 매우 흔한 작업임. 볼 필요도 없는 값을 시스템 자원을 써가면서 처리할 필요가 없음.  \n이러한 검증은 몇 개의 if문과 validation utility로 물론 쉽게 구현이 가능하지만, server framework로 spring을 사용하고 있다면 아래와 같이 더 간결한 코드로 검증을 마칠 수 있음.\n\n```java\npublic class UserAcccount{\n    @NotBlank\n    private String name;\n\n    @NotNull\n    @Size(min = 4, max = 15)\n    private String password;\n}\n```\n\n```java\npublic void login(\n    @Valid UserAccount userAccount,\n){\n    service.login(userAccount);\n}\n```\n\n여기까지는 이해가 쉬운데, 실제로 application에 붙이려고 보니 좀 더 자세히 알아야할 내용들이 많았음. --\n이 글에서는 그 내용을 모아서 정리해봄.\n\n# @Valid 그리고 @Validated 어노테이션에 관하여\n\nide에서 @Valid를 입력할 때 자동완성 추천 결과에서 @Validated이 뜨던데, 처음에는 지나쳤었다.\n\n@Valid를 잘 써보고자 구글링을 하니 두 어노테이션에는 다음과 같은 차이점이 있다는 내용이 아주 많이 나왔다.\n\n👉 @Valid는 Java에서 제공됨\n👉 @Validated는 Spring 프레임워크에서 제공되며, @Valid의 기능을 포함함\n👉 @Valid는 method의 parameter 또는 class field에 사용된 complex object에 적용할 수 있음\n👉 @Validated는 @Valid가 사용되는 상황 뿐만 아니라, primitive type parameter에 Validation을 추가하고 싶을 때도 사용할 수 있음 (하단에서 후술)\n👉 @Valid와 달리 @Validated에는 Group을 지정할 수 있음. Validation Group에 대한 내용은 아래에 좀 더 자세히 정리함\n\n# Validation Group에 대하여. 그리고 이거 정말 꿀기능 맞을까?\n\n한 개의 class 안에 여러 개의 제약조건 그룹을 지정하고자 하는 경우에 유용하게 사용할 수 있음.\n제약조건마다, 즉 Request마다 VO를 모두 따로따로 만들어야 하는건가 절망에 빠져있을 때 찾은 내용이라 매우 꿀기능처럼 느껴졌음. (꿀인지 아닌지 아직 엄청 많이 써보지는 않아서 모름 ^\\_^)\n\n```java\npublic class ValidationGroups {\n    public interface EmailChange {};\n    public interface PasswordChange {};\n}\n```\n\n```java\npublic class ChangeUserAccountRequest {\n    @Email(groups = {ValidationGroups.EmailChange.class})\n    private String email;\n\n    @NotEmpty(groups = {ValidationGroups.PasswordChange.class})\n    private String password;\n}\n```\n\n```java\npublic void changeUserEmail(\n    @Validated(ValidationGroups.EmailChange) ChangeUserAccountRequest request,\n){\n    service.changeUserEmail(request);\n}\n\npublic void changeUserPassword(\n    @Validated(ValidationGroups.PasswordChange) ChangeUserAccountRequest request,\n){\n    service.changeUserPassword(request);\n}\n```\n\n+) 개인적인 의견\nVO, DTO 객체 한 개만으로도 여러개의 constraint를 제어할 수 있어서 엄청난 꿀 기능처럼 보이기도 하지만, 지나치게 많아지면 가독성에는 문제가 조금 있는 것 같다... 🤣\n\n# Custom Validator에 관하여\n\n제공되는 기본 validator도 충분히 다양하지만, 우리 서비스만의 validator를 만들고 싶을 때도 있음\n\n```java\n@Constraint(validatedBy = NicknameValidator.class)\n@Target( { ElementType.METHOD, ElementType.FIELD })\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface NickNameConstraint {\n    String message() default \"유효하지 않은 닉네임 형식입니다.\";\n    Class<?>[] groups() default {};\n    Class<? extends Payload>[] payload() default {};\n}\n```\n\n```java\npublic class NicknameValidator implements\n  ConstraintValidator<NickNameConstraint, String> {\n\n    private NickNameConstraint constraint;\n\n    @Override\n    public void initialize(NickNameConstraint constraint) {\n        this.constraint = constraint;\n    }\n\n    @Override\n    public boolean isValid(String value,\n      ConstraintValidatorContext cxt) {\n        return value != null && value.matches(\"system's nickname format\");\n    }\n\n}\n```\n\n+) 개인적인 의견  \n신기하게도 custom validator는 아직 단점을 잘 모르겠다...! 지나치게 많이 선언하는거야 당연히 안좋은거고, 프로젝트 내에서 통용되는 몇 가지 validation 로직을 공통화 해놓으면 코드가 부드럽게 읽히는 magic이...  \n( 단점을 발견하게되면 충격받아서 흑역사 지우러 바로 위의 문장 수정하러 올 듯 .... ㅎㅎ )\n\n# Trouble Shooting🔥\n\n## ⚠ @Valid가 primitive type의 변수(대표적으로 Controller에서 PathVariable로 받아온 값들..)에서 동작하지 않음\n\n이 부분 때문에 많이 헤맸음 ㅠㅠㅠㅜㅜ  \nController에서 특정 api의 PathVariable에 Validator를 달아주고 싶었는데, 이때는 parameter 앞에 @Valid를 붙여주는 것 만으로는 원하는 대로 동작하지 않았음 😥 WHY?!?!!\n객체로 받아오는 BodyParam에 붙여준 @Valid는 잘 동작했는디...\n\n.\n.\n.\n\n두구두구\n\n위에서 @Valid와 @Validated의 차이에 스포해둔 것 처럼, PathVariable에 Validator를 적용하기 위해서는 상위 Class에 @Validated 어노테이션을 달아줘야함\n\n```java\n@Validated\npublic class YourController {\n\n    private final YourService yourService;\n\n    @GetMapping(\"somethings/{type_code}\")\n    public ResponseEntity<List<SomeVO>> findSomethingByTypeCode(@Size(min = 4, max = 6)\n                                                        @PathVariable String typeCode) {\n        return ResponseEntity.ok(yourService.findSomethingByTypeCode(typeCode));\n    }\n}\n\n```\n\n## ⚠ Exception 처리 시 주의\n\n@Valid와 @Validated 어노테이션은 서로 다른 타입의 Error를 던지므로, 공통 처리 모듈에서 약간의 분기 처리가 필요함\n\n@Valid 어노테이션에서는 javax.validation.ConstraintViolationException 을,  \n@Validated 어노테이션에서는 org.springframework.web.bind.MethodArgumentNotValidException 을 발생시킴\n\n어떤 field에서 Error가 발생했는지, 어떤 Error가 발생했는지 두 개의 Exception이 제공하는 field가 달라서 공통화에 시간이 조금 들었음, 참고하면 좋을 듯 :)\n\n## ⚠ 달기 쉬운 만큼, 중복하여 validate 하지 않도록 주의\n\n이 부분은 지금도 계속 어떻게 하면 중복을 최소화할까 고민하며 코딩하고 있는 내용임.\n\n코드로 적혀있는 로직은 중복되어있으면 쉽게 눈에 밟히는데, annotation은 무심코 넘어가게 되는 경우가 많아서 valid도 무심코 여러번 태우게되는 경우가 있었음.  \n정석적인 답은 \"가장 안쪽의 로직에만 적용하라\" 겠지만 이 메소드 저 메소드 서로 공유하는 상황에서 그러기가 쉽지가 않다. 🤣  \n\"이 값은 보장되어서 들어온 값이니까 믿어도 돼\" 라는 flag를 함께 넘겨줄 수 있을까? 이것저것 고민해봐야지!\n","slug":"Tech/SpringBoot/spring-validation","published":1,"updated":"2023-01-22T14:05:52.813Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2rw000ptqwec9yk3bxt","content":"<h1 id=\"MOTIVATION\"><a href=\"#MOTIVATION\" class=\"headerlink\" title=\"MOTIVATION\"></a>MOTIVATION</h1><p>사용자로부터 받아온 Input 값을 우리 시스템에 넣어 처리하기 전에 검증하는 것은 매우 흔한 작업임. 볼 필요도 없는 값을 시스템 자원을 써가면서 처리할 필요가 없음.<br>이러한 검증은 몇 개의 if문과 validation utility로 물론 쉽게 구현이 가능하지만, server framework로 spring을 사용하고 있다면 아래와 같이 더 간결한 코드로 검증을 마칠 수 있음.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserAcccount</span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@NotBlank</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotNull</span></span><br><span class=\"line\">    <span class=\"meta\">@Size(min = 4, max = 15)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">login</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"meta\">@Valid</span> UserAccount userAccount,</span></span><br><span class=\"line\"><span class=\"params\">)</span>&#123;</span><br><span class=\"line\">    service.login(userAccount);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>여기까지는 이해가 쉬운데, 실제로 application에 붙이려고 보니 좀 더 자세히 알아야할 내용들이 많았음. –<br>이 글에서는 그 내용을 모아서 정리해봄.</p>\n<h1 id=\"Valid-그리고-Validated-어노테이션에-관하여\"><a href=\"#Valid-그리고-Validated-어노테이션에-관하여\" class=\"headerlink\" title=\"@Valid 그리고 @Validated 어노테이션에 관하여\"></a>@Valid 그리고 @Validated 어노테이션에 관하여</h1><p>ide에서 @Valid를 입력할 때 자동완성 추천 결과에서 @Validated이 뜨던데, 처음에는 지나쳤었다.</p>\n<p>@Valid를 잘 써보고자 구글링을 하니 두 어노테이션에는 다음과 같은 차이점이 있다는 내용이 아주 많이 나왔다.</p>\n<p>👉 @Valid는 Java에서 제공됨<br>👉 @Validated는 Spring 프레임워크에서 제공되며, @Valid의 기능을 포함함<br>👉 @Valid는 method의 parameter 또는 class field에 사용된 complex object에 적용할 수 있음<br>👉 @Validated는 @Valid가 사용되는 상황 뿐만 아니라, primitive type parameter에 Validation을 추가하고 싶을 때도 사용할 수 있음 (하단에서 후술)<br>👉 @Valid와 달리 @Validated에는 Group을 지정할 수 있음. Validation Group에 대한 내용은 아래에 좀 더 자세히 정리함</p>\n<h1 id=\"Validation-Group에-대하여-그리고-이거-정말-꿀기능-맞을까\"><a href=\"#Validation-Group에-대하여-그리고-이거-정말-꿀기능-맞을까\" class=\"headerlink\" title=\"Validation Group에 대하여. 그리고 이거 정말 꿀기능 맞을까?\"></a>Validation Group에 대하여. 그리고 이거 정말 꿀기능 맞을까?</h1><p>한 개의 class 안에 여러 개의 제약조건 그룹을 지정하고자 하는 경우에 유용하게 사용할 수 있음.<br>제약조건마다, 즉 Request마다 VO를 모두 따로따로 만들어야 하는건가 절망에 빠져있을 때 찾은 내용이라 매우 꿀기능처럼 느껴졌음. (꿀인지 아닌지 아직 엄청 많이 써보지는 않아서 모름 ^_^)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ValidationGroups</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">EmailChange</span> &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">PasswordChange</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ChangeUserAccountRequest</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Email(groups = &#123;ValidationGroups.EmailChange.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String email;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotEmpty(groups = &#123;ValidationGroups.PasswordChange.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">changeUserEmail</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"meta\">@Validated(ValidationGroups.EmailChange)</span> ChangeUserAccountRequest request,</span></span><br><span class=\"line\"><span class=\"params\">)</span>&#123;</span><br><span class=\"line\">    service.changeUserEmail(request);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">changeUserPassword</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"meta\">@Validated(ValidationGroups.PasswordChange)</span> ChangeUserAccountRequest request,</span></span><br><span class=\"line\"><span class=\"params\">)</span>&#123;</span><br><span class=\"line\">    service.changeUserPassword(request);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>+) 개인적인 의견<br>VO, DTO 객체 한 개만으로도 여러개의 constraint를 제어할 수 있어서 엄청난 꿀 기능처럼 보이기도 하지만, 지나치게 많아지면 가독성에는 문제가 조금 있는 것 같다… 🤣</p>\n<h1 id=\"Custom-Validator에-관하여\"><a href=\"#Custom-Validator에-관하여\" class=\"headerlink\" title=\"Custom Validator에 관하여\"></a>Custom Validator에 관하여</h1><p>제공되는 기본 validator도 충분히 다양하지만, 우리 서비스만의 validator를 만들고 싶을 때도 있음</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Constraint(validatedBy = NicknameValidator.class)</span></span><br><span class=\"line\"><span class=\"meta\">@Target( &#123; ElementType.METHOD, ElementType.FIELD &#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> NickNameConstraint &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">message</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;유효하지 않은 닉네임 형식입니다.&quot;</span>;</span><br><span class=\"line\">    Class&lt;?&gt;[] groups() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">    Class&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">Payload</span>&gt;[] payload() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NicknameValidator</span> <span class=\"keyword\">implements</span></span><br><span class=\"line\">  <span class=\"title class_\">ConstraintValidator</span>&lt;NickNameConstraint, String&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> NickNameConstraint constraint;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initialize</span><span class=\"params\">(NickNameConstraint constraint)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.constraint = constraint;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isValid</span><span class=\"params\">(String value,</span></span><br><span class=\"line\"><span class=\"params\">      ConstraintValidatorContext cxt)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value != <span class=\"literal\">null</span> &amp;&amp; value.matches(<span class=\"string\">&quot;system&#x27;s nickname format&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>+) 개인적인 의견<br>신기하게도 custom validator는 아직 단점을 잘 모르겠다…! 지나치게 많이 선언하는거야 당연히 안좋은거고, 프로젝트 내에서 통용되는 몇 가지 validation 로직을 공통화 해놓으면 코드가 부드럽게 읽히는 magic이…<br>( 단점을 발견하게되면 충격받아서 흑역사 지우러 바로 위의 문장 수정하러 올 듯 …. ㅎㅎ )</p>\n<h1 id=\"Trouble-Shooting🔥\"><a href=\"#Trouble-Shooting🔥\" class=\"headerlink\" title=\"Trouble Shooting🔥\"></a>Trouble Shooting🔥</h1><h2 id=\"⚠-Valid가-primitive-type의-변수-대표적으로-Controller에서-PathVariable로-받아온-값들-에서-동작하지-않음\"><a href=\"#⚠-Valid가-primitive-type의-변수-대표적으로-Controller에서-PathVariable로-받아온-값들-에서-동작하지-않음\" class=\"headerlink\" title=\"⚠ @Valid가 primitive type의 변수(대표적으로 Controller에서 PathVariable로 받아온 값들..)에서 동작하지 않음\"></a>⚠ @Valid가 primitive type의 변수(대표적으로 Controller에서 PathVariable로 받아온 값들..)에서 동작하지 않음</h2><p>이 부분 때문에 많이 헤맸음 ㅠㅠㅠㅜㅜ<br>Controller에서 특정 api의 PathVariable에 Validator를 달아주고 싶었는데, 이때는 parameter 앞에 @Valid를 붙여주는 것 만으로는 원하는 대로 동작하지 않았음 😥 WHY?!?!!<br>객체로 받아오는 BodyParam에 붙여준 @Valid는 잘 동작했는디…</p>\n<p>.<br>.<br>.</p>\n<p>두구두구</p>\n<p>위에서 @Valid와 @Validated의 차이에 스포해둔 것 처럼, PathVariable에 Validator를 적용하기 위해서는 상위 Class에 @Validated 어노테이션을 달아줘야함</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Validated</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">YourController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> YourService yourService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;somethings/&#123;type_code&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseEntity&lt;List&lt;SomeVO&gt;&gt; <span class=\"title function_\">findSomethingByTypeCode</span><span class=\"params\">(<span class=\"meta\">@Size(min = 4, max = 6)</span></span></span><br><span class=\"line\"><span class=\"params\">                                                        <span class=\"meta\">@PathVariable</span> String typeCode)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseEntity.ok(yourService.findSomethingByTypeCode(typeCode));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"⚠-Exception-처리-시-주의\"><a href=\"#⚠-Exception-처리-시-주의\" class=\"headerlink\" title=\"⚠ Exception 처리 시 주의\"></a>⚠ Exception 처리 시 주의</h2><p>@Valid와 @Validated 어노테이션은 서로 다른 타입의 Error를 던지므로, 공통 처리 모듈에서 약간의 분기 처리가 필요함</p>\n<p>@Valid 어노테이션에서는 javax.validation.ConstraintViolationException 을,<br>@Validated 어노테이션에서는 org.springframework.web.bind.MethodArgumentNotValidException 을 발생시킴</p>\n<p>어떤 field에서 Error가 발생했는지, 어떤 Error가 발생했는지 두 개의 Exception이 제공하는 field가 달라서 공통화에 시간이 조금 들었음, 참고하면 좋을 듯 :)</p>\n<h2 id=\"⚠-달기-쉬운-만큼-중복하여-validate-하지-않도록-주의\"><a href=\"#⚠-달기-쉬운-만큼-중복하여-validate-하지-않도록-주의\" class=\"headerlink\" title=\"⚠ 달기 쉬운 만큼, 중복하여 validate 하지 않도록 주의\"></a>⚠ 달기 쉬운 만큼, 중복하여 validate 하지 않도록 주의</h2><p>이 부분은 지금도 계속 어떻게 하면 중복을 최소화할까 고민하며 코딩하고 있는 내용임.</p>\n<p>코드로 적혀있는 로직은 중복되어있으면 쉽게 눈에 밟히는데, annotation은 무심코 넘어가게 되는 경우가 많아서 valid도 무심코 여러번 태우게되는 경우가 있었음.<br>정석적인 답은 “가장 안쪽의 로직에만 적용하라” 겠지만 이 메소드 저 메소드 서로 공유하는 상황에서 그러기가 쉽지가 않다. 🤣<br>“이 값은 보장되어서 들어온 값이니까 믿어도 돼” 라는 flag를 함께 넘겨줄 수 있을까? 이것저것 고민해봐야지!</p>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"MOTIVATION\"><a href=\"#MOTIVATION\" class=\"headerlink\" title=\"MOTIVATION\"></a>MOTIVATION</h1><p>사용자로부터 받아온 Input 값을 우리 시스템에 넣어 처리하기 전에 검증하는 것은 매우 흔한 작업임. 볼 필요도 없는 값을 시스템 자원을 써가면서 처리할 필요가 없음.<br>이러한 검증은 몇 개의 if문과 validation utility로 물론 쉽게 구현이 가능하지만, server framework로 spring을 사용하고 있다면 아래와 같이 더 간결한 코드로 검증을 마칠 수 있음.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserAcccount</span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@NotBlank</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotNull</span></span><br><span class=\"line\">    <span class=\"meta\">@Size(min = 4, max = 15)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">login</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"meta\">@Valid</span> UserAccount userAccount,</span></span><br><span class=\"line\"><span class=\"params\">)</span>&#123;</span><br><span class=\"line\">    service.login(userAccount);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>여기까지는 이해가 쉬운데, 실제로 application에 붙이려고 보니 좀 더 자세히 알아야할 내용들이 많았음. –<br>이 글에서는 그 내용을 모아서 정리해봄.</p>\n<h1 id=\"Valid-그리고-Validated-어노테이션에-관하여\"><a href=\"#Valid-그리고-Validated-어노테이션에-관하여\" class=\"headerlink\" title=\"@Valid 그리고 @Validated 어노테이션에 관하여\"></a>@Valid 그리고 @Validated 어노테이션에 관하여</h1><p>ide에서 @Valid를 입력할 때 자동완성 추천 결과에서 @Validated이 뜨던데, 처음에는 지나쳤었다.</p>\n<p>@Valid를 잘 써보고자 구글링을 하니 두 어노테이션에는 다음과 같은 차이점이 있다는 내용이 아주 많이 나왔다.</p>\n<p>👉 @Valid는 Java에서 제공됨<br>👉 @Validated는 Spring 프레임워크에서 제공되며, @Valid의 기능을 포함함<br>👉 @Valid는 method의 parameter 또는 class field에 사용된 complex object에 적용할 수 있음<br>👉 @Validated는 @Valid가 사용되는 상황 뿐만 아니라, primitive type parameter에 Validation을 추가하고 싶을 때도 사용할 수 있음 (하단에서 후술)<br>👉 @Valid와 달리 @Validated에는 Group을 지정할 수 있음. Validation Group에 대한 내용은 아래에 좀 더 자세히 정리함</p>\n<h1 id=\"Validation-Group에-대하여-그리고-이거-정말-꿀기능-맞을까\"><a href=\"#Validation-Group에-대하여-그리고-이거-정말-꿀기능-맞을까\" class=\"headerlink\" title=\"Validation Group에 대하여. 그리고 이거 정말 꿀기능 맞을까?\"></a>Validation Group에 대하여. 그리고 이거 정말 꿀기능 맞을까?</h1><p>한 개의 class 안에 여러 개의 제약조건 그룹을 지정하고자 하는 경우에 유용하게 사용할 수 있음.<br>제약조건마다, 즉 Request마다 VO를 모두 따로따로 만들어야 하는건가 절망에 빠져있을 때 찾은 내용이라 매우 꿀기능처럼 느껴졌음. (꿀인지 아닌지 아직 엄청 많이 써보지는 않아서 모름 ^_^)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ValidationGroups</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">EmailChange</span> &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">PasswordChange</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ChangeUserAccountRequest</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Email(groups = &#123;ValidationGroups.EmailChange.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String email;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotEmpty(groups = &#123;ValidationGroups.PasswordChange.class&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">changeUserEmail</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"meta\">@Validated(ValidationGroups.EmailChange)</span> ChangeUserAccountRequest request,</span></span><br><span class=\"line\"><span class=\"params\">)</span>&#123;</span><br><span class=\"line\">    service.changeUserEmail(request);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">changeUserPassword</span><span class=\"params\">(</span></span><br><span class=\"line\"><span class=\"params\">    <span class=\"meta\">@Validated(ValidationGroups.PasswordChange)</span> ChangeUserAccountRequest request,</span></span><br><span class=\"line\"><span class=\"params\">)</span>&#123;</span><br><span class=\"line\">    service.changeUserPassword(request);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>+) 개인적인 의견<br>VO, DTO 객체 한 개만으로도 여러개의 constraint를 제어할 수 있어서 엄청난 꿀 기능처럼 보이기도 하지만, 지나치게 많아지면 가독성에는 문제가 조금 있는 것 같다… 🤣</p>\n<h1 id=\"Custom-Validator에-관하여\"><a href=\"#Custom-Validator에-관하여\" class=\"headerlink\" title=\"Custom Validator에 관하여\"></a>Custom Validator에 관하여</h1><p>제공되는 기본 validator도 충분히 다양하지만, 우리 서비스만의 validator를 만들고 싶을 때도 있음</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Constraint(validatedBy = NicknameValidator.class)</span></span><br><span class=\"line\"><span class=\"meta\">@Target( &#123; ElementType.METHOD, ElementType.FIELD &#125;)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> NickNameConstraint &#123;</span><br><span class=\"line\">    String <span class=\"title function_\">message</span><span class=\"params\">()</span> <span class=\"keyword\">default</span> <span class=\"string\">&quot;유효하지 않은 닉네임 형식입니다.&quot;</span>;</span><br><span class=\"line\">    Class&lt;?&gt;[] groups() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">    Class&lt;? <span class=\"keyword\">extends</span> <span class=\"title class_\">Payload</span>&gt;[] payload() <span class=\"keyword\">default</span> &#123;&#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NicknameValidator</span> <span class=\"keyword\">implements</span></span><br><span class=\"line\">  <span class=\"title class_\">ConstraintValidator</span>&lt;NickNameConstraint, String&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> NickNameConstraint constraint;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initialize</span><span class=\"params\">(NickNameConstraint constraint)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.constraint = constraint;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isValid</span><span class=\"params\">(String value,</span></span><br><span class=\"line\"><span class=\"params\">      ConstraintValidatorContext cxt)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value != <span class=\"literal\">null</span> &amp;&amp; value.matches(<span class=\"string\">&quot;system&#x27;s nickname format&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>+) 개인적인 의견<br>신기하게도 custom validator는 아직 단점을 잘 모르겠다…! 지나치게 많이 선언하는거야 당연히 안좋은거고, 프로젝트 내에서 통용되는 몇 가지 validation 로직을 공통화 해놓으면 코드가 부드럽게 읽히는 magic이…<br>( 단점을 발견하게되면 충격받아서 흑역사 지우러 바로 위의 문장 수정하러 올 듯 …. ㅎㅎ )</p>\n<h1 id=\"Trouble-Shooting🔥\"><a href=\"#Trouble-Shooting🔥\" class=\"headerlink\" title=\"Trouble Shooting🔥\"></a>Trouble Shooting🔥</h1><h2 id=\"⚠-Valid가-primitive-type의-변수-대표적으로-Controller에서-PathVariable로-받아온-값들-에서-동작하지-않음\"><a href=\"#⚠-Valid가-primitive-type의-변수-대표적으로-Controller에서-PathVariable로-받아온-값들-에서-동작하지-않음\" class=\"headerlink\" title=\"⚠ @Valid가 primitive type의 변수(대표적으로 Controller에서 PathVariable로 받아온 값들..)에서 동작하지 않음\"></a>⚠ @Valid가 primitive type의 변수(대표적으로 Controller에서 PathVariable로 받아온 값들..)에서 동작하지 않음</h2><p>이 부분 때문에 많이 헤맸음 ㅠㅠㅠㅜㅜ<br>Controller에서 특정 api의 PathVariable에 Validator를 달아주고 싶었는데, 이때는 parameter 앞에 @Valid를 붙여주는 것 만으로는 원하는 대로 동작하지 않았음 😥 WHY?!?!!<br>객체로 받아오는 BodyParam에 붙여준 @Valid는 잘 동작했는디…</p>\n<p>.<br>.<br>.</p>\n<p>두구두구</p>\n<p>위에서 @Valid와 @Validated의 차이에 스포해둔 것 처럼, PathVariable에 Validator를 적용하기 위해서는 상위 Class에 @Validated 어노테이션을 달아줘야함</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Validated</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">YourController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> YourService yourService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;somethings/&#123;type_code&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ResponseEntity&lt;List&lt;SomeVO&gt;&gt; <span class=\"title function_\">findSomethingByTypeCode</span><span class=\"params\">(<span class=\"meta\">@Size(min = 4, max = 6)</span></span></span><br><span class=\"line\"><span class=\"params\">                                                        <span class=\"meta\">@PathVariable</span> String typeCode)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ResponseEntity.ok(yourService.findSomethingByTypeCode(typeCode));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"⚠-Exception-처리-시-주의\"><a href=\"#⚠-Exception-처리-시-주의\" class=\"headerlink\" title=\"⚠ Exception 처리 시 주의\"></a>⚠ Exception 처리 시 주의</h2><p>@Valid와 @Validated 어노테이션은 서로 다른 타입의 Error를 던지므로, 공통 처리 모듈에서 약간의 분기 처리가 필요함</p>\n<p>@Valid 어노테이션에서는 javax.validation.ConstraintViolationException 을,<br>@Validated 어노테이션에서는 org.springframework.web.bind.MethodArgumentNotValidException 을 발생시킴</p>\n<p>어떤 field에서 Error가 발생했는지, 어떤 Error가 발생했는지 두 개의 Exception이 제공하는 field가 달라서 공통화에 시간이 조금 들었음, 참고하면 좋을 듯 :)</p>\n<h2 id=\"⚠-달기-쉬운-만큼-중복하여-validate-하지-않도록-주의\"><a href=\"#⚠-달기-쉬운-만큼-중복하여-validate-하지-않도록-주의\" class=\"headerlink\" title=\"⚠ 달기 쉬운 만큼, 중복하여 validate 하지 않도록 주의\"></a>⚠ 달기 쉬운 만큼, 중복하여 validate 하지 않도록 주의</h2><p>이 부분은 지금도 계속 어떻게 하면 중복을 최소화할까 고민하며 코딩하고 있는 내용임.</p>\n<p>코드로 적혀있는 로직은 중복되어있으면 쉽게 눈에 밟히는데, annotation은 무심코 넘어가게 되는 경우가 많아서 valid도 무심코 여러번 태우게되는 경우가 있었음.<br>정석적인 답은 “가장 안쪽의 로직에만 적용하라” 겠지만 이 메소드 저 메소드 서로 공유하는 상황에서 그러기가 쉽지가 않다. 🤣<br>“이 값은 보장되어서 들어온 값이니까 믿어도 돼” 라는 flag를 함께 넘겨줄 수 있을까? 이것저것 고민해봐야지!</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:05:52 GMT+0900 (대한민국 표준시)","title":"[Spring] @Valid @Validated에 대해 알아보자","path":"2022/02/18/Tech/SpringBoot/spring-validation/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-02-18T14:00:19.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-02-18T14:00:19.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Tech > Spring Boot","tags":["@Valid","Spring","Annotation"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[주말엔 엄빠랑 놀자] 멍청한 내 사이드 프로젝트에 MLOps 적용하기","date":"2022-03-06T11:28:59.000Z","_content":"\n# MOTIVATION\n\n작년 상반기에 구상하여 하반기에 기획 & 개발하고, 연말에 공모전에 냈던 나의 애증의 사이드 프로젝트 '주말엔 엄빠랑 놀자'...\n퇴근하고 저녁, 주말에만 개발하느라 시간도 부족했는데 또 발등에 불 떨어질 때까지 미루는 바람에 실제로는 한 달안에 우다다 만들어서\n코드도 못생기고 기능도 허접해서 다시 꺼내보고 싶지 않았는데... 요즘 문득 다시 만들어볼까 생각이 들어서 꺼내봤다.\n\n기억과 그대로 소스코드는 지저분했지만, 리소스가 아깝기도 하고 작년 하반기 대비 내 실력이 얼마나 늘었는지도 볼 겸 모바일앱으로 전환을 해보기로 마음먹었다.\n\n그리고 이 꼬질꼬질한 친구를 더 멋드러지게 만들기 위해, 작년에 기획만 하고 우선순위에 밀려 구현되지 못했던 장소 추천 기능을 넣어보려고한다.\n\n이 포스트에서는 어떻게 추천 서비스를 1.구상하고 2.조사하고 3.이해하고 4.구현했는지 정리할 것이다.\n\n# 구상하기\n\n## 당신과 유사한 사용자가 본 컨텐츠 vs 당신이 관심있었던 컨텐츠와 유사한 컨텐츠\n\n**사용자 기반의 추천** / **컨텐츠 기반의 추천** 둘 중 어느 방향으로 추천을 구현할까 고민이 있었는데\n나와 유사한 사용자가 어떤 선택을 내렸는가에 기반하여 추천을 하려면 일단 일정 규모 이상의 사용자 풀이 확보되어야한다는 점이 마음에 걸렸고,\n\n- 사용자 풀을 방대하게 늘리고 싶은 욕심이 없고\n- 소수의 충성스러운 사용자를 확보하고 싶은\n\n나로서는 **컨텐츠 기반의 추천**을 선택하는 것이 유리하다고 판단했다.\n\n따라서 일차적으로는 내 컨텐츠의 카테고리를 분류하고, 사용자로부터 선호하는 카테고리를 수집한 것이 작년까지의 작업 내용이다.\n\n## 그런데 어느 컨텐츠에 관심이 있으셨죠?\n\n위에서 언급했듯이 컨텐츠 기반으로 추천을 하겠다는 결정과 초기 작업은 작년에 이미 해둔 상태이지만, 이번에 좀 더 잘 다듬어보려고 고심하면서 심화 기능을 생각하자니 뭔가 문제가 좀 있었다.\n![애증의 사이드 프로젝트](/images/playwith_preference_draft.png)\n\n- 초기에 선택한 카테고리에 대한 흥미도가 시간이 지남에 따라 변함\n  그렇다고 사용자가 스스로 취향이 바뀌었다는 것을 인지하고 -> 정보 설정 화면에 진입해서 -> 카테고리를 다시 고르게 하는 것은 검색창의 필터 기능이랑 다른점이 무엇인지? \"추천\"이라고 쓰고 \"검색\"이라고 읽어야하나?\n- 제한된 카테고리 내에서 선택을 하다보니 세밀한 취향 선택이 어렵고, 당연히 추천에 대한 만족도도 떨어짐\n  그렇다고 카테고리 수를 늘리는 것은 UX 피로도를 높이고 심미성도 떨어지는데...\n\n**요약하자면** 사용자에게 '너의 취향을 골라보라'고 카테고리 몇 가지를 제시하고 입력받는 것 만으로는 사용자의 취향을 자세히 알 수가 없다는 점이 걱정되기 시작했다.\n**결론적으로**, 사용자가 서비스 내에서 어떤 행동을 했는지 로깅하고, 해당 로그를 활용하여 사용자가 어떤 정보에 흥미를 느끼는지 파악하는 파이프라인을 마련해야할 필요가 있었다.\n\n## 그렇다면 어떤 정보를 수집하고, 수집된 정보를 어떻게 취향의 근거로 활용할까?\n\n인스타 추천알고리즘이나 유튭 추천알고리즘이 어떤 정보를 수집해간다더라 이것저것 들은 이야기는 있지만, 실제로 내부가 어찌 되어있는지 자세히 알 방도도 없을 뿐더러 내 시간과 비용으로 그 정도 구현은 어렵기 때문에 우선은 몇 가지 action에 대한 측정값을 수집하는 정도로만 먼저 데이터를 모아보기로 했다.\n\n의미가 있다고 판단한 action은 주로 조회나 화면과의 상호작용 정도이다. 한 가지 나름 신경썼다고 생각하는 특이점으로는 서비스 자체가 메인 추천화면 -> 장소 상세화면 -> 장소 상세화면의 세부 정보별 상호작용 (장소 내용 자세히보기, 주변관광지 추천, 지도연동 등등)과 같이 안쪽으로 타고 들어와야만 정보의 질이 높아지는 구조로, 유용한 정보를 얻고자 하는 사용자라면 장소상세 화면 안쪽까지 들어와야만 한다는 점에 착안하여 **화면 depth에 대한 가중치를 부여**하려고한다는 점이다.\n\n## 취향에 맞는 컨텐츠를 제공하기 위해 선행되어야할 작업은 뭘까? 컨텐츠 카테고리를 정확하고 자세하게 정하는 것?\n\n작년 버전의 소스에서는 박물관, 미술관 등의 N가지 카테고리를 대분류로 장소 별 특색에 따라 하위의 분류를 얼추 정해놓았다. 관광공사에서 제공하는 api를 사용하는 것도 프로젝트의 큰 목적이었기때문에, 관광공사에서 제공하는 카테고리를 거의 그대로 가져다 썼다.\n\n이 다중 트리 구조의 카테고리가 내가 만들고자하는 추천 서비스에 적합한 데이터 구조일까? 제공되는 카테고리가 마음에 들지 않는데, 시간과 노력을 들여 좀 더 세밀하게 / 정확하게 트리의 리프 카테고리까지 검수해야할까? (실제로 작년에는 이 검수 작업을 하려고 했었다)\n약간의 고민 만으로도 이 접근은 잘못되었다는 것을 알 수 있었다. 트리 구조의 자세한 분류 체계는 내가 구현하고자 하는 추천 시스템에서 상대적으로 덜 중요한 작업이다.\n\n대신 내가 장소의 feature로 고려할 수 있는 항목이 무엇이 있을지 고민하면 되겠다고 판단했다.\n\n**결론적으로**, 나는 제목의 \"취향에 맞는 컨텐츠를 제공하기 위해 선행되어야할 작업은 뭘까?\"에 대한 답을 \"장소에 대한 feature를 정하자\"로 내린 것이다.\n\n내가 타겟이라고 생각했던 유저층의 마음으로 웹서핑을 하며 몇 가지 feature 를 뽑아보니, 원래부터도 카테고리로 사용하고 있던 **현장학습 지식의 분야**(역사/과학/미술 등등) 외에도 **적정 연령대**, **대중교통 가능 여부** 등등 꽤 여러가지 feature가 뽑혔다.\n\n# 조사하기\n\n## 사용자의 action 이력을 수집하는 방법은 뭐가 있을까?\n\n어플리케이션에 Action 로깅을 심는 방법에 대해 이것저것 구글링해봤다. 웹에서는 이전부터 많이 쓰였어서 그런지, 구글링 결과가 아주 방대했고 기획 & 마케팅 초짜인 나는 어떤 서비스를 사용해야할 지 찾기 어려웠다. 결국엔 그냥 여러 아티클과 블로그를 둘러보며 감이라도 잡는 수 밖에 없었다 😅\n\n- [MLOps란 무엇일까?](https://medium.com/daria-blog/mlops-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C-7ba8d9aae221): 와! 요즘 블로그에서 많이 보이는 복붙된 지식이 준초콜릿 같은거라면 이런 고디바 같은 글도 있다 ㅠㅠ 감격\n- [행동 데이터 분석가를 위한 안내서 - 나(또는 우리 회사)에 맞는 애널리틱스 선택하기](https://brunch.co.kr/@userhabit/52) : 결론은 광고글인 것 같긴한데, 어떤 솔루션이 유명한지조차 모르는 나에게는 도움이 되었다\n- [Apple의 앱 추적 투명성 정책](https://www.itworld.co.kr/news/191844) : 어우 언제부턴가 추적을 허용하겠냐는 팝업이 떠서 당연히 매번 거부했는데 ㅎㅎ 정책이었다니! 너무 무지했던 것 같다;\n- [위에 언급된 ATT로인해 UX적으로 고려해야하는 것](https://www.adjust.com/ko/blog/opt-in-design-for-apple-app-tracking-transparency-att-ios14/): 관련은 없는데 재밌어서 기록한다. 역시 UX는 재밌다.\n\n## 사용자의 action 이력과 가중치를 넘기면 이 사용자의 feature 별 관심도를 뽑아주는 서비스나 모델이 뭐가 있을까?\n\n## 특정 사용자의 feature 별 관심도를 넘기면 그 사용자에게 추천할만한 데이터를 뽑아주는 서비스나 모델이 뭐가 있을까?\n","source":"_posts/Tech/AI_MLOps/ai-csp.md","raw":"---\ntitle: \"[주말엔 엄빠랑 놀자] 멍청한 내 사이드 프로젝트에 MLOps 적용하기\"\ndate: 2022-03-06 20:28:59\ncategories: [Tech, MLOps]\ntags: [MLOps, AI, Cloud]\n---\n\n# MOTIVATION\n\n작년 상반기에 구상하여 하반기에 기획 & 개발하고, 연말에 공모전에 냈던 나의 애증의 사이드 프로젝트 '주말엔 엄빠랑 놀자'...\n퇴근하고 저녁, 주말에만 개발하느라 시간도 부족했는데 또 발등에 불 떨어질 때까지 미루는 바람에 실제로는 한 달안에 우다다 만들어서\n코드도 못생기고 기능도 허접해서 다시 꺼내보고 싶지 않았는데... 요즘 문득 다시 만들어볼까 생각이 들어서 꺼내봤다.\n\n기억과 그대로 소스코드는 지저분했지만, 리소스가 아깝기도 하고 작년 하반기 대비 내 실력이 얼마나 늘었는지도 볼 겸 모바일앱으로 전환을 해보기로 마음먹었다.\n\n그리고 이 꼬질꼬질한 친구를 더 멋드러지게 만들기 위해, 작년에 기획만 하고 우선순위에 밀려 구현되지 못했던 장소 추천 기능을 넣어보려고한다.\n\n이 포스트에서는 어떻게 추천 서비스를 1.구상하고 2.조사하고 3.이해하고 4.구현했는지 정리할 것이다.\n\n# 구상하기\n\n## 당신과 유사한 사용자가 본 컨텐츠 vs 당신이 관심있었던 컨텐츠와 유사한 컨텐츠\n\n**사용자 기반의 추천** / **컨텐츠 기반의 추천** 둘 중 어느 방향으로 추천을 구현할까 고민이 있었는데\n나와 유사한 사용자가 어떤 선택을 내렸는가에 기반하여 추천을 하려면 일단 일정 규모 이상의 사용자 풀이 확보되어야한다는 점이 마음에 걸렸고,\n\n- 사용자 풀을 방대하게 늘리고 싶은 욕심이 없고\n- 소수의 충성스러운 사용자를 확보하고 싶은\n\n나로서는 **컨텐츠 기반의 추천**을 선택하는 것이 유리하다고 판단했다.\n\n따라서 일차적으로는 내 컨텐츠의 카테고리를 분류하고, 사용자로부터 선호하는 카테고리를 수집한 것이 작년까지의 작업 내용이다.\n\n## 그런데 어느 컨텐츠에 관심이 있으셨죠?\n\n위에서 언급했듯이 컨텐츠 기반으로 추천을 하겠다는 결정과 초기 작업은 작년에 이미 해둔 상태이지만, 이번에 좀 더 잘 다듬어보려고 고심하면서 심화 기능을 생각하자니 뭔가 문제가 좀 있었다.\n![애증의 사이드 프로젝트](/images/playwith_preference_draft.png)\n\n- 초기에 선택한 카테고리에 대한 흥미도가 시간이 지남에 따라 변함\n  그렇다고 사용자가 스스로 취향이 바뀌었다는 것을 인지하고 -> 정보 설정 화면에 진입해서 -> 카테고리를 다시 고르게 하는 것은 검색창의 필터 기능이랑 다른점이 무엇인지? \"추천\"이라고 쓰고 \"검색\"이라고 읽어야하나?\n- 제한된 카테고리 내에서 선택을 하다보니 세밀한 취향 선택이 어렵고, 당연히 추천에 대한 만족도도 떨어짐\n  그렇다고 카테고리 수를 늘리는 것은 UX 피로도를 높이고 심미성도 떨어지는데...\n\n**요약하자면** 사용자에게 '너의 취향을 골라보라'고 카테고리 몇 가지를 제시하고 입력받는 것 만으로는 사용자의 취향을 자세히 알 수가 없다는 점이 걱정되기 시작했다.\n**결론적으로**, 사용자가 서비스 내에서 어떤 행동을 했는지 로깅하고, 해당 로그를 활용하여 사용자가 어떤 정보에 흥미를 느끼는지 파악하는 파이프라인을 마련해야할 필요가 있었다.\n\n## 그렇다면 어떤 정보를 수집하고, 수집된 정보를 어떻게 취향의 근거로 활용할까?\n\n인스타 추천알고리즘이나 유튭 추천알고리즘이 어떤 정보를 수집해간다더라 이것저것 들은 이야기는 있지만, 실제로 내부가 어찌 되어있는지 자세히 알 방도도 없을 뿐더러 내 시간과 비용으로 그 정도 구현은 어렵기 때문에 우선은 몇 가지 action에 대한 측정값을 수집하는 정도로만 먼저 데이터를 모아보기로 했다.\n\n의미가 있다고 판단한 action은 주로 조회나 화면과의 상호작용 정도이다. 한 가지 나름 신경썼다고 생각하는 특이점으로는 서비스 자체가 메인 추천화면 -> 장소 상세화면 -> 장소 상세화면의 세부 정보별 상호작용 (장소 내용 자세히보기, 주변관광지 추천, 지도연동 등등)과 같이 안쪽으로 타고 들어와야만 정보의 질이 높아지는 구조로, 유용한 정보를 얻고자 하는 사용자라면 장소상세 화면 안쪽까지 들어와야만 한다는 점에 착안하여 **화면 depth에 대한 가중치를 부여**하려고한다는 점이다.\n\n## 취향에 맞는 컨텐츠를 제공하기 위해 선행되어야할 작업은 뭘까? 컨텐츠 카테고리를 정확하고 자세하게 정하는 것?\n\n작년 버전의 소스에서는 박물관, 미술관 등의 N가지 카테고리를 대분류로 장소 별 특색에 따라 하위의 분류를 얼추 정해놓았다. 관광공사에서 제공하는 api를 사용하는 것도 프로젝트의 큰 목적이었기때문에, 관광공사에서 제공하는 카테고리를 거의 그대로 가져다 썼다.\n\n이 다중 트리 구조의 카테고리가 내가 만들고자하는 추천 서비스에 적합한 데이터 구조일까? 제공되는 카테고리가 마음에 들지 않는데, 시간과 노력을 들여 좀 더 세밀하게 / 정확하게 트리의 리프 카테고리까지 검수해야할까? (실제로 작년에는 이 검수 작업을 하려고 했었다)\n약간의 고민 만으로도 이 접근은 잘못되었다는 것을 알 수 있었다. 트리 구조의 자세한 분류 체계는 내가 구현하고자 하는 추천 시스템에서 상대적으로 덜 중요한 작업이다.\n\n대신 내가 장소의 feature로 고려할 수 있는 항목이 무엇이 있을지 고민하면 되겠다고 판단했다.\n\n**결론적으로**, 나는 제목의 \"취향에 맞는 컨텐츠를 제공하기 위해 선행되어야할 작업은 뭘까?\"에 대한 답을 \"장소에 대한 feature를 정하자\"로 내린 것이다.\n\n내가 타겟이라고 생각했던 유저층의 마음으로 웹서핑을 하며 몇 가지 feature 를 뽑아보니, 원래부터도 카테고리로 사용하고 있던 **현장학습 지식의 분야**(역사/과학/미술 등등) 외에도 **적정 연령대**, **대중교통 가능 여부** 등등 꽤 여러가지 feature가 뽑혔다.\n\n# 조사하기\n\n## 사용자의 action 이력을 수집하는 방법은 뭐가 있을까?\n\n어플리케이션에 Action 로깅을 심는 방법에 대해 이것저것 구글링해봤다. 웹에서는 이전부터 많이 쓰였어서 그런지, 구글링 결과가 아주 방대했고 기획 & 마케팅 초짜인 나는 어떤 서비스를 사용해야할 지 찾기 어려웠다. 결국엔 그냥 여러 아티클과 블로그를 둘러보며 감이라도 잡는 수 밖에 없었다 😅\n\n- [MLOps란 무엇일까?](https://medium.com/daria-blog/mlops-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C-7ba8d9aae221): 와! 요즘 블로그에서 많이 보이는 복붙된 지식이 준초콜릿 같은거라면 이런 고디바 같은 글도 있다 ㅠㅠ 감격\n- [행동 데이터 분석가를 위한 안내서 - 나(또는 우리 회사)에 맞는 애널리틱스 선택하기](https://brunch.co.kr/@userhabit/52) : 결론은 광고글인 것 같긴한데, 어떤 솔루션이 유명한지조차 모르는 나에게는 도움이 되었다\n- [Apple의 앱 추적 투명성 정책](https://www.itworld.co.kr/news/191844) : 어우 언제부턴가 추적을 허용하겠냐는 팝업이 떠서 당연히 매번 거부했는데 ㅎㅎ 정책이었다니! 너무 무지했던 것 같다;\n- [위에 언급된 ATT로인해 UX적으로 고려해야하는 것](https://www.adjust.com/ko/blog/opt-in-design-for-apple-app-tracking-transparency-att-ios14/): 관련은 없는데 재밌어서 기록한다. 역시 UX는 재밌다.\n\n## 사용자의 action 이력과 가중치를 넘기면 이 사용자의 feature 별 관심도를 뽑아주는 서비스나 모델이 뭐가 있을까?\n\n## 특정 사용자의 feature 별 관심도를 넘기면 그 사용자에게 추천할만한 데이터를 뽑아주는 서비스나 모델이 뭐가 있을까?\n","slug":"Tech/AI_MLOps/ai-csp","published":1,"updated":"2023-01-22T14:04:26.989Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2rx000ttqwe2wu7bhor","content":"<h1 id=\"MOTIVATION\"><a href=\"#MOTIVATION\" class=\"headerlink\" title=\"MOTIVATION\"></a>MOTIVATION</h1><p>작년 상반기에 구상하여 하반기에 기획 &amp; 개발하고, 연말에 공모전에 냈던 나의 애증의 사이드 프로젝트 ‘주말엔 엄빠랑 놀자’…<br>퇴근하고 저녁, 주말에만 개발하느라 시간도 부족했는데 또 발등에 불 떨어질 때까지 미루는 바람에 실제로는 한 달안에 우다다 만들어서<br>코드도 못생기고 기능도 허접해서 다시 꺼내보고 싶지 않았는데… 요즘 문득 다시 만들어볼까 생각이 들어서 꺼내봤다.</p>\n<p>기억과 그대로 소스코드는 지저분했지만, 리소스가 아깝기도 하고 작년 하반기 대비 내 실력이 얼마나 늘었는지도 볼 겸 모바일앱으로 전환을 해보기로 마음먹었다.</p>\n<p>그리고 이 꼬질꼬질한 친구를 더 멋드러지게 만들기 위해, 작년에 기획만 하고 우선순위에 밀려 구현되지 못했던 장소 추천 기능을 넣어보려고한다.</p>\n<p>이 포스트에서는 어떻게 추천 서비스를 1.구상하고 2.조사하고 3.이해하고 4.구현했는지 정리할 것이다.</p>\n<h1 id=\"구상하기\"><a href=\"#구상하기\" class=\"headerlink\" title=\"구상하기\"></a>구상하기</h1><h2 id=\"당신과-유사한-사용자가-본-컨텐츠-vs-당신이-관심있었던-컨텐츠와-유사한-컨텐츠\"><a href=\"#당신과-유사한-사용자가-본-컨텐츠-vs-당신이-관심있었던-컨텐츠와-유사한-컨텐츠\" class=\"headerlink\" title=\"당신과 유사한 사용자가 본 컨텐츠 vs 당신이 관심있었던 컨텐츠와 유사한 컨텐츠\"></a>당신과 유사한 사용자가 본 컨텐츠 vs 당신이 관심있었던 컨텐츠와 유사한 컨텐츠</h2><p><strong>사용자 기반의 추천</strong> / <strong>컨텐츠 기반의 추천</strong> 둘 중 어느 방향으로 추천을 구현할까 고민이 있었는데<br>나와 유사한 사용자가 어떤 선택을 내렸는가에 기반하여 추천을 하려면 일단 일정 규모 이상의 사용자 풀이 확보되어야한다는 점이 마음에 걸렸고,</p>\n<ul>\n<li>사용자 풀을 방대하게 늘리고 싶은 욕심이 없고</li>\n<li>소수의 충성스러운 사용자를 확보하고 싶은</li>\n</ul>\n<p>나로서는 <strong>컨텐츠 기반의 추천</strong>을 선택하는 것이 유리하다고 판단했다.</p>\n<p>따라서 일차적으로는 내 컨텐츠의 카테고리를 분류하고, 사용자로부터 선호하는 카테고리를 수집한 것이 작년까지의 작업 내용이다.</p>\n<h2 id=\"그런데-어느-컨텐츠에-관심이-있으셨죠\"><a href=\"#그런데-어느-컨텐츠에-관심이-있으셨죠\" class=\"headerlink\" title=\"그런데 어느 컨텐츠에 관심이 있으셨죠?\"></a>그런데 어느 컨텐츠에 관심이 있으셨죠?</h2><p>위에서 언급했듯이 컨텐츠 기반으로 추천을 하겠다는 결정과 초기 작업은 작년에 이미 해둔 상태이지만, 이번에 좀 더 잘 다듬어보려고 고심하면서 심화 기능을 생각하자니 뭔가 문제가 좀 있었다.<br><img src=\"/images/playwith_preference_draft.png\" alt=\"애증의 사이드 프로젝트\"></p>\n<ul>\n<li>초기에 선택한 카테고리에 대한 흥미도가 시간이 지남에 따라 변함<br>그렇다고 사용자가 스스로 취향이 바뀌었다는 것을 인지하고 -&gt; 정보 설정 화면에 진입해서 -&gt; 카테고리를 다시 고르게 하는 것은 검색창의 필터 기능이랑 다른점이 무엇인지? “추천”이라고 쓰고 “검색”이라고 읽어야하나?</li>\n<li>제한된 카테고리 내에서 선택을 하다보니 세밀한 취향 선택이 어렵고, 당연히 추천에 대한 만족도도 떨어짐<br>그렇다고 카테고리 수를 늘리는 것은 UX 피로도를 높이고 심미성도 떨어지는데…</li>\n</ul>\n<p><strong>요약하자면</strong> 사용자에게 ‘너의 취향을 골라보라’고 카테고리 몇 가지를 제시하고 입력받는 것 만으로는 사용자의 취향을 자세히 알 수가 없다는 점이 걱정되기 시작했다.<br><strong>결론적으로</strong>, 사용자가 서비스 내에서 어떤 행동을 했는지 로깅하고, 해당 로그를 활용하여 사용자가 어떤 정보에 흥미를 느끼는지 파악하는 파이프라인을 마련해야할 필요가 있었다.</p>\n<h2 id=\"그렇다면-어떤-정보를-수집하고-수집된-정보를-어떻게-취향의-근거로-활용할까\"><a href=\"#그렇다면-어떤-정보를-수집하고-수집된-정보를-어떻게-취향의-근거로-활용할까\" class=\"headerlink\" title=\"그렇다면 어떤 정보를 수집하고, 수집된 정보를 어떻게 취향의 근거로 활용할까?\"></a>그렇다면 어떤 정보를 수집하고, 수집된 정보를 어떻게 취향의 근거로 활용할까?</h2><p>인스타 추천알고리즘이나 유튭 추천알고리즘이 어떤 정보를 수집해간다더라 이것저것 들은 이야기는 있지만, 실제로 내부가 어찌 되어있는지 자세히 알 방도도 없을 뿐더러 내 시간과 비용으로 그 정도 구현은 어렵기 때문에 우선은 몇 가지 action에 대한 측정값을 수집하는 정도로만 먼저 데이터를 모아보기로 했다.</p>\n<p>의미가 있다고 판단한 action은 주로 조회나 화면과의 상호작용 정도이다. 한 가지 나름 신경썼다고 생각하는 특이점으로는 서비스 자체가 메인 추천화면 -&gt; 장소 상세화면 -&gt; 장소 상세화면의 세부 정보별 상호작용 (장소 내용 자세히보기, 주변관광지 추천, 지도연동 등등)과 같이 안쪽으로 타고 들어와야만 정보의 질이 높아지는 구조로, 유용한 정보를 얻고자 하는 사용자라면 장소상세 화면 안쪽까지 들어와야만 한다는 점에 착안하여 <strong>화면 depth에 대한 가중치를 부여</strong>하려고한다는 점이다.</p>\n<h2 id=\"취향에-맞는-컨텐츠를-제공하기-위해-선행되어야할-작업은-뭘까-컨텐츠-카테고리를-정확하고-자세하게-정하는-것\"><a href=\"#취향에-맞는-컨텐츠를-제공하기-위해-선행되어야할-작업은-뭘까-컨텐츠-카테고리를-정확하고-자세하게-정하는-것\" class=\"headerlink\" title=\"취향에 맞는 컨텐츠를 제공하기 위해 선행되어야할 작업은 뭘까? 컨텐츠 카테고리를 정확하고 자세하게 정하는 것?\"></a>취향에 맞는 컨텐츠를 제공하기 위해 선행되어야할 작업은 뭘까? 컨텐츠 카테고리를 정확하고 자세하게 정하는 것?</h2><p>작년 버전의 소스에서는 박물관, 미술관 등의 N가지 카테고리를 대분류로 장소 별 특색에 따라 하위의 분류를 얼추 정해놓았다. 관광공사에서 제공하는 api를 사용하는 것도 프로젝트의 큰 목적이었기때문에, 관광공사에서 제공하는 카테고리를 거의 그대로 가져다 썼다.</p>\n<p>이 다중 트리 구조의 카테고리가 내가 만들고자하는 추천 서비스에 적합한 데이터 구조일까? 제공되는 카테고리가 마음에 들지 않는데, 시간과 노력을 들여 좀 더 세밀하게 / 정확하게 트리의 리프 카테고리까지 검수해야할까? (실제로 작년에는 이 검수 작업을 하려고 했었다)<br>약간의 고민 만으로도 이 접근은 잘못되었다는 것을 알 수 있었다. 트리 구조의 자세한 분류 체계는 내가 구현하고자 하는 추천 시스템에서 상대적으로 덜 중요한 작업이다.</p>\n<p>대신 내가 장소의 feature로 고려할 수 있는 항목이 무엇이 있을지 고민하면 되겠다고 판단했다.</p>\n<p><strong>결론적으로</strong>, 나는 제목의 “취향에 맞는 컨텐츠를 제공하기 위해 선행되어야할 작업은 뭘까?”에 대한 답을 “장소에 대한 feature를 정하자”로 내린 것이다.</p>\n<p>내가 타겟이라고 생각했던 유저층의 마음으로 웹서핑을 하며 몇 가지 feature 를 뽑아보니, 원래부터도 카테고리로 사용하고 있던 <strong>현장학습 지식의 분야</strong>(역사/과학/미술 등등) 외에도 <strong>적정 연령대</strong>, <strong>대중교통 가능 여부</strong> 등등 꽤 여러가지 feature가 뽑혔다.</p>\n<h1 id=\"조사하기\"><a href=\"#조사하기\" class=\"headerlink\" title=\"조사하기\"></a>조사하기</h1><h2 id=\"사용자의-action-이력을-수집하는-방법은-뭐가-있을까\"><a href=\"#사용자의-action-이력을-수집하는-방법은-뭐가-있을까\" class=\"headerlink\" title=\"사용자의 action 이력을 수집하는 방법은 뭐가 있을까?\"></a>사용자의 action 이력을 수집하는 방법은 뭐가 있을까?</h2><p>어플리케이션에 Action 로깅을 심는 방법에 대해 이것저것 구글링해봤다. 웹에서는 이전부터 많이 쓰였어서 그런지, 구글링 결과가 아주 방대했고 기획 &amp; 마케팅 초짜인 나는 어떤 서비스를 사용해야할 지 찾기 어려웠다. 결국엔 그냥 여러 아티클과 블로그를 둘러보며 감이라도 잡는 수 밖에 없었다 😅</p>\n<ul>\n<li><a href=\"https://medium.com/daria-blog/mlops-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C-7ba8d9aae221\">MLOps란 무엇일까?</a>: 와! 요즘 블로그에서 많이 보이는 복붙된 지식이 준초콜릿 같은거라면 이런 고디바 같은 글도 있다 ㅠㅠ 감격</li>\n<li><a href=\"https://brunch.co.kr/@userhabit/52\">행동 데이터 분석가를 위한 안내서 - 나(또는 우리 회사)에 맞는 애널리틱스 선택하기</a> : 결론은 광고글인 것 같긴한데, 어떤 솔루션이 유명한지조차 모르는 나에게는 도움이 되었다</li>\n<li><a href=\"https://www.itworld.co.kr/news/191844\">Apple의 앱 추적 투명성 정책</a> : 어우 언제부턴가 추적을 허용하겠냐는 팝업이 떠서 당연히 매번 거부했는데 ㅎㅎ 정책이었다니! 너무 무지했던 것 같다;</li>\n<li><a href=\"https://www.adjust.com/ko/blog/opt-in-design-for-apple-app-tracking-transparency-att-ios14/\">위에 언급된 ATT로인해 UX적으로 고려해야하는 것</a>: 관련은 없는데 재밌어서 기록한다. 역시 UX는 재밌다.</li>\n</ul>\n<h2 id=\"사용자의-action-이력과-가중치를-넘기면-이-사용자의-feature-별-관심도를-뽑아주는-서비스나-모델이-뭐가-있을까\"><a href=\"#사용자의-action-이력과-가중치를-넘기면-이-사용자의-feature-별-관심도를-뽑아주는-서비스나-모델이-뭐가-있을까\" class=\"headerlink\" title=\"사용자의 action 이력과 가중치를 넘기면 이 사용자의 feature 별 관심도를 뽑아주는 서비스나 모델이 뭐가 있을까?\"></a>사용자의 action 이력과 가중치를 넘기면 이 사용자의 feature 별 관심도를 뽑아주는 서비스나 모델이 뭐가 있을까?</h2><h2 id=\"특정-사용자의-feature-별-관심도를-넘기면-그-사용자에게-추천할만한-데이터를-뽑아주는-서비스나-모델이-뭐가-있을까\"><a href=\"#특정-사용자의-feature-별-관심도를-넘기면-그-사용자에게-추천할만한-데이터를-뽑아주는-서비스나-모델이-뭐가-있을까\" class=\"headerlink\" title=\"특정 사용자의 feature 별 관심도를 넘기면 그 사용자에게 추천할만한 데이터를 뽑아주는 서비스나 모델이 뭐가 있을까?\"></a>특정 사용자의 feature 별 관심도를 넘기면 그 사용자에게 추천할만한 데이터를 뽑아주는 서비스나 모델이 뭐가 있을까?</h2>","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"MOTIVATION\"><a href=\"#MOTIVATION\" class=\"headerlink\" title=\"MOTIVATION\"></a>MOTIVATION</h1><p>작년 상반기에 구상하여 하반기에 기획 &amp; 개발하고, 연말에 공모전에 냈던 나의 애증의 사이드 프로젝트 ‘주말엔 엄빠랑 놀자’…<br>퇴근하고 저녁, 주말에만 개발하느라 시간도 부족했는데 또 발등에 불 떨어질 때까지 미루는 바람에 실제로는 한 달안에 우다다 만들어서<br>코드도 못생기고 기능도 허접해서 다시 꺼내보고 싶지 않았는데… 요즘 문득 다시 만들어볼까 생각이 들어서 꺼내봤다.</p>\n<p>기억과 그대로 소스코드는 지저분했지만, 리소스가 아깝기도 하고 작년 하반기 대비 내 실력이 얼마나 늘었는지도 볼 겸 모바일앱으로 전환을 해보기로 마음먹었다.</p>\n<p>그리고 이 꼬질꼬질한 친구를 더 멋드러지게 만들기 위해, 작년에 기획만 하고 우선순위에 밀려 구현되지 못했던 장소 추천 기능을 넣어보려고한다.</p>\n<p>이 포스트에서는 어떻게 추천 서비스를 1.구상하고 2.조사하고 3.이해하고 4.구현했는지 정리할 것이다.</p>\n<h1 id=\"구상하기\"><a href=\"#구상하기\" class=\"headerlink\" title=\"구상하기\"></a>구상하기</h1><h2 id=\"당신과-유사한-사용자가-본-컨텐츠-vs-당신이-관심있었던-컨텐츠와-유사한-컨텐츠\"><a href=\"#당신과-유사한-사용자가-본-컨텐츠-vs-당신이-관심있었던-컨텐츠와-유사한-컨텐츠\" class=\"headerlink\" title=\"당신과 유사한 사용자가 본 컨텐츠 vs 당신이 관심있었던 컨텐츠와 유사한 컨텐츠\"></a>당신과 유사한 사용자가 본 컨텐츠 vs 당신이 관심있었던 컨텐츠와 유사한 컨텐츠</h2><p><strong>사용자 기반의 추천</strong> / <strong>컨텐츠 기반의 추천</strong> 둘 중 어느 방향으로 추천을 구현할까 고민이 있었는데<br>나와 유사한 사용자가 어떤 선택을 내렸는가에 기반하여 추천을 하려면 일단 일정 규모 이상의 사용자 풀이 확보되어야한다는 점이 마음에 걸렸고,</p>\n<ul>\n<li>사용자 풀을 방대하게 늘리고 싶은 욕심이 없고</li>\n<li>소수의 충성스러운 사용자를 확보하고 싶은</li>\n</ul>\n<p>나로서는 <strong>컨텐츠 기반의 추천</strong>을 선택하는 것이 유리하다고 판단했다.</p>\n<p>따라서 일차적으로는 내 컨텐츠의 카테고리를 분류하고, 사용자로부터 선호하는 카테고리를 수집한 것이 작년까지의 작업 내용이다.</p>\n<h2 id=\"그런데-어느-컨텐츠에-관심이-있으셨죠\"><a href=\"#그런데-어느-컨텐츠에-관심이-있으셨죠\" class=\"headerlink\" title=\"그런데 어느 컨텐츠에 관심이 있으셨죠?\"></a>그런데 어느 컨텐츠에 관심이 있으셨죠?</h2><p>위에서 언급했듯이 컨텐츠 기반으로 추천을 하겠다는 결정과 초기 작업은 작년에 이미 해둔 상태이지만, 이번에 좀 더 잘 다듬어보려고 고심하면서 심화 기능을 생각하자니 뭔가 문제가 좀 있었다.<br><img src=\"/images/playwith_preference_draft.png\" alt=\"애증의 사이드 프로젝트\"></p>\n<ul>\n<li>초기에 선택한 카테고리에 대한 흥미도가 시간이 지남에 따라 변함<br>그렇다고 사용자가 스스로 취향이 바뀌었다는 것을 인지하고 -&gt; 정보 설정 화면에 진입해서 -&gt; 카테고리를 다시 고르게 하는 것은 검색창의 필터 기능이랑 다른점이 무엇인지? “추천”이라고 쓰고 “검색”이라고 읽어야하나?</li>\n<li>제한된 카테고리 내에서 선택을 하다보니 세밀한 취향 선택이 어렵고, 당연히 추천에 대한 만족도도 떨어짐<br>그렇다고 카테고리 수를 늘리는 것은 UX 피로도를 높이고 심미성도 떨어지는데…</li>\n</ul>\n<p><strong>요약하자면</strong> 사용자에게 ‘너의 취향을 골라보라’고 카테고리 몇 가지를 제시하고 입력받는 것 만으로는 사용자의 취향을 자세히 알 수가 없다는 점이 걱정되기 시작했다.<br><strong>결론적으로</strong>, 사용자가 서비스 내에서 어떤 행동을 했는지 로깅하고, 해당 로그를 활용하여 사용자가 어떤 정보에 흥미를 느끼는지 파악하는 파이프라인을 마련해야할 필요가 있었다.</p>\n<h2 id=\"그렇다면-어떤-정보를-수집하고-수집된-정보를-어떻게-취향의-근거로-활용할까\"><a href=\"#그렇다면-어떤-정보를-수집하고-수집된-정보를-어떻게-취향의-근거로-활용할까\" class=\"headerlink\" title=\"그렇다면 어떤 정보를 수집하고, 수집된 정보를 어떻게 취향의 근거로 활용할까?\"></a>그렇다면 어떤 정보를 수집하고, 수집된 정보를 어떻게 취향의 근거로 활용할까?</h2><p>인스타 추천알고리즘이나 유튭 추천알고리즘이 어떤 정보를 수집해간다더라 이것저것 들은 이야기는 있지만, 실제로 내부가 어찌 되어있는지 자세히 알 방도도 없을 뿐더러 내 시간과 비용으로 그 정도 구현은 어렵기 때문에 우선은 몇 가지 action에 대한 측정값을 수집하는 정도로만 먼저 데이터를 모아보기로 했다.</p>\n<p>의미가 있다고 판단한 action은 주로 조회나 화면과의 상호작용 정도이다. 한 가지 나름 신경썼다고 생각하는 특이점으로는 서비스 자체가 메인 추천화면 -&gt; 장소 상세화면 -&gt; 장소 상세화면의 세부 정보별 상호작용 (장소 내용 자세히보기, 주변관광지 추천, 지도연동 등등)과 같이 안쪽으로 타고 들어와야만 정보의 질이 높아지는 구조로, 유용한 정보를 얻고자 하는 사용자라면 장소상세 화면 안쪽까지 들어와야만 한다는 점에 착안하여 <strong>화면 depth에 대한 가중치를 부여</strong>하려고한다는 점이다.</p>\n<h2 id=\"취향에-맞는-컨텐츠를-제공하기-위해-선행되어야할-작업은-뭘까-컨텐츠-카테고리를-정확하고-자세하게-정하는-것\"><a href=\"#취향에-맞는-컨텐츠를-제공하기-위해-선행되어야할-작업은-뭘까-컨텐츠-카테고리를-정확하고-자세하게-정하는-것\" class=\"headerlink\" title=\"취향에 맞는 컨텐츠를 제공하기 위해 선행되어야할 작업은 뭘까? 컨텐츠 카테고리를 정확하고 자세하게 정하는 것?\"></a>취향에 맞는 컨텐츠를 제공하기 위해 선행되어야할 작업은 뭘까? 컨텐츠 카테고리를 정확하고 자세하게 정하는 것?</h2><p>작년 버전의 소스에서는 박물관, 미술관 등의 N가지 카테고리를 대분류로 장소 별 특색에 따라 하위의 분류를 얼추 정해놓았다. 관광공사에서 제공하는 api를 사용하는 것도 프로젝트의 큰 목적이었기때문에, 관광공사에서 제공하는 카테고리를 거의 그대로 가져다 썼다.</p>\n<p>이 다중 트리 구조의 카테고리가 내가 만들고자하는 추천 서비스에 적합한 데이터 구조일까? 제공되는 카테고리가 마음에 들지 않는데, 시간과 노력을 들여 좀 더 세밀하게 / 정확하게 트리의 리프 카테고리까지 검수해야할까? (실제로 작년에는 이 검수 작업을 하려고 했었다)<br>약간의 고민 만으로도 이 접근은 잘못되었다는 것을 알 수 있었다. 트리 구조의 자세한 분류 체계는 내가 구현하고자 하는 추천 시스템에서 상대적으로 덜 중요한 작업이다.</p>\n<p>대신 내가 장소의 feature로 고려할 수 있는 항목이 무엇이 있을지 고민하면 되겠다고 판단했다.</p>\n<p><strong>결론적으로</strong>, 나는 제목의 “취향에 맞는 컨텐츠를 제공하기 위해 선행되어야할 작업은 뭘까?”에 대한 답을 “장소에 대한 feature를 정하자”로 내린 것이다.</p>\n<p>내가 타겟이라고 생각했던 유저층의 마음으로 웹서핑을 하며 몇 가지 feature 를 뽑아보니, 원래부터도 카테고리로 사용하고 있던 <strong>현장학습 지식의 분야</strong>(역사/과학/미술 등등) 외에도 <strong>적정 연령대</strong>, <strong>대중교통 가능 여부</strong> 등등 꽤 여러가지 feature가 뽑혔다.</p>\n<h1 id=\"조사하기\"><a href=\"#조사하기\" class=\"headerlink\" title=\"조사하기\"></a>조사하기</h1><h2 id=\"사용자의-action-이력을-수집하는-방법은-뭐가-있을까\"><a href=\"#사용자의-action-이력을-수집하는-방법은-뭐가-있을까\" class=\"headerlink\" title=\"사용자의 action 이력을 수집하는 방법은 뭐가 있을까?\"></a>사용자의 action 이력을 수집하는 방법은 뭐가 있을까?</h2><p>어플리케이션에 Action 로깅을 심는 방법에 대해 이것저것 구글링해봤다. 웹에서는 이전부터 많이 쓰였어서 그런지, 구글링 결과가 아주 방대했고 기획 &amp; 마케팅 초짜인 나는 어떤 서비스를 사용해야할 지 찾기 어려웠다. 결국엔 그냥 여러 아티클과 블로그를 둘러보며 감이라도 잡는 수 밖에 없었다 😅</p>\n<ul>\n<li><a href=\"https://medium.com/daria-blog/mlops-%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%BC%EA%B9%8C-7ba8d9aae221\">MLOps란 무엇일까?</a>: 와! 요즘 블로그에서 많이 보이는 복붙된 지식이 준초콜릿 같은거라면 이런 고디바 같은 글도 있다 ㅠㅠ 감격</li>\n<li><a href=\"https://brunch.co.kr/@userhabit/52\">행동 데이터 분석가를 위한 안내서 - 나(또는 우리 회사)에 맞는 애널리틱스 선택하기</a> : 결론은 광고글인 것 같긴한데, 어떤 솔루션이 유명한지조차 모르는 나에게는 도움이 되었다</li>\n<li><a href=\"https://www.itworld.co.kr/news/191844\">Apple의 앱 추적 투명성 정책</a> : 어우 언제부턴가 추적을 허용하겠냐는 팝업이 떠서 당연히 매번 거부했는데 ㅎㅎ 정책이었다니! 너무 무지했던 것 같다;</li>\n<li><a href=\"https://www.adjust.com/ko/blog/opt-in-design-for-apple-app-tracking-transparency-att-ios14/\">위에 언급된 ATT로인해 UX적으로 고려해야하는 것</a>: 관련은 없는데 재밌어서 기록한다. 역시 UX는 재밌다.</li>\n</ul>\n<h2 id=\"사용자의-action-이력과-가중치를-넘기면-이-사용자의-feature-별-관심도를-뽑아주는-서비스나-모델이-뭐가-있을까\"><a href=\"#사용자의-action-이력과-가중치를-넘기면-이-사용자의-feature-별-관심도를-뽑아주는-서비스나-모델이-뭐가-있을까\" class=\"headerlink\" title=\"사용자의 action 이력과 가중치를 넘기면 이 사용자의 feature 별 관심도를 뽑아주는 서비스나 모델이 뭐가 있을까?\"></a>사용자의 action 이력과 가중치를 넘기면 이 사용자의 feature 별 관심도를 뽑아주는 서비스나 모델이 뭐가 있을까?</h2><h2 id=\"특정-사용자의-feature-별-관심도를-넘기면-그-사용자에게-추천할만한-데이터를-뽑아주는-서비스나-모델이-뭐가-있을까\"><a href=\"#특정-사용자의-feature-별-관심도를-넘기면-그-사용자에게-추천할만한-데이터를-뽑아주는-서비스나-모델이-뭐가-있을까\" class=\"headerlink\" title=\"특정 사용자의 feature 별 관심도를 넘기면 그 사용자에게 추천할만한 데이터를 뽑아주는 서비스나 모델이 뭐가 있을까?\"></a>특정 사용자의 feature 별 관심도를 넘기면 그 사용자에게 추천할만한 데이터를 뽑아주는 서비스나 모델이 뭐가 있을까?</h2>","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/playwith_preference_draft.png","popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:04:26 GMT+0900 (대한민국 표준시)","title":"[주말엔 엄빠랑 놀자] 멍청한 내 사이드 프로젝트에 MLOps 적용하기","path":"2022/03/06/Tech/AI_MLOps/ai-csp/","eyeCatchImage":"/images/playwith_preference_draft.png","excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-03-06T11:28:59.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-03-06T11:28:59.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Tech > MLOps","tags":["MLOps","AI","Cloud"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"javscript OCR 라이브러리로 제품정보 인식하기","date":"2022-05-22T11:28:59.000Z","_content":"\n# AWS Textract\n\n처음에는 AWS Textract를 사용하려고 하였으나... 지원 언어에 한국어가 아직 없는 관계로 패스\n\n# Javascript OCR 라이브러리들\n\n직접 구현하기로 마음을 먹고 javascript OCR 라이브러리를 찾아보니 생각보다 굉장히 많았다.\nhttps://openbase.com/categories/js/best-nodejs-ocr-libraries\n1위인 Tesseract를 선택했다.\n\n# input으로 어떤 이미지가 들어올까?\n\n일반 사용자에게 \"제품 모델명을 촬영해달라\"고 한다면 어느 부분을 찍을지 생각해봤다.\n얼마 고민해보지 않아도 제품 어딘가에 모델명이 쓰여있는 경우를 모두 고려해야한다는 결론이 났다.\n\n- 단순 텍스트\n- 행과 열이 선으로 구분된 테이블 형태의 상세정보\n- 행과 열이 선으로 구분되지 않은 테이블 형태의 상세정보\n\n가이드 문서에서 제공되는 아래의 기본 코드로 위의 세가지 케이스를 각각 인식해본 결과...\n\n```jsx\nconst worker = createWorker({\n  logger: (m) => console.log(m),\n});\n\nconst recognize = (file: File) => {\n  (async () => {\n    await worker.load();\n    await worker.loadLanguage(\"kor+eng\");\n    await worker.initialize(\"kor+eng\");\n    const {\n      data: { text },\n    } = await worker.recognize(file);\n    setResult(text);\n    await worker.terminate();\n  })();\n};\n```\n\n![인식결과_1](/images/ocr_result_1.png)\n나~~~~름 뭔가가 인식되는 것을 볼 수 있었다. 나름... 하지만 제품정보를 \"인식\"했다고 하기에는 정확도가 민망할 정도로 낮아서, 보완할 포인트를 정리해봤다.\n\n- 먼지가 글자로 인식되어, 먼지가 많은 사진을 인식하는 데에 수 분이 소요된다\n  - 의도한 것은 아니나, 단순 텍스트 인식을 위해 촬영한 이미지 (공유기)에 먼지가 많아서 이걸 다 글자로 인식하는 바람에 정확도 0% 처리 시간 N분이라는 결과가... 나왔다\n- input 사진의 size가 불필요하게 크다\n- 글자와 배경만 구분하면 될텐데... 이미지가 컬러일 필요가 없어보인다\n- 글자가 있는 영역 외의 Object는 인식에서 제외할 필요가 있어보인다\n- 테이블 형식의 input 데이터는 사실 행-열 조합 만으로 매우 큰 정보를 제공하는데, 인식 결과에서는 그 내용을 활용하지 못한다\n\n도출된 보완점 중 **먼지** 문제와 **input size** 문제, **grayscale** 문제는 쉽게 해결 가능해보이고,\n**Object** 문제와 **Table** 문제는 detection 관련해서 좀 더 찾아볼 필요가 있어보였다.\n\n아무튼. 쓸만하게 만들기 위해서는 전처리가 필요하다.\n\n구글링해보니 인식률을 높이는 방법으로 몇 가지 전처리가 추천되고 있다. 다들 비슷하게 생각하고 있다 ㅋㅋㅋ 재밌음\nhttps://stackoverflow.com/questions/9480013/image-processing-to-improve-tesseract-ocr-accuracy\n\n# 전처리를 추가하자\n\n## openCV.js를 붙여보자\n\njavascript에서 영상처리를 하는 방법에 대해 열심히 구글링했지만... 쉽지 않았다. cdn을 통해서나 js를 받아 직접 script를 붙여서 사용하도록 가이드하는 오픈소스는 종종 보였으나 npm 라이브러리는 쓸만한게 없었다. 아쉬운대로 openCV.js를 받아서 써보기로 했다.\n\n1. https://docs.opencv.org/3.4/d0/d84/tutorial_js_usage.html 를 참고해서 4.5.5버전의 openCV.zip를 다운로드한다.\n\n2. zip 폴더를 풀어 public 폴더에 넣고, 폴더명은 openCV_4.5.5로 변경했다. 그리고 index.html에 아래와 같이 js를 붙여준다. js가 로드된 이후 부터는 글로벌하게 선언된 `cv` 변수를 이용해서 openCV를 사용할 수 있다.\n\n```html\n<script\n  src=\"openCV_4.5.5/opencv.js\"\n  onload=\"onOpenCvReady();\"\n  type=\"text/javascript\"\n></script>\n```\n\n## 이미지를 흑백으로 변환하자\n\nhttps://docs.opencv.org/3.4/db/d64/tutorial_js_colorspaces.html\n\n```javascript\nlet src = cv.imread(\"canvasInput\");\nlet dst = new cv.Mat();\ncv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY, 0);\n```\n","source":"_posts/Tech/AI_MLOps/ocr.md","raw":"---\ntitle: \"javscript OCR 라이브러리로 제품정보 인식하기\"\ndate: 2022-05-22 20:28:59\ncategories: [Tech, OCR]\ntags: [AI, javascript]\n---\n\n# AWS Textract\n\n처음에는 AWS Textract를 사용하려고 하였으나... 지원 언어에 한국어가 아직 없는 관계로 패스\n\n# Javascript OCR 라이브러리들\n\n직접 구현하기로 마음을 먹고 javascript OCR 라이브러리를 찾아보니 생각보다 굉장히 많았다.\nhttps://openbase.com/categories/js/best-nodejs-ocr-libraries\n1위인 Tesseract를 선택했다.\n\n# input으로 어떤 이미지가 들어올까?\n\n일반 사용자에게 \"제품 모델명을 촬영해달라\"고 한다면 어느 부분을 찍을지 생각해봤다.\n얼마 고민해보지 않아도 제품 어딘가에 모델명이 쓰여있는 경우를 모두 고려해야한다는 결론이 났다.\n\n- 단순 텍스트\n- 행과 열이 선으로 구분된 테이블 형태의 상세정보\n- 행과 열이 선으로 구분되지 않은 테이블 형태의 상세정보\n\n가이드 문서에서 제공되는 아래의 기본 코드로 위의 세가지 케이스를 각각 인식해본 결과...\n\n```jsx\nconst worker = createWorker({\n  logger: (m) => console.log(m),\n});\n\nconst recognize = (file: File) => {\n  (async () => {\n    await worker.load();\n    await worker.loadLanguage(\"kor+eng\");\n    await worker.initialize(\"kor+eng\");\n    const {\n      data: { text },\n    } = await worker.recognize(file);\n    setResult(text);\n    await worker.terminate();\n  })();\n};\n```\n\n![인식결과_1](/images/ocr_result_1.png)\n나~~~~름 뭔가가 인식되는 것을 볼 수 있었다. 나름... 하지만 제품정보를 \"인식\"했다고 하기에는 정확도가 민망할 정도로 낮아서, 보완할 포인트를 정리해봤다.\n\n- 먼지가 글자로 인식되어, 먼지가 많은 사진을 인식하는 데에 수 분이 소요된다\n  - 의도한 것은 아니나, 단순 텍스트 인식을 위해 촬영한 이미지 (공유기)에 먼지가 많아서 이걸 다 글자로 인식하는 바람에 정확도 0% 처리 시간 N분이라는 결과가... 나왔다\n- input 사진의 size가 불필요하게 크다\n- 글자와 배경만 구분하면 될텐데... 이미지가 컬러일 필요가 없어보인다\n- 글자가 있는 영역 외의 Object는 인식에서 제외할 필요가 있어보인다\n- 테이블 형식의 input 데이터는 사실 행-열 조합 만으로 매우 큰 정보를 제공하는데, 인식 결과에서는 그 내용을 활용하지 못한다\n\n도출된 보완점 중 **먼지** 문제와 **input size** 문제, **grayscale** 문제는 쉽게 해결 가능해보이고,\n**Object** 문제와 **Table** 문제는 detection 관련해서 좀 더 찾아볼 필요가 있어보였다.\n\n아무튼. 쓸만하게 만들기 위해서는 전처리가 필요하다.\n\n구글링해보니 인식률을 높이는 방법으로 몇 가지 전처리가 추천되고 있다. 다들 비슷하게 생각하고 있다 ㅋㅋㅋ 재밌음\nhttps://stackoverflow.com/questions/9480013/image-processing-to-improve-tesseract-ocr-accuracy\n\n# 전처리를 추가하자\n\n## openCV.js를 붙여보자\n\njavascript에서 영상처리를 하는 방법에 대해 열심히 구글링했지만... 쉽지 않았다. cdn을 통해서나 js를 받아 직접 script를 붙여서 사용하도록 가이드하는 오픈소스는 종종 보였으나 npm 라이브러리는 쓸만한게 없었다. 아쉬운대로 openCV.js를 받아서 써보기로 했다.\n\n1. https://docs.opencv.org/3.4/d0/d84/tutorial_js_usage.html 를 참고해서 4.5.5버전의 openCV.zip를 다운로드한다.\n\n2. zip 폴더를 풀어 public 폴더에 넣고, 폴더명은 openCV_4.5.5로 변경했다. 그리고 index.html에 아래와 같이 js를 붙여준다. js가 로드된 이후 부터는 글로벌하게 선언된 `cv` 변수를 이용해서 openCV를 사용할 수 있다.\n\n```html\n<script\n  src=\"openCV_4.5.5/opencv.js\"\n  onload=\"onOpenCvReady();\"\n  type=\"text/javascript\"\n></script>\n```\n\n## 이미지를 흑백으로 변환하자\n\nhttps://docs.opencv.org/3.4/db/d64/tutorial_js_colorspaces.html\n\n```javascript\nlet src = cv.imread(\"canvasInput\");\nlet dst = new cv.Mat();\ncv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY, 0);\n```\n","slug":"Tech/AI_MLOps/ocr","published":1,"updated":"2023-01-22T14:04:32.039Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2ry000wtqwe1v4lccr4","content":"<h1 id=\"AWS-Textract\"><a href=\"#AWS-Textract\" class=\"headerlink\" title=\"AWS Textract\"></a>AWS Textract</h1><p>처음에는 AWS Textract를 사용하려고 하였으나… 지원 언어에 한국어가 아직 없는 관계로 패스</p>\n<h1 id=\"Javascript-OCR-라이브러리들\"><a href=\"#Javascript-OCR-라이브러리들\" class=\"headerlink\" title=\"Javascript OCR 라이브러리들\"></a>Javascript OCR 라이브러리들</h1><p>직접 구현하기로 마음을 먹고 javascript OCR 라이브러리를 찾아보니 생각보다 굉장히 많았다.<br><a href=\"https://openbase.com/categories/js/best-nodejs-ocr-libraries\">https://openbase.com/categories/js/best-nodejs-ocr-libraries</a><br>1위인 Tesseract를 선택했다.</p>\n<h1 id=\"input으로-어떤-이미지가-들어올까\"><a href=\"#input으로-어떤-이미지가-들어올까\" class=\"headerlink\" title=\"input으로 어떤 이미지가 들어올까?\"></a>input으로 어떤 이미지가 들어올까?</h1><p>일반 사용자에게 “제품 모델명을 촬영해달라”고 한다면 어느 부분을 찍을지 생각해봤다.<br>얼마 고민해보지 않아도 제품 어딘가에 모델명이 쓰여있는 경우를 모두 고려해야한다는 결론이 났다.</p>\n<ul>\n<li>단순 텍스트</li>\n<li>행과 열이 선으로 구분된 테이블 형태의 상세정보</li>\n<li>행과 열이 선으로 구분되지 않은 테이블 형태의 상세정보</li>\n</ul>\n<p>가이드 문서에서 제공되는 아래의 기본 코드로 위의 세가지 케이스를 각각 인식해본 결과…</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> worker = <span class=\"title function_\">createWorker</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">logger</span>: <span class=\"function\">(<span class=\"params\">m</span>) =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(m),</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">recognize</span> = (<span class=\"params\">file: File</span>) =&gt; &#123;</span><br><span class=\"line\">  (<span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> worker.<span class=\"title function_\">load</span>();</span><br><span class=\"line\">    <span class=\"keyword\">await</span> worker.<span class=\"title function_\">loadLanguage</span>(<span class=\"string\">&quot;kor+eng&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> worker.<span class=\"title function_\">initialize</span>(<span class=\"string\">&quot;kor+eng&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">data</span>: &#123; text &#125;,</span><br><span class=\"line\">    &#125; = <span class=\"keyword\">await</span> worker.<span class=\"title function_\">recognize</span>(file);</span><br><span class=\"line\">    <span class=\"title function_\">setResult</span>(text);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> worker.<span class=\"title function_\">terminate</span>();</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/ocr_result_1.png\" alt=\"인식결과_1\"><br>나~~~~름 뭔가가 인식되는 것을 볼 수 있었다. 나름… 하지만 제품정보를 “인식”했다고 하기에는 정확도가 민망할 정도로 낮아서, 보완할 포인트를 정리해봤다.</p>\n<ul>\n<li>먼지가 글자로 인식되어, 먼지가 많은 사진을 인식하는 데에 수 분이 소요된다<ul>\n<li>의도한 것은 아니나, 단순 텍스트 인식을 위해 촬영한 이미지 (공유기)에 먼지가 많아서 이걸 다 글자로 인식하는 바람에 정확도 0% 처리 시간 N분이라는 결과가… 나왔다</li>\n</ul>\n</li>\n<li>input 사진의 size가 불필요하게 크다</li>\n<li>글자와 배경만 구분하면 될텐데… 이미지가 컬러일 필요가 없어보인다</li>\n<li>글자가 있는 영역 외의 Object는 인식에서 제외할 필요가 있어보인다</li>\n<li>테이블 형식의 input 데이터는 사실 행-열 조합 만으로 매우 큰 정보를 제공하는데, 인식 결과에서는 그 내용을 활용하지 못한다</li>\n</ul>\n<p>도출된 보완점 중 <strong>먼지</strong> 문제와 <strong>input size</strong> 문제, <strong>grayscale</strong> 문제는 쉽게 해결 가능해보이고,<br><strong>Object</strong> 문제와 <strong>Table</strong> 문제는 detection 관련해서 좀 더 찾아볼 필요가 있어보였다.</p>\n<p>아무튼. 쓸만하게 만들기 위해서는 전처리가 필요하다.</p>\n<p>구글링해보니 인식률을 높이는 방법으로 몇 가지 전처리가 추천되고 있다. 다들 비슷하게 생각하고 있다 ㅋㅋㅋ 재밌음<br><a href=\"https://stackoverflow.com/questions/9480013/image-processing-to-improve-tesseract-ocr-accuracy\">https://stackoverflow.com/questions/9480013/image-processing-to-improve-tesseract-ocr-accuracy</a></p>\n<h1 id=\"전처리를-추가하자\"><a href=\"#전처리를-추가하자\" class=\"headerlink\" title=\"전처리를 추가하자\"></a>전처리를 추가하자</h1><h2 id=\"openCV-js를-붙여보자\"><a href=\"#openCV-js를-붙여보자\" class=\"headerlink\" title=\"openCV.js를 붙여보자\"></a>openCV.js를 붙여보자</h2><p>javascript에서 영상처리를 하는 방법에 대해 열심히 구글링했지만… 쉽지 않았다. cdn을 통해서나 js를 받아 직접 script를 붙여서 사용하도록 가이드하는 오픈소스는 종종 보였으나 npm 라이브러리는 쓸만한게 없었다. 아쉬운대로 openCV.js를 받아서 써보기로 했다.</p>\n<ol>\n<li><p><a href=\"https://docs.opencv.org/3.4/d0/d84/tutorial_js_usage.html\">https://docs.opencv.org/3.4/d0/d84/tutorial_js_usage.html</a> 를 참고해서 4.5.5버전의 openCV.zip를 다운로드한다.</p>\n</li>\n<li><p>zip 폴더를 풀어 public 폴더에 넣고, 폴더명은 openCV_4.5.5로 변경했다. 그리고 index.html에 아래와 같이 js를 붙여준다. js가 로드된 이후 부터는 글로벌하게 선언된 <code>cv</code> 변수를 이용해서 openCV를 사용할 수 있다.</p>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">src</span>=<span class=\"string\">&quot;openCV_4.5.5/opencv.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">onload</span>=<span class=\"string\">&quot;onOpenCvReady();&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"이미지를-흑백으로-변환하자\"><a href=\"#이미지를-흑백으로-변환하자\" class=\"headerlink\" title=\"이미지를 흑백으로 변환하자\"></a>이미지를 흑백으로 변환하자</h2><p><a href=\"https://docs.opencv.org/3.4/db/d64/tutorial_js_colorspaces.html\">https://docs.opencv.org/3.4/db/d64/tutorial_js_colorspaces.html</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> src = cv.<span class=\"title function_\">imread</span>(<span class=\"string\">&quot;canvasInput&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> dst = <span class=\"keyword\">new</span> cv.<span class=\"title class_\">Mat</span>();</span><br><span class=\"line\">cv.<span class=\"title function_\">cvtColor</span>(src, dst, cv.<span class=\"property\">COLOR_RGBA2GRAY</span>, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"AWS-Textract\"><a href=\"#AWS-Textract\" class=\"headerlink\" title=\"AWS Textract\"></a>AWS Textract</h1><p>처음에는 AWS Textract를 사용하려고 하였으나… 지원 언어에 한국어가 아직 없는 관계로 패스</p>\n<h1 id=\"Javascript-OCR-라이브러리들\"><a href=\"#Javascript-OCR-라이브러리들\" class=\"headerlink\" title=\"Javascript OCR 라이브러리들\"></a>Javascript OCR 라이브러리들</h1><p>직접 구현하기로 마음을 먹고 javascript OCR 라이브러리를 찾아보니 생각보다 굉장히 많았다.<br><a href=\"https://openbase.com/categories/js/best-nodejs-ocr-libraries\">https://openbase.com/categories/js/best-nodejs-ocr-libraries</a><br>1위인 Tesseract를 선택했다.</p>\n<h1 id=\"input으로-어떤-이미지가-들어올까\"><a href=\"#input으로-어떤-이미지가-들어올까\" class=\"headerlink\" title=\"input으로 어떤 이미지가 들어올까?\"></a>input으로 어떤 이미지가 들어올까?</h1><p>일반 사용자에게 “제품 모델명을 촬영해달라”고 한다면 어느 부분을 찍을지 생각해봤다.<br>얼마 고민해보지 않아도 제품 어딘가에 모델명이 쓰여있는 경우를 모두 고려해야한다는 결론이 났다.</p>\n<ul>\n<li>단순 텍스트</li>\n<li>행과 열이 선으로 구분된 테이블 형태의 상세정보</li>\n<li>행과 열이 선으로 구분되지 않은 테이블 형태의 상세정보</li>\n</ul>\n<p>가이드 문서에서 제공되는 아래의 기본 코드로 위의 세가지 케이스를 각각 인식해본 결과…</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> worker = <span class=\"title function_\">createWorker</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">logger</span>: <span class=\"function\">(<span class=\"params\">m</span>) =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(m),</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">recognize</span> = (<span class=\"params\">file: File</span>) =&gt; &#123;</span><br><span class=\"line\">  (<span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">await</span> worker.<span class=\"title function_\">load</span>();</span><br><span class=\"line\">    <span class=\"keyword\">await</span> worker.<span class=\"title function_\">loadLanguage</span>(<span class=\"string\">&quot;kor+eng&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> worker.<span class=\"title function_\">initialize</span>(<span class=\"string\">&quot;kor+eng&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">      <span class=\"attr\">data</span>: &#123; text &#125;,</span><br><span class=\"line\">    &#125; = <span class=\"keyword\">await</span> worker.<span class=\"title function_\">recognize</span>(file);</span><br><span class=\"line\">    <span class=\"title function_\">setResult</span>(text);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> worker.<span class=\"title function_\">terminate</span>();</span><br><span class=\"line\">  &#125;)();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/images/ocr_result_1.png\" alt=\"인식결과_1\"><br>나~~~~름 뭔가가 인식되는 것을 볼 수 있었다. 나름… 하지만 제품정보를 “인식”했다고 하기에는 정확도가 민망할 정도로 낮아서, 보완할 포인트를 정리해봤다.</p>\n<ul>\n<li>먼지가 글자로 인식되어, 먼지가 많은 사진을 인식하는 데에 수 분이 소요된다<ul>\n<li>의도한 것은 아니나, 단순 텍스트 인식을 위해 촬영한 이미지 (공유기)에 먼지가 많아서 이걸 다 글자로 인식하는 바람에 정확도 0% 처리 시간 N분이라는 결과가… 나왔다</li>\n</ul>\n</li>\n<li>input 사진의 size가 불필요하게 크다</li>\n<li>글자와 배경만 구분하면 될텐데… 이미지가 컬러일 필요가 없어보인다</li>\n<li>글자가 있는 영역 외의 Object는 인식에서 제외할 필요가 있어보인다</li>\n<li>테이블 형식의 input 데이터는 사실 행-열 조합 만으로 매우 큰 정보를 제공하는데, 인식 결과에서는 그 내용을 활용하지 못한다</li>\n</ul>\n<p>도출된 보완점 중 <strong>먼지</strong> 문제와 <strong>input size</strong> 문제, <strong>grayscale</strong> 문제는 쉽게 해결 가능해보이고,<br><strong>Object</strong> 문제와 <strong>Table</strong> 문제는 detection 관련해서 좀 더 찾아볼 필요가 있어보였다.</p>\n<p>아무튼. 쓸만하게 만들기 위해서는 전처리가 필요하다.</p>\n<p>구글링해보니 인식률을 높이는 방법으로 몇 가지 전처리가 추천되고 있다. 다들 비슷하게 생각하고 있다 ㅋㅋㅋ 재밌음<br><a href=\"https://stackoverflow.com/questions/9480013/image-processing-to-improve-tesseract-ocr-accuracy\">https://stackoverflow.com/questions/9480013/image-processing-to-improve-tesseract-ocr-accuracy</a></p>\n<h1 id=\"전처리를-추가하자\"><a href=\"#전처리를-추가하자\" class=\"headerlink\" title=\"전처리를 추가하자\"></a>전처리를 추가하자</h1><h2 id=\"openCV-js를-붙여보자\"><a href=\"#openCV-js를-붙여보자\" class=\"headerlink\" title=\"openCV.js를 붙여보자\"></a>openCV.js를 붙여보자</h2><p>javascript에서 영상처리를 하는 방법에 대해 열심히 구글링했지만… 쉽지 않았다. cdn을 통해서나 js를 받아 직접 script를 붙여서 사용하도록 가이드하는 오픈소스는 종종 보였으나 npm 라이브러리는 쓸만한게 없었다. 아쉬운대로 openCV.js를 받아서 써보기로 했다.</p>\n<ol>\n<li><p><a href=\"https://docs.opencv.org/3.4/d0/d84/tutorial_js_usage.html\">https://docs.opencv.org/3.4/d0/d84/tutorial_js_usage.html</a> 를 참고해서 4.5.5버전의 openCV.zip를 다운로드한다.</p>\n</li>\n<li><p>zip 폴더를 풀어 public 폴더에 넣고, 폴더명은 openCV_4.5.5로 변경했다. 그리고 index.html에 아래와 같이 js를 붙여준다. js가 로드된 이후 부터는 글로벌하게 선언된 <code>cv</code> 변수를 이용해서 openCV를 사용할 수 있다.</p>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">src</span>=<span class=\"string\">&quot;openCV_4.5.5/opencv.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">onload</span>=<span class=\"string\">&quot;onOpenCvReady();&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"이미지를-흑백으로-변환하자\"><a href=\"#이미지를-흑백으로-변환하자\" class=\"headerlink\" title=\"이미지를 흑백으로 변환하자\"></a>이미지를 흑백으로 변환하자</h2><p><a href=\"https://docs.opencv.org/3.4/db/d64/tutorial_js_colorspaces.html\">https://docs.opencv.org/3.4/db/d64/tutorial_js_colorspaces.html</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> src = cv.<span class=\"title function_\">imread</span>(<span class=\"string\">&quot;canvasInput&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">let</span> dst = <span class=\"keyword\">new</span> cv.<span class=\"title class_\">Mat</span>();</span><br><span class=\"line\">cv.<span class=\"title function_\">cvtColor</span>(src, dst, cv.<span class=\"property\">COLOR_RGBA2GRAY</span>, <span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/ocr_result_1.png","popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:04:32 GMT+0900 (대한민국 표준시)","title":"javscript OCR 라이브러리로 제품정보 인식하기","path":"2022/05/22/Tech/AI_MLOps/ocr/","eyeCatchImage":"/images/ocr_result_1.png","excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-05-22T11:28:59.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-05-22T11:28:59.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Tech > OCR","tags":["AI","javascript"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[React Native] iOS 에서만 특정 도메인의 이미지 uri가 보이지 않을 때","date":"2022-04-08T13:28:41.000Z","_content":"\n# WIP: iOS 에서만 특정 도메인의 이미지 uri가 보이지 않을 때\n\n현상은 다음과 같다. 예를 들어 특정 도메인이 *https://some.url* 이라고 하면\n\n- AOS에서는 *https://some.url* 로 uri 지정한 Image 컴포넌트가 아주 잘 보인다.\n- iOS에서는 완전히 동일한 React Native 소스인데 *https://some.url*를 바라보고 있는 Image 컴포넌트가 안그려진다.\n- iOS에서 사파리로 *https://some.url* 접근시에는 잘보인다.\n- iOS에서 다른 도메인 이미지로 Image 컴포넌트를 그려보면 잘 보인다.\n\n네트워크 적으로 뭔가 막힌거같은데... 아직 못찾았다 ㅠㅠ\n","source":"_posts/Tech/ReactNative/RN-ios-image-not-showing.md","raw":"---\ntitle: \"[React Native] iOS 에서만 특정 도메인의 이미지 uri가 보이지 않을 때\"\ndate: 2022-04-08 22:28:41\ncategories: [Tech, React Native]\ntags: [React Native]\n---\n\n# WIP: iOS 에서만 특정 도메인의 이미지 uri가 보이지 않을 때\n\n현상은 다음과 같다. 예를 들어 특정 도메인이 *https://some.url* 이라고 하면\n\n- AOS에서는 *https://some.url* 로 uri 지정한 Image 컴포넌트가 아주 잘 보인다.\n- iOS에서는 완전히 동일한 React Native 소스인데 *https://some.url*를 바라보고 있는 Image 컴포넌트가 안그려진다.\n- iOS에서 사파리로 *https://some.url* 접근시에는 잘보인다.\n- iOS에서 다른 도메인 이미지로 Image 컴포넌트를 그려보면 잘 보인다.\n\n네트워크 적으로 뭔가 막힌거같은데... 아직 못찾았다 ㅠㅠ\n","slug":"Tech/ReactNative/RN-ios-image-not-showing","published":1,"updated":"2023-01-22T14:04:58.954Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2rz0010tqwehhjubhtn","content":"<h1 id=\"WIP-iOS-에서만-특정-도메인의-이미지-uri가-보이지-않을-때\"><a href=\"#WIP-iOS-에서만-특정-도메인의-이미지-uri가-보이지-않을-때\" class=\"headerlink\" title=\"WIP: iOS 에서만 특정 도메인의 이미지 uri가 보이지 않을 때\"></a>WIP: iOS 에서만 특정 도메인의 이미지 uri가 보이지 않을 때</h1><p>현상은 다음과 같다. 예를 들어 특정 도메인이 <em><a href=\"https://some.url/\">https://some.url</a></em> 이라고 하면</p>\n<ul>\n<li>AOS에서는 <em><a href=\"https://some.url/\">https://some.url</a></em> 로 uri 지정한 Image 컴포넌트가 아주 잘 보인다.</li>\n<li>iOS에서는 완전히 동일한 React Native 소스인데 <em><a href=\"https://some.url/\">https://some.url</a></em>를 바라보고 있는 Image 컴포넌트가 안그려진다.</li>\n<li>iOS에서 사파리로 <em><a href=\"https://some.url/\">https://some.url</a></em> 접근시에는 잘보인다.</li>\n<li>iOS에서 다른 도메인 이미지로 Image 컴포넌트를 그려보면 잘 보인다.</li>\n</ul>\n<p>네트워크 적으로 뭔가 막힌거같은데… 아직 못찾았다 ㅠㅠ</p>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"WIP-iOS-에서만-특정-도메인의-이미지-uri가-보이지-않을-때\"><a href=\"#WIP-iOS-에서만-특정-도메인의-이미지-uri가-보이지-않을-때\" class=\"headerlink\" title=\"WIP: iOS 에서만 특정 도메인의 이미지 uri가 보이지 않을 때\"></a>WIP: iOS 에서만 특정 도메인의 이미지 uri가 보이지 않을 때</h1><p>현상은 다음과 같다. 예를 들어 특정 도메인이 <em><a href=\"https://some.url/\">https://some.url</a></em> 이라고 하면</p>\n<ul>\n<li>AOS에서는 <em><a href=\"https://some.url/\">https://some.url</a></em> 로 uri 지정한 Image 컴포넌트가 아주 잘 보인다.</li>\n<li>iOS에서는 완전히 동일한 React Native 소스인데 <em><a href=\"https://some.url/\">https://some.url</a></em>를 바라보고 있는 Image 컴포넌트가 안그려진다.</li>\n<li>iOS에서 사파리로 <em><a href=\"https://some.url/\">https://some.url</a></em> 접근시에는 잘보인다.</li>\n<li>iOS에서 다른 도메인 이미지로 Image 컴포넌트를 그려보면 잘 보인다.</li>\n</ul>\n<p>네트워크 적으로 뭔가 막힌거같은데… 아직 못찾았다 ㅠㅠ</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:04:58 GMT+0900 (대한민국 표준시)","title":"[React Native] iOS 에서만 특정 도메인의 이미지 uri가 보이지 않을 때","path":"2022/04/08/Tech/ReactNative/RN-ios-image-not-showing/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-04-08T13:28:41.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-04-08T13:28:41.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Tech > React Native","tags":["React Native"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[React Native] 여러 개의 자식 요소를 가운데 정렬하고 싶을 때","date":"2022-04-08T13:28:41.000Z","_content":"\n# 여러 개의 자식 요소를 가운데 정렬하고 싶을 때\n\n```jsx\nexport const styles = StyleSheet.create({\n  vertical: {\n    justifyContent: \"center\", //자식 요소가 horizontally 가운데 정렬된다.\n    alignItems: \"center\", //자식 요소가 vertically 가운데 정렬된다.\n  },\n});\n```\n","source":"_posts/Tech/ReactNative/RN-publishing-align-center.md","raw":"---\ntitle: \"[React Native] 여러 개의 자식 요소를 가운데 정렬하고 싶을 때\"\ndate: 2022-04-08 22:28:41\ncategories: [Tech, React Native]\ntags: [React Native]\n---\n\n# 여러 개의 자식 요소를 가운데 정렬하고 싶을 때\n\n```jsx\nexport const styles = StyleSheet.create({\n  vertical: {\n    justifyContent: \"center\", //자식 요소가 horizontally 가운데 정렬된다.\n    alignItems: \"center\", //자식 요소가 vertically 가운데 정렬된다.\n  },\n});\n```\n","slug":"Tech/ReactNative/RN-publishing-align-center","published":1,"updated":"2023-01-22T14:05:03.466Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2rz0012tqweg9tag982","content":"<h1 id=\"여러-개의-자식-요소를-가운데-정렬하고-싶을-때\"><a href=\"#여러-개의-자식-요소를-가운데-정렬하고-싶을-때\" class=\"headerlink\" title=\"여러 개의 자식 요소를 가운데 정렬하고 싶을 때\"></a>여러 개의 자식 요소를 가운데 정렬하고 싶을 때</h1><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> styles = <span class=\"title class_\">StyleSheet</span>.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">vertical</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">justifyContent</span>: <span class=\"string\">&quot;center&quot;</span>, <span class=\"comment\">//자식 요소가 horizontally 가운데 정렬된다.</span></span><br><span class=\"line\">    <span class=\"attr\">alignItems</span>: <span class=\"string\">&quot;center&quot;</span>, <span class=\"comment\">//자식 요소가 vertically 가운데 정렬된다.</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"여러-개의-자식-요소를-가운데-정렬하고-싶을-때\"><a href=\"#여러-개의-자식-요소를-가운데-정렬하고-싶을-때\" class=\"headerlink\" title=\"여러 개의 자식 요소를 가운데 정렬하고 싶을 때\"></a>여러 개의 자식 요소를 가운데 정렬하고 싶을 때</h1><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> styles = <span class=\"title class_\">StyleSheet</span>.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">vertical</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">justifyContent</span>: <span class=\"string\">&quot;center&quot;</span>, <span class=\"comment\">//자식 요소가 horizontally 가운데 정렬된다.</span></span><br><span class=\"line\">    <span class=\"attr\">alignItems</span>: <span class=\"string\">&quot;center&quot;</span>, <span class=\"comment\">//자식 요소가 vertically 가운데 정렬된다.</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:05:03 GMT+0900 (대한민국 표준시)","title":"[React Native] 여러 개의 자식 요소를 가운데 정렬하고 싶을 때","path":"2022/04/08/Tech/ReactNative/RN-publishing-align-center/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-04-08T13:28:41.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-04-08T13:28:41.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Tech > React Native","tags":["React Native"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[React Native] 플랫폼별로 디자인을 달리 하고 싶을 때","date":"2022-04-08T13:28:41.000Z","_content":"\n# 플랫폼별로 디자인을 달리 하고 싶을 때\n\n`react-native` 패키지의 `Platform` 모듈을 사용하자\n\n```jsx\nexport const styles = StyleSheet.create({\n  pagination_wrapper: {\n    position: \"absolute\",\n    left: width / 2 - 100,\n    ...Platform.select({\n      ios: {\n        top: height + 70,\n      },\n      android: {\n        top: height + 75,\n      },\n    }),\n  },\n});\n```\n","source":"_posts/Tech/ReactNative/RN-publishing-branch-os.md","raw":"---\ntitle: \"[React Native] 플랫폼별로 디자인을 달리 하고 싶을 때\"\ndate: 2022-04-08 22:28:41\ncategories: [Tech, React Native]\ntags: [React Native]\n---\n\n# 플랫폼별로 디자인을 달리 하고 싶을 때\n\n`react-native` 패키지의 `Platform` 모듈을 사용하자\n\n```jsx\nexport const styles = StyleSheet.create({\n  pagination_wrapper: {\n    position: \"absolute\",\n    left: width / 2 - 100,\n    ...Platform.select({\n      ios: {\n        top: height + 70,\n      },\n      android: {\n        top: height + 75,\n      },\n    }),\n  },\n});\n```\n","slug":"Tech/ReactNative/RN-publishing-branch-os","published":1,"updated":"2023-01-22T14:05:08.571Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2s00016tqwe3wxcbwco","content":"<h1 id=\"플랫폼별로-디자인을-달리-하고-싶을-때\"><a href=\"#플랫폼별로-디자인을-달리-하고-싶을-때\" class=\"headerlink\" title=\"플랫폼별로 디자인을 달리 하고 싶을 때\"></a>플랫폼별로 디자인을 달리 하고 싶을 때</h1><p><code>react-native</code> 패키지의 <code>Platform</code> 모듈을 사용하자</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> styles = <span class=\"title class_\">StyleSheet</span>.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">pagination_wrapper</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">position</span>: <span class=\"string\">&quot;absolute&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">left</span>: width / <span class=\"number\">2</span> - <span class=\"number\">100</span>,</span><br><span class=\"line\">    ...<span class=\"title class_\">Platform</span>.<span class=\"title function_\">select</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">ios</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">top</span>: height + <span class=\"number\">70</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">android</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">top</span>: height + <span class=\"number\">75</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"플랫폼별로-디자인을-달리-하고-싶을-때\"><a href=\"#플랫폼별로-디자인을-달리-하고-싶을-때\" class=\"headerlink\" title=\"플랫폼별로 디자인을 달리 하고 싶을 때\"></a>플랫폼별로 디자인을 달리 하고 싶을 때</h1><p><code>react-native</code> 패키지의 <code>Platform</code> 모듈을 사용하자</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> styles = <span class=\"title class_\">StyleSheet</span>.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">pagination_wrapper</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">position</span>: <span class=\"string\">&quot;absolute&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">left</span>: width / <span class=\"number\">2</span> - <span class=\"number\">100</span>,</span><br><span class=\"line\">    ...<span class=\"title class_\">Platform</span>.<span class=\"title function_\">select</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">ios</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">top</span>: height + <span class=\"number\">70</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">android</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">top</span>: height + <span class=\"number\">75</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:05:08 GMT+0900 (대한민국 표준시)","title":"[React Native] 플랫폼별로 디자인을 달리 하고 싶을 때","path":"2022/04/08/Tech/ReactNative/RN-publishing-branch-os/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-04-08T13:28:41.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-04-08T13:28:41.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Tech > React Native","tags":["React Native"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[React Native] 스크롤 영역의 스크롤 바를 가리고 싶을 때","date":"2022-04-12T13:28:41.000Z","_content":"\n# 스크롤 영역의 스크롤 바를 가리고 싶을 때\n\nScrollView, FlatList에게 아래의 props를 내려주자.\n\n```jsx\n  showsVerticalScrollIndicator={false}\n  showsHorizontalScrollIndicator={false}\n```\n","source":"_posts/Tech/ReactNative/RN-publishing-hide-scrollbar.md","raw":"---\ntitle: \"[React Native] 스크롤 영역의 스크롤 바를 가리고 싶을 때\"\ndate: 2022-04-12 22:28:41\ncategories: [Tech, React Native]\ntags: [React Native]\n---\n\n# 스크롤 영역의 스크롤 바를 가리고 싶을 때\n\nScrollView, FlatList에게 아래의 props를 내려주자.\n\n```jsx\n  showsVerticalScrollIndicator={false}\n  showsHorizontalScrollIndicator={false}\n```\n","slug":"Tech/ReactNative/RN-publishing-hide-scrollbar","published":1,"updated":"2023-01-22T14:05:11.668Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2s10018tqwe2vc0caap","content":"<h1 id=\"스크롤-영역의-스크롤-바를-가리고-싶을-때\"><a href=\"#스크롤-영역의-스크롤-바를-가리고-싶을-때\" class=\"headerlink\" title=\"스크롤 영역의 스크롤 바를 가리고 싶을 때\"></a>스크롤 영역의 스크롤 바를 가리고 싶을 때</h1><p>ScrollView, FlatList에게 아래의 props를 내려주자.</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">showsVerticalScrollIndicator=&#123;<span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">showsHorizontalScrollIndicator=&#123;<span class=\"literal\">false</span>&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"스크롤-영역의-스크롤-바를-가리고-싶을-때\"><a href=\"#스크롤-영역의-스크롤-바를-가리고-싶을-때\" class=\"headerlink\" title=\"스크롤 영역의 스크롤 바를 가리고 싶을 때\"></a>스크롤 영역의 스크롤 바를 가리고 싶을 때</h1><p>ScrollView, FlatList에게 아래의 props를 내려주자.</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">showsVerticalScrollIndicator=&#123;<span class=\"literal\">false</span>&#125;</span><br><span class=\"line\">showsHorizontalScrollIndicator=&#123;<span class=\"literal\">false</span>&#125;</span><br></pre></td></tr></table></figure>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:05:11 GMT+0900 (대한민국 표준시)","title":"[React Native] 스크롤 영역의 스크롤 바를 가리고 싶을 때","path":"2022/04/12/Tech/ReactNative/RN-publishing-hide-scrollbar/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-04-12T13:28:41.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-04-12T13:28:41.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Tech > React Native","tags":["React Native"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[React Native] ScrollView의 특정 요소를 Sticky 하게 만들고 싶을 때","date":"2022-04-10T13:28:41.000Z","_content":"\n# ScrollView의 특정 요소를 Sticky 하게 만들고 싶을 때\n\n스크롤 하다가 Stick 되었으면 하는 자식 요소의 index를 stickyHeaderIndices prop를 통해 명시해주자.\n\n```jsx\n<ScrollView stickyHeaderIndices={[0]}>\n  <Header />\n  <FirstView />\n  <SecondView />\n  <ThirdView />\n  <FourthView />\n  <Footer />\n</ScrollView>\n```\n","source":"_posts/Tech/ReactNative/RN-publishing-scrollview-sticky.md","raw":"---\ntitle: \"[React Native] ScrollView의 특정 요소를 Sticky 하게 만들고 싶을 때\"\ndate: 2022-04-10 22:28:41\ncategories: [Tech, React Native]\ntags: [React Native]\n---\n\n# ScrollView의 특정 요소를 Sticky 하게 만들고 싶을 때\n\n스크롤 하다가 Stick 되었으면 하는 자식 요소의 index를 stickyHeaderIndices prop를 통해 명시해주자.\n\n```jsx\n<ScrollView stickyHeaderIndices={[0]}>\n  <Header />\n  <FirstView />\n  <SecondView />\n  <ThirdView />\n  <FourthView />\n  <Footer />\n</ScrollView>\n```\n","slug":"Tech/ReactNative/RN-publishing-scrollview-sticky","published":1,"updated":"2023-01-22T14:05:14.643Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2s1001ctqwe4pg593zy","content":"<h1 id=\"ScrollView의-특정-요소를-Sticky-하게-만들고-싶을-때\"><a href=\"#ScrollView의-특정-요소를-Sticky-하게-만들고-싶을-때\" class=\"headerlink\" title=\"ScrollView의 특정 요소를 Sticky 하게 만들고 싶을 때\"></a>ScrollView의 특정 요소를 Sticky 하게 만들고 싶을 때</h1><p>스크롤 하다가 Stick 되었으면 하는 자식 요소의 index를 stickyHeaderIndices prop를 통해 명시해주자.</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">ScrollView</span> stickyHeaderIndices=&#123;[<span class=\"number\">0</span>]&#125;&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Header</span> /&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">FirstView</span> /&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">SecondView</span> /&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThirdView</span> /&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">FourthView</span> /&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Footer</span> /&gt;</span></span></span><br><span class=\"line\">&lt;/<span class=\"title class_\">ScrollView</span>&gt;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"ScrollView의-특정-요소를-Sticky-하게-만들고-싶을-때\"><a href=\"#ScrollView의-특정-요소를-Sticky-하게-만들고-싶을-때\" class=\"headerlink\" title=\"ScrollView의 특정 요소를 Sticky 하게 만들고 싶을 때\"></a>ScrollView의 특정 요소를 Sticky 하게 만들고 싶을 때</h1><p>스크롤 하다가 Stick 되었으면 하는 자식 요소의 index를 stickyHeaderIndices prop를 통해 명시해주자.</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">ScrollView</span> stickyHeaderIndices=&#123;[<span class=\"number\">0</span>]&#125;&gt;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Header</span> /&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">FirstView</span> /&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">SecondView</span> /&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThirdView</span> /&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">FourthView</span> /&gt;</span></span></span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Footer</span> /&gt;</span></span></span><br><span class=\"line\">&lt;/<span class=\"title class_\">ScrollView</span>&gt;</span><br></pre></td></tr></table></figure>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:05:14 GMT+0900 (대한민국 표준시)","title":"[React Native] ScrollView의 특정 요소를 Sticky 하게 만들고 싶을 때","path":"2022/04/10/Tech/ReactNative/RN-publishing-scrollview-sticky/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-04-10T13:28:41.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-04-10T13:28:41.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Tech > React Native","tags":["React Native"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[React Native] 맥북 개발환경을 세팅하자","date":"2022-01-13T04:28:41.000Z","_content":"\n# React Native\n\n## 설치\n\n1. Node 12 이상 설치\n   `brew install node`\n\n2. Watchman 설치\n   `brew install watchman`\n\n3. [iOS/필수] Xcode 설치\n\n   appStore에서 설치하면 됩니다. (용량이 12기가라 매우 느립니다!)\n\n4. [iOS/선택]\n   Xcode를 실행하여 Command Line Tools도 가장 최신으로 다운로드 하세요.\n\n   ![](https://reactnative.dev/assets/images/GettingStartedXcodeCommandLineTools-8259be8d3ab8575bec2b71988163c850.png)\n\n5. [iOS/선택] 시뮬레이터 추가 설치\n   **Xcode > Preferences...** 에서 **Components** 탭 선택 후\n   원하는 iOS 시뮬레이터를 선택하여 추가할 수 있습니다.\n   현 : 지금 최신 Xcode를 받으면 iPhone13 (iOS15.2) 가 default로 설치되는 것 같아요\n\n6. [iOS/필수] CocoaPods 설치\n\n   `sudo gem install cocoapods`\n\n7. [AOS/필수] JDK 설치\n\n   Jdk8 이상이 필요합니다.\n   `brew install --cask adoptopenjdk/openjdk/adoptopenjdk8`\n\n8. [AOS/필수] 안드로이드 스튜디오 설치\n\n   https://developer.android.com/studio/index.html\n\n9. [AOS/필수] 환경변수 설정\n\n   ~/.bash_profile 에 아래의 내용을 입력해주세요.\n   현 : 사용하시는 terminal에 따라 유동적으로 진행해주세요 :)\n\n   ```bash\n   export ANDROID_HOME=$HOME/Library/Android/sdk\n   export PATH=$PATH:$ANDROID_HOME/emulator\n   export PATH=$PATH:$ANDROID_HOME/tools\n   export PATH=$PATH:$ANDROID_HOME/tools/bin\n   export PATH=$PATH:$ANDROID_HOME/platform-tools\n   ```\n\n10. [AOS/필수] SDK 설치\n\nAndroid Studio > SDK Manager 에서 원하는 SDK 를 선택하여 설치합니다.\n\n## Initialize & Launch Project\n\n### Initialize\n\n```bash\nnpx react-native init moga --template react-native-template-typescript\nyarn add mobx\nyarn add mobx-react\nyarn add @babel/plugin-proposal-decorators -D\n\n```\n\nbabel.config.js\n\n```javascript\n...\n  plugins: [\n    ['@babel/plugin-proposal-decorators', {legacy: true}],\n    ['@babel/plugin-proposal-class-properties', {loose: true}],\n  ],\n...\n\n```\n\ntsconfig.json\n\n```json\n...\n\t\"experimentalDecorators\": true,\n...\n```\n\n### Launch\n\n```bash\nyarn install\nnpx pod-install ios\nnpm run start\nnpm run android\nnpm run ios\n```\n\n## Trouble Shooting\n\n> react-native init 실행 후\n>\n> Installing CocoaPods dependencies 에서 실패하는 케이스\n\n```bash\nnpx pod-install ios\n```\n\n> pod install 실행 시\n>\n> Installing Flipper-Glog (0.3.6).. 에서 실패하는 케이스\n\n```bash\nsudo xcode-select --switch /Applications/Xcode.app\n```\n\n> pod install 실행 시\n> `git_version': Failed to extract git version from `git --version` (\"\\nYou have not agreed to the Xcode license agreements, please run 'sudo xcodebuild -license' from within a Terminal window to review and agree to the Xcode license agreements.\\n\").. 에러 뜨는 케이스\n\n`sudo xcodebuild -license` 또는 Xcode 실행하여 약관 동의\n\n```bash\nsudo xcodebuild -license  ## 또는 Xcode 실행하여 약관 동의\n```\n","source":"_posts/Tech/ReactNative/RN-setup.md","raw":"---\ntitle: \"[React Native] 맥북 개발환경을 세팅하자\"\ndate: 2022-01-13 13:28:41\ncategories: [Tech, React Native]\ntags: [React Native]\n---\n\n# React Native\n\n## 설치\n\n1. Node 12 이상 설치\n   `brew install node`\n\n2. Watchman 설치\n   `brew install watchman`\n\n3. [iOS/필수] Xcode 설치\n\n   appStore에서 설치하면 됩니다. (용량이 12기가라 매우 느립니다!)\n\n4. [iOS/선택]\n   Xcode를 실행하여 Command Line Tools도 가장 최신으로 다운로드 하세요.\n\n   ![](https://reactnative.dev/assets/images/GettingStartedXcodeCommandLineTools-8259be8d3ab8575bec2b71988163c850.png)\n\n5. [iOS/선택] 시뮬레이터 추가 설치\n   **Xcode > Preferences...** 에서 **Components** 탭 선택 후\n   원하는 iOS 시뮬레이터를 선택하여 추가할 수 있습니다.\n   현 : 지금 최신 Xcode를 받으면 iPhone13 (iOS15.2) 가 default로 설치되는 것 같아요\n\n6. [iOS/필수] CocoaPods 설치\n\n   `sudo gem install cocoapods`\n\n7. [AOS/필수] JDK 설치\n\n   Jdk8 이상이 필요합니다.\n   `brew install --cask adoptopenjdk/openjdk/adoptopenjdk8`\n\n8. [AOS/필수] 안드로이드 스튜디오 설치\n\n   https://developer.android.com/studio/index.html\n\n9. [AOS/필수] 환경변수 설정\n\n   ~/.bash_profile 에 아래의 내용을 입력해주세요.\n   현 : 사용하시는 terminal에 따라 유동적으로 진행해주세요 :)\n\n   ```bash\n   export ANDROID_HOME=$HOME/Library/Android/sdk\n   export PATH=$PATH:$ANDROID_HOME/emulator\n   export PATH=$PATH:$ANDROID_HOME/tools\n   export PATH=$PATH:$ANDROID_HOME/tools/bin\n   export PATH=$PATH:$ANDROID_HOME/platform-tools\n   ```\n\n10. [AOS/필수] SDK 설치\n\nAndroid Studio > SDK Manager 에서 원하는 SDK 를 선택하여 설치합니다.\n\n## Initialize & Launch Project\n\n### Initialize\n\n```bash\nnpx react-native init moga --template react-native-template-typescript\nyarn add mobx\nyarn add mobx-react\nyarn add @babel/plugin-proposal-decorators -D\n\n```\n\nbabel.config.js\n\n```javascript\n...\n  plugins: [\n    ['@babel/plugin-proposal-decorators', {legacy: true}],\n    ['@babel/plugin-proposal-class-properties', {loose: true}],\n  ],\n...\n\n```\n\ntsconfig.json\n\n```json\n...\n\t\"experimentalDecorators\": true,\n...\n```\n\n### Launch\n\n```bash\nyarn install\nnpx pod-install ios\nnpm run start\nnpm run android\nnpm run ios\n```\n\n## Trouble Shooting\n\n> react-native init 실행 후\n>\n> Installing CocoaPods dependencies 에서 실패하는 케이스\n\n```bash\nnpx pod-install ios\n```\n\n> pod install 실행 시\n>\n> Installing Flipper-Glog (0.3.6).. 에서 실패하는 케이스\n\n```bash\nsudo xcode-select --switch /Applications/Xcode.app\n```\n\n> pod install 실행 시\n> `git_version': Failed to extract git version from `git --version` (\"\\nYou have not agreed to the Xcode license agreements, please run 'sudo xcodebuild -license' from within a Terminal window to review and agree to the Xcode license agreements.\\n\").. 에러 뜨는 케이스\n\n`sudo xcodebuild -license` 또는 Xcode 실행하여 약관 동의\n\n```bash\nsudo xcodebuild -license  ## 또는 Xcode 실행하여 약관 동의\n```\n","slug":"Tech/ReactNative/RN-setup","published":1,"updated":"2023-01-22T14:05:18.192Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2s2001etqweb9vt91qf","content":"<h1 id=\"React-Native\"><a href=\"#React-Native\" class=\"headerlink\" title=\"React Native\"></a>React Native</h1><h2 id=\"설치\"><a href=\"#설치\" class=\"headerlink\" title=\"설치\"></a>설치</h2><ol>\n<li><p>Node 12 이상 설치<br><code>brew install node</code></p>\n</li>\n<li><p>Watchman 설치<br><code>brew install watchman</code></p>\n</li>\n<li><p>[iOS/필수] Xcode 설치</p>\n<p>appStore에서 설치하면 됩니다. (용량이 12기가라 매우 느립니다!)</p>\n</li>\n<li><p>[iOS/선택]<br>Xcode를 실행하여 Command Line Tools도 가장 최신으로 다운로드 하세요.</p>\n<p><img src=\"https://reactnative.dev/assets/images/GettingStartedXcodeCommandLineTools-8259be8d3ab8575bec2b71988163c850.png\"></p>\n</li>\n<li><p>[iOS/선택] 시뮬레이터 추가 설치<br><strong>Xcode &gt; Preferences…</strong> 에서 <strong>Components</strong> 탭 선택 후<br>원하는 iOS 시뮬레이터를 선택하여 추가할 수 있습니다.<br>현 : 지금 최신 Xcode를 받으면 iPhone13 (iOS15.2) 가 default로 설치되는 것 같아요</p>\n</li>\n<li><p>[iOS/필수] CocoaPods 설치</p>\n<p><code>sudo gem install cocoapods</code></p>\n</li>\n<li><p>[AOS/필수] JDK 설치</p>\n<p>Jdk8 이상이 필요합니다.<br><code>brew install --cask adoptopenjdk/openjdk/adoptopenjdk8</code></p>\n</li>\n<li><p>[AOS/필수] 안드로이드 스튜디오 설치</p>\n<p><a href=\"https://developer.android.com/studio/index.html\">https://developer.android.com/studio/index.html</a></p>\n</li>\n<li><p>[AOS/필수] 환경변수 설정</p>\n<p>~/.bash_profile 에 아래의 내용을 입력해주세요.<br>현 : 사용하시는 terminal에 따라 유동적으로 진행해주세요 :)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> ANDROID_HOME=<span class=\"variable\">$HOME</span>/Library/Android/sdk</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$ANDROID_HOME</span>/emulator</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$ANDROID_HOME</span>/tools</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$ANDROID_HOME</span>/tools/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$ANDROID_HOME</span>/platform-tools</span><br></pre></td></tr></table></figure></li>\n<li><p>[AOS/필수] SDK 설치</p>\n</li>\n</ol>\n<p>Android Studio &gt; SDK Manager 에서 원하는 SDK 를 선택하여 설치합니다.</p>\n<h2 id=\"Initialize-amp-Launch-Project\"><a href=\"#Initialize-amp-Launch-Project\" class=\"headerlink\" title=\"Initialize &amp; Launch Project\"></a>Initialize &amp; Launch Project</h2><h3 id=\"Initialize\"><a href=\"#Initialize\" class=\"headerlink\" title=\"Initialize\"></a>Initialize</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npx react-native init moga --template react-native-template-typescript</span><br><span class=\"line\">yarn add mobx</span><br><span class=\"line\">yarn add mobx-react</span><br><span class=\"line\">yarn add @babel/plugin-proposal-decorators -D</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>babel.config.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    [<span class=\"string\">&#x27;@babel/plugin-proposal-decorators&#x27;</span>, &#123;<span class=\"attr\">legacy</span>: <span class=\"literal\">true</span>&#125;],</span><br><span class=\"line\">    [<span class=\"string\">&#x27;@babel/plugin-proposal-class-properties&#x27;</span>, &#123;<span class=\"attr\">loose</span>: <span class=\"literal\">true</span>&#125;],</span><br><span class=\"line\">  ],</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>tsconfig.json</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">\t<span class=\"attr\">&quot;experimentalDecorators&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Launch\"><a href=\"#Launch\" class=\"headerlink\" title=\"Launch\"></a>Launch</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn install</span><br><span class=\"line\">npx pod-install ios</span><br><span class=\"line\">npm run start</span><br><span class=\"line\">npm run android</span><br><span class=\"line\">npm run ios</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Trouble-Shooting\"><a href=\"#Trouble-Shooting\" class=\"headerlink\" title=\"Trouble Shooting\"></a>Trouble Shooting</h2><blockquote>\n<p>react-native init 실행 후</p>\n<p>Installing CocoaPods dependencies 에서 실패하는 케이스</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npx pod-install ios</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>pod install 실행 시</p>\n<p>Installing Flipper-Glog (0.3.6).. 에서 실패하는 케이스</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo xcode-select --switch /Applications/Xcode.app</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>pod install 실행 시<br><code>git_version&#39;: Failed to extract git version from </code>git –version` (“\\nYou have not agreed to the Xcode license agreements, please run ‘sudo xcodebuild -license’ from within a Terminal window to review and agree to the Xcode license agreements.\\n”).. 에러 뜨는 케이스</p>\n</blockquote>\n<p><code>sudo xcodebuild -license</code> 또는 Xcode 실행하여 약관 동의</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo xcodebuild -license  <span class=\"comment\">## 또는 Xcode 실행하여 약관 동의</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"React-Native\"><a href=\"#React-Native\" class=\"headerlink\" title=\"React Native\"></a>React Native</h1><h2 id=\"설치\"><a href=\"#설치\" class=\"headerlink\" title=\"설치\"></a>설치</h2><ol>\n<li><p>Node 12 이상 설치<br><code>brew install node</code></p>\n</li>\n<li><p>Watchman 설치<br><code>brew install watchman</code></p>\n</li>\n<li><p>[iOS/필수] Xcode 설치</p>\n<p>appStore에서 설치하면 됩니다. (용량이 12기가라 매우 느립니다!)</p>\n</li>\n<li><p>[iOS/선택]<br>Xcode를 실행하여 Command Line Tools도 가장 최신으로 다운로드 하세요.</p>\n<p><img src=\"https://reactnative.dev/assets/images/GettingStartedXcodeCommandLineTools-8259be8d3ab8575bec2b71988163c850.png\"></p>\n</li>\n<li><p>[iOS/선택] 시뮬레이터 추가 설치<br><strong>Xcode &gt; Preferences…</strong> 에서 <strong>Components</strong> 탭 선택 후<br>원하는 iOS 시뮬레이터를 선택하여 추가할 수 있습니다.<br>현 : 지금 최신 Xcode를 받으면 iPhone13 (iOS15.2) 가 default로 설치되는 것 같아요</p>\n</li>\n<li><p>[iOS/필수] CocoaPods 설치</p>\n<p><code>sudo gem install cocoapods</code></p>\n</li>\n<li><p>[AOS/필수] JDK 설치</p>\n<p>Jdk8 이상이 필요합니다.<br><code>brew install --cask adoptopenjdk/openjdk/adoptopenjdk8</code></p>\n</li>\n<li><p>[AOS/필수] 안드로이드 스튜디오 설치</p>\n<p><a href=\"https://developer.android.com/studio/index.html\">https://developer.android.com/studio/index.html</a></p>\n</li>\n<li><p>[AOS/필수] 환경변수 설정</p>\n<p>~/.bash_profile 에 아래의 내용을 입력해주세요.<br>현 : 사용하시는 terminal에 따라 유동적으로 진행해주세요 :)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> ANDROID_HOME=<span class=\"variable\">$HOME</span>/Library/Android/sdk</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$ANDROID_HOME</span>/emulator</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$ANDROID_HOME</span>/tools</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$ANDROID_HOME</span>/tools/bin</span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$ANDROID_HOME</span>/platform-tools</span><br></pre></td></tr></table></figure></li>\n<li><p>[AOS/필수] SDK 설치</p>\n</li>\n</ol>\n<p>Android Studio &gt; SDK Manager 에서 원하는 SDK 를 선택하여 설치합니다.</p>\n<h2 id=\"Initialize-amp-Launch-Project\"><a href=\"#Initialize-amp-Launch-Project\" class=\"headerlink\" title=\"Initialize &amp; Launch Project\"></a>Initialize &amp; Launch Project</h2><h3 id=\"Initialize\"><a href=\"#Initialize\" class=\"headerlink\" title=\"Initialize\"></a>Initialize</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npx react-native init moga --template react-native-template-typescript</span><br><span class=\"line\">yarn add mobx</span><br><span class=\"line\">yarn add mobx-react</span><br><span class=\"line\">yarn add @babel/plugin-proposal-decorators -D</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>babel.config.js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [</span><br><span class=\"line\">    [<span class=\"string\">&#x27;@babel/plugin-proposal-decorators&#x27;</span>, &#123;<span class=\"attr\">legacy</span>: <span class=\"literal\">true</span>&#125;],</span><br><span class=\"line\">    [<span class=\"string\">&#x27;@babel/plugin-proposal-class-properties&#x27;</span>, &#123;<span class=\"attr\">loose</span>: <span class=\"literal\">true</span>&#125;],</span><br><span class=\"line\">  ],</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>tsconfig.json</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">\t<span class=\"attr\">&quot;experimentalDecorators&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Launch\"><a href=\"#Launch\" class=\"headerlink\" title=\"Launch\"></a>Launch</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn install</span><br><span class=\"line\">npx pod-install ios</span><br><span class=\"line\">npm run start</span><br><span class=\"line\">npm run android</span><br><span class=\"line\">npm run ios</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Trouble-Shooting\"><a href=\"#Trouble-Shooting\" class=\"headerlink\" title=\"Trouble Shooting\"></a>Trouble Shooting</h2><blockquote>\n<p>react-native init 실행 후</p>\n<p>Installing CocoaPods dependencies 에서 실패하는 케이스</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npx pod-install ios</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>pod install 실행 시</p>\n<p>Installing Flipper-Glog (0.3.6).. 에서 실패하는 케이스</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo xcode-select --switch /Applications/Xcode.app</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>pod install 실행 시<br><code>git_version&#39;: Failed to extract git version from </code>git –version` (“\\nYou have not agreed to the Xcode license agreements, please run ‘sudo xcodebuild -license’ from within a Terminal window to review and agree to the Xcode license agreements.\\n”).. 에러 뜨는 케이스</p>\n</blockquote>\n<p><code>sudo xcodebuild -license</code> 또는 Xcode 실행하여 약관 동의</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo xcodebuild -license  <span class=\"comment\">## 또는 Xcode 실행하여 약관 동의</span></span><br></pre></td></tr></table></figure>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"https://reactnative.dev/assets/images/GettingStartedXcodeCommandLineTools-8259be8d3ab8575bec2b71988163c850.png","popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:05:18 GMT+0900 (대한민국 표준시)","title":"[React Native] 맥북 개발환경을 세팅하자","path":"2022/01/13/Tech/ReactNative/RN-setup/","eyeCatchImage":"https://reactnative.dev/assets/images/GettingStartedXcodeCommandLineTools-8259be8d3ab8575bec2b71988163c850.png","excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-01-13T04:28:41.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-01-13T04:28:41.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"Tech > React Native","tags":["React Native"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[React] React CDN 버전으로 나를 표현하는 이력 페이지를 만들자","date":"2022-01-21T19:08:15.000Z","_content":"\n# MOTIVATION\n\n처음 블로그를 deploy할 때, About Me 페이지는 다음에 더 손봐야지~ 하고 대충 만들었었는데요.\n\n한 페이지에 내가 잘하는 것, 하고싶은 것, 했던 것에 대한 정보를 짜임새 있게 보여주기가 어렵더라구요... 감히 html 쪼가리가 나를 표현한다니! 라는 생각도 들고요 ㅋㅋㅋ\n다른 한 편으로는 나에 대해서 정리하고 돌아보는 시간을 계속 미루고 싶었던 것 같기도 합니다.\n\n어떻게 하면 짜임새 있게 나를 표현할 수 있을까 고민했던 내용을 기록해볼게요.\n\n# 계획\n\n우선 보여주고 싶은 정보의 특성에 따라 보여주는 방식도 달랐으면 했습니다.\n\n- 이력은 타임라인\n- 기술스택은 관련 직군이라면 알아볼 수 있을 만큼만 간결하게 뱃지로\n- 사이드 플젝 진행이력은 신뢰가 가도록 다양한 정보를 담아서\n- 성격이 드러나는 짧은 소개글\n\n또, 화면과 인터랙션해서 보여줘야하는 추가정보인지 / 처음부터 보여져야하는 필수정보인지에 따라서도 구현 방식이 달라져야 했구요.\n\n- 추가정보라면 툴팁과 아코디언을 적절히 사용해서 화면이 복잡해 보이지 얺도록\n- 필수정보라면 font style과 margin, padding 을 조절하여 화면이 복잡해 보이지 않도록\n\n🤔 뜬금없지만, 역시 내 product를 만든다고 생각하고 UX를 고민하는 작업은 항상 재미있는 것 같아요. 잘하고 싶어져서 더 알아보고, 더 알아보면 더 잘하게 되고...\n\n# 구현\n\n이전 글에서 언급했듯 이 블로그는 Hexo와 Next theme 그리고 약간의 customizing으로 구현되어있는데요. 기존의 틀을 그대로 활용하여 마크다운 추가만으로도 이력 페이지를 꾸밀 수는 있겠지만 그걸로는 원하는 기능을 모두 구현할 수 없었고, 고민하지 않고 React의 도움을 받기로 했습니다.\n\n전체가 React로 구성되는 프로젝트는 아주 많이 만들어봤지만, html로 이미 구현된 페이지에 React Element를 삽입하는 형태로는 작업해본 적이 없었네요. 물론 공식 가이드 첫 부분에 나올 정도로 흔한 상식이긴하지만요... =)\n\n## React, ReactDOM CDN 추가\n\n```html\n<!DOCTYPE html>\n<html>\n  <body>\n    <div id=\"like_button_container\"></div>\n    <!-- global 변수로 React를 가져다 사용하기 위해 아래와 같이 CDN을 통해 js를 불러오도록 합니다. -->\n    <script\n      crossorigin\n      src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n    ></script>\n    <script\n      crossorigin\n      src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n    ></script>\n    <script>\n      //아래의 예제는 React 공식 docs에서 제공하는 예제입니다.\n      \"use strict\"; //올바르지 않은 문법을 사전에 검출할 수 있도록 strict 모드를 쓴다는 의미라네요.\n      const e = React.createElement;\n\n      class LikeButton extends React.Component {\n        constructor(props) {\n          super(props);\n          this.state = { liked: false };\n        }\n\n        render() {\n          if (this.state.liked) {\n            return \"You liked this.\";\n          }\n\n          return e(\n            \"button\",\n            { onClick: () => this.setState({ liked: true }) },\n            \"Like\"\n          );\n        }\n      }\n\n      const domContainer = document.querySelector(\"#like_button_container\");\n      ReactDOM.render(e(LikeButton), domContainer);\n    </script>\n  </body>\n</html>\n```\n\n이제 root/about/ 경로에 index.md 대신 index.html을 생성하고, 위의 코드를 넣어주면 끝입니다.\n\n## babel CDN 추가\n\n이제 React를 CDN으로 바로 가져다 쓸 수 있다는 것이 확인되었으니, 제가 쓰기 편한 코드로 바꾸고 싶어졌습니다.\n위의 예제에서 저는 크게 두 가지가 불편해보였어요.\n\n- createElement\n- Class Component\n\n혹시 위의 예제에서 createElement 함수의 사용법을 보셨나요? 아래의 두 코드는 같은 동작을 위한 코드입니다.\n\n```jsx\n<button onClick={doSomething} />\n```\n\n```javascript\ncreateElement(\"button\", { onClick: doSomething });\n```\n\n차이점은, jsx가 훨씬 더 html스럽게 생겨서 개발자 친화적인 것 같네요. 저도 jsx를 사용하는게 더 편하기 때문에 CDN으로부터 불러온 babel 스크립트가 jsx 형식을 알아먹을 수 있도록 수정해볼게요.\n\n```html\n<!DOCTYPE html>\n<html>\n  <body>\n    <div id=\"like_button_container\"></div>\n    <script\n      crossorigin\n      src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n    ></script>\n    <script\n      crossorigin\n      src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n    ></script>\n    <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n    <!-- type을 주는 것을 잊지 마세요. -->\n    <script type=\"text/babel\">\n      \"use strict\";\n      const { useState } = React;\n\n      const LikeButton = () => {\n        const [liked, setLiked] = useState(false);\n        return liked ? (\n          \"You liked this.\"\n        ) : (\n          <button\n            onClick={() => {\n              setLiked(true);\n            }}\n          >\n            Like\n          </button>\n        );\n      };\n\n      ReactDOM.render(<LikeButton />, domContainer);\n    </script>\n  </body>\n</html>\n```\n\n짠! 이제 제가 쓰기 편한 형태로 어느정도 정리가 된 것 같습니다.\n\n## 개발!\n\n개발환경이 갖추어졌으니 아래의 주요 기능을 중심으로 개발하면 되겠습니다.\n\n- 이력 타임라인\n- 기술스택 뱃지목록\n- 사이드 플젝 진행이력\n- 성격이 드러나는 짧은 소개글\n\n(WIP) 생각날 때마다 추가 중입니다 =)\n","source":"_posts/ToyProjects/Blog/Resume.md","raw":"---\ntitle: \"[React] React CDN 버전으로 나를 표현하는 이력 페이지를 만들자\"\ndate: 2022-01-22 04:08:15\ntags: [Hexo, React, UI/UX]\ncategories: [개발일지, 블로그]\n---\n\n# MOTIVATION\n\n처음 블로그를 deploy할 때, About Me 페이지는 다음에 더 손봐야지~ 하고 대충 만들었었는데요.\n\n한 페이지에 내가 잘하는 것, 하고싶은 것, 했던 것에 대한 정보를 짜임새 있게 보여주기가 어렵더라구요... 감히 html 쪼가리가 나를 표현한다니! 라는 생각도 들고요 ㅋㅋㅋ\n다른 한 편으로는 나에 대해서 정리하고 돌아보는 시간을 계속 미루고 싶었던 것 같기도 합니다.\n\n어떻게 하면 짜임새 있게 나를 표현할 수 있을까 고민했던 내용을 기록해볼게요.\n\n# 계획\n\n우선 보여주고 싶은 정보의 특성에 따라 보여주는 방식도 달랐으면 했습니다.\n\n- 이력은 타임라인\n- 기술스택은 관련 직군이라면 알아볼 수 있을 만큼만 간결하게 뱃지로\n- 사이드 플젝 진행이력은 신뢰가 가도록 다양한 정보를 담아서\n- 성격이 드러나는 짧은 소개글\n\n또, 화면과 인터랙션해서 보여줘야하는 추가정보인지 / 처음부터 보여져야하는 필수정보인지에 따라서도 구현 방식이 달라져야 했구요.\n\n- 추가정보라면 툴팁과 아코디언을 적절히 사용해서 화면이 복잡해 보이지 얺도록\n- 필수정보라면 font style과 margin, padding 을 조절하여 화면이 복잡해 보이지 않도록\n\n🤔 뜬금없지만, 역시 내 product를 만든다고 생각하고 UX를 고민하는 작업은 항상 재미있는 것 같아요. 잘하고 싶어져서 더 알아보고, 더 알아보면 더 잘하게 되고...\n\n# 구현\n\n이전 글에서 언급했듯 이 블로그는 Hexo와 Next theme 그리고 약간의 customizing으로 구현되어있는데요. 기존의 틀을 그대로 활용하여 마크다운 추가만으로도 이력 페이지를 꾸밀 수는 있겠지만 그걸로는 원하는 기능을 모두 구현할 수 없었고, 고민하지 않고 React의 도움을 받기로 했습니다.\n\n전체가 React로 구성되는 프로젝트는 아주 많이 만들어봤지만, html로 이미 구현된 페이지에 React Element를 삽입하는 형태로는 작업해본 적이 없었네요. 물론 공식 가이드 첫 부분에 나올 정도로 흔한 상식이긴하지만요... =)\n\n## React, ReactDOM CDN 추가\n\n```html\n<!DOCTYPE html>\n<html>\n  <body>\n    <div id=\"like_button_container\"></div>\n    <!-- global 변수로 React를 가져다 사용하기 위해 아래와 같이 CDN을 통해 js를 불러오도록 합니다. -->\n    <script\n      crossorigin\n      src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n    ></script>\n    <script\n      crossorigin\n      src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n    ></script>\n    <script>\n      //아래의 예제는 React 공식 docs에서 제공하는 예제입니다.\n      \"use strict\"; //올바르지 않은 문법을 사전에 검출할 수 있도록 strict 모드를 쓴다는 의미라네요.\n      const e = React.createElement;\n\n      class LikeButton extends React.Component {\n        constructor(props) {\n          super(props);\n          this.state = { liked: false };\n        }\n\n        render() {\n          if (this.state.liked) {\n            return \"You liked this.\";\n          }\n\n          return e(\n            \"button\",\n            { onClick: () => this.setState({ liked: true }) },\n            \"Like\"\n          );\n        }\n      }\n\n      const domContainer = document.querySelector(\"#like_button_container\");\n      ReactDOM.render(e(LikeButton), domContainer);\n    </script>\n  </body>\n</html>\n```\n\n이제 root/about/ 경로에 index.md 대신 index.html을 생성하고, 위의 코드를 넣어주면 끝입니다.\n\n## babel CDN 추가\n\n이제 React를 CDN으로 바로 가져다 쓸 수 있다는 것이 확인되었으니, 제가 쓰기 편한 코드로 바꾸고 싶어졌습니다.\n위의 예제에서 저는 크게 두 가지가 불편해보였어요.\n\n- createElement\n- Class Component\n\n혹시 위의 예제에서 createElement 함수의 사용법을 보셨나요? 아래의 두 코드는 같은 동작을 위한 코드입니다.\n\n```jsx\n<button onClick={doSomething} />\n```\n\n```javascript\ncreateElement(\"button\", { onClick: doSomething });\n```\n\n차이점은, jsx가 훨씬 더 html스럽게 생겨서 개발자 친화적인 것 같네요. 저도 jsx를 사용하는게 더 편하기 때문에 CDN으로부터 불러온 babel 스크립트가 jsx 형식을 알아먹을 수 있도록 수정해볼게요.\n\n```html\n<!DOCTYPE html>\n<html>\n  <body>\n    <div id=\"like_button_container\"></div>\n    <script\n      crossorigin\n      src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n    ></script>\n    <script\n      crossorigin\n      src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n    ></script>\n    <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n    <!-- type을 주는 것을 잊지 마세요. -->\n    <script type=\"text/babel\">\n      \"use strict\";\n      const { useState } = React;\n\n      const LikeButton = () => {\n        const [liked, setLiked] = useState(false);\n        return liked ? (\n          \"You liked this.\"\n        ) : (\n          <button\n            onClick={() => {\n              setLiked(true);\n            }}\n          >\n            Like\n          </button>\n        );\n      };\n\n      ReactDOM.render(<LikeButton />, domContainer);\n    </script>\n  </body>\n</html>\n```\n\n짠! 이제 제가 쓰기 편한 형태로 어느정도 정리가 된 것 같습니다.\n\n## 개발!\n\n개발환경이 갖추어졌으니 아래의 주요 기능을 중심으로 개발하면 되겠습니다.\n\n- 이력 타임라인\n- 기술스택 뱃지목록\n- 사이드 플젝 진행이력\n- 성격이 드러나는 짧은 소개글\n\n(WIP) 생각날 때마다 추가 중입니다 =)\n","slug":"ToyProjects/Blog/Resume","published":1,"updated":"2023-01-22T14:02:09.716Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2s2001htqwebh2dcnsg","content":"<h1 id=\"MOTIVATION\"><a href=\"#MOTIVATION\" class=\"headerlink\" title=\"MOTIVATION\"></a>MOTIVATION</h1><p>처음 블로그를 deploy할 때, About Me 페이지는 다음에 더 손봐야지~ 하고 대충 만들었었는데요.</p>\n<p>한 페이지에 내가 잘하는 것, 하고싶은 것, 했던 것에 대한 정보를 짜임새 있게 보여주기가 어렵더라구요… 감히 html 쪼가리가 나를 표현한다니! 라는 생각도 들고요 ㅋㅋㅋ<br>다른 한 편으로는 나에 대해서 정리하고 돌아보는 시간을 계속 미루고 싶었던 것 같기도 합니다.</p>\n<p>어떻게 하면 짜임새 있게 나를 표현할 수 있을까 고민했던 내용을 기록해볼게요.</p>\n<h1 id=\"계획\"><a href=\"#계획\" class=\"headerlink\" title=\"계획\"></a>계획</h1><p>우선 보여주고 싶은 정보의 특성에 따라 보여주는 방식도 달랐으면 했습니다.</p>\n<ul>\n<li>이력은 타임라인</li>\n<li>기술스택은 관련 직군이라면 알아볼 수 있을 만큼만 간결하게 뱃지로</li>\n<li>사이드 플젝 진행이력은 신뢰가 가도록 다양한 정보를 담아서</li>\n<li>성격이 드러나는 짧은 소개글</li>\n</ul>\n<p>또, 화면과 인터랙션해서 보여줘야하는 추가정보인지 / 처음부터 보여져야하는 필수정보인지에 따라서도 구현 방식이 달라져야 했구요.</p>\n<ul>\n<li>추가정보라면 툴팁과 아코디언을 적절히 사용해서 화면이 복잡해 보이지 얺도록</li>\n<li>필수정보라면 font style과 margin, padding 을 조절하여 화면이 복잡해 보이지 않도록</li>\n</ul>\n<p>🤔 뜬금없지만, 역시 내 product를 만든다고 생각하고 UX를 고민하는 작업은 항상 재미있는 것 같아요. 잘하고 싶어져서 더 알아보고, 더 알아보면 더 잘하게 되고…</p>\n<h1 id=\"구현\"><a href=\"#구현\" class=\"headerlink\" title=\"구현\"></a>구현</h1><p>이전 글에서 언급했듯 이 블로그는 Hexo와 Next theme 그리고 약간의 customizing으로 구현되어있는데요. 기존의 틀을 그대로 활용하여 마크다운 추가만으로도 이력 페이지를 꾸밀 수는 있겠지만 그걸로는 원하는 기능을 모두 구현할 수 없었고, 고민하지 않고 React의 도움을 받기로 했습니다.</p>\n<p>전체가 React로 구성되는 프로젝트는 아주 많이 만들어봤지만, html로 이미 구현된 페이지에 React Element를 삽입하는 형태로는 작업해본 적이 없었네요. 물론 공식 가이드 첫 부분에 나올 정도로 흔한 상식이긴하지만요… =)</p>\n<h2 id=\"React-ReactDOM-CDN-추가\"><a href=\"#React-ReactDOM-CDN-추가\" class=\"headerlink\" title=\"React, ReactDOM CDN 추가\"></a>React, ReactDOM CDN 추가</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;like_button_container&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- global 변수로 React를 가져다 사용하기 위해 아래와 같이 CDN을 통해 js를 불러오도록 합니다. --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">crossorigin</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/react@17/umd/react.production.min.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">crossorigin</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/react-dom@17/umd/react-dom.production.min.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">//아래의 예제는 React 공식 docs에서 제공하는 예제입니다.</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"meta\">      &quot;use strict&quot;</span>; <span class=\"comment\">//올바르지 않은 문법을 사전에 검출할 수 있도록 strict 모드를 쓴다는 의미라네요.</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> e = <span class=\"title class_\">React</span>.<span class=\"property\">createElement</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">class</span> <span class=\"title class_\">LikeButton</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">constructor</span>(<span class=\"params\">props</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"variable language_\">super</span>(props);</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"variable language_\">this</span>.<span class=\"property\">state</span> = &#123; <span class=\"attr\">liked</span>: <span class=\"literal\">false</span> &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">liked</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;You liked this.&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">return</span> <span class=\"title function_\">e</span>(</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"string\">&quot;button&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123; <span class=\"attr\">onClick</span>: <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123; <span class=\"attr\">liked</span>: <span class=\"literal\">true</span> &#125;) &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"string\">&quot;Like&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          );</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> domContainer = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#like_button_container&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(<span class=\"title function_\">e</span>(<span class=\"title class_\">LikeButton</span>), domContainer);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>이제 root/about/ 경로에 index.md 대신 index.html을 생성하고, 위의 코드를 넣어주면 끝입니다.</p>\n<h2 id=\"babel-CDN-추가\"><a href=\"#babel-CDN-추가\" class=\"headerlink\" title=\"babel CDN 추가\"></a>babel CDN 추가</h2><p>이제 React를 CDN으로 바로 가져다 쓸 수 있다는 것이 확인되었으니, 제가 쓰기 편한 코드로 바꾸고 싶어졌습니다.<br>위의 예제에서 저는 크게 두 가지가 불편해보였어요.</p>\n<ul>\n<li>createElement</li>\n<li>Class Component</li>\n</ul>\n<p>혹시 위의 예제에서 createElement 함수의 사용법을 보셨나요? 아래의 두 코드는 같은 동작을 위한 코드입니다.</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button onClick=&#123;doSomething&#125; /&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;button&quot;</span>, &#123; <span class=\"attr\">onClick</span>: doSomething &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>차이점은, jsx가 훨씬 더 html스럽게 생겨서 개발자 친화적인 것 같네요. 저도 jsx를 사용하는게 더 편하기 때문에 CDN으로부터 불러온 babel 스크립트가 jsx 형식을 알아먹을 수 있도록 수정해볼게요.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;like_button_container&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">crossorigin</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/react@17/umd/react.production.min.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">crossorigin</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/react-dom@17/umd/react-dom.production.min.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/@babel/standalone/babel.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- type을 주는 것을 잊지 마세요. --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/babel&quot;</span>&gt;</span><span class=\"language-javascript\"><span class=\"meta\"></span></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"language-javascript\">      &quot;use strict&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> &#123; useState &#125; = <span class=\"title class_\">React</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> <span class=\"title function_\">LikeButton</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">const</span> [liked, setLiked] = <span class=\"title function_\">useState</span>(<span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">return</span> liked ? (</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"string\">&quot;You liked this.&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        ) : (</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span></span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\"><span class=\"language-javascript\">            <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-javascript\">              setLiked(true);</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-javascript\">            &#125;&#125;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-javascript\">          &gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-javascript\">            Like</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-javascript\">          <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        );</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">LikeButton</span> /&gt;</span></span>, domContainer);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>짠! 이제 제가 쓰기 편한 형태로 어느정도 정리가 된 것 같습니다.</p>\n<h2 id=\"개발\"><a href=\"#개발\" class=\"headerlink\" title=\"개발!\"></a>개발!</h2><p>개발환경이 갖추어졌으니 아래의 주요 기능을 중심으로 개발하면 되겠습니다.</p>\n<ul>\n<li>이력 타임라인</li>\n<li>기술스택 뱃지목록</li>\n<li>사이드 플젝 진행이력</li>\n<li>성격이 드러나는 짧은 소개글</li>\n</ul>\n<p>(WIP) 생각날 때마다 추가 중입니다 =)</p>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"MOTIVATION\"><a href=\"#MOTIVATION\" class=\"headerlink\" title=\"MOTIVATION\"></a>MOTIVATION</h1><p>처음 블로그를 deploy할 때, About Me 페이지는 다음에 더 손봐야지~ 하고 대충 만들었었는데요.</p>\n<p>한 페이지에 내가 잘하는 것, 하고싶은 것, 했던 것에 대한 정보를 짜임새 있게 보여주기가 어렵더라구요… 감히 html 쪼가리가 나를 표현한다니! 라는 생각도 들고요 ㅋㅋㅋ<br>다른 한 편으로는 나에 대해서 정리하고 돌아보는 시간을 계속 미루고 싶었던 것 같기도 합니다.</p>\n<p>어떻게 하면 짜임새 있게 나를 표현할 수 있을까 고민했던 내용을 기록해볼게요.</p>\n<h1 id=\"계획\"><a href=\"#계획\" class=\"headerlink\" title=\"계획\"></a>계획</h1><p>우선 보여주고 싶은 정보의 특성에 따라 보여주는 방식도 달랐으면 했습니다.</p>\n<ul>\n<li>이력은 타임라인</li>\n<li>기술스택은 관련 직군이라면 알아볼 수 있을 만큼만 간결하게 뱃지로</li>\n<li>사이드 플젝 진행이력은 신뢰가 가도록 다양한 정보를 담아서</li>\n<li>성격이 드러나는 짧은 소개글</li>\n</ul>\n<p>또, 화면과 인터랙션해서 보여줘야하는 추가정보인지 / 처음부터 보여져야하는 필수정보인지에 따라서도 구현 방식이 달라져야 했구요.</p>\n<ul>\n<li>추가정보라면 툴팁과 아코디언을 적절히 사용해서 화면이 복잡해 보이지 얺도록</li>\n<li>필수정보라면 font style과 margin, padding 을 조절하여 화면이 복잡해 보이지 않도록</li>\n</ul>\n<p>🤔 뜬금없지만, 역시 내 product를 만든다고 생각하고 UX를 고민하는 작업은 항상 재미있는 것 같아요. 잘하고 싶어져서 더 알아보고, 더 알아보면 더 잘하게 되고…</p>\n<h1 id=\"구현\"><a href=\"#구현\" class=\"headerlink\" title=\"구현\"></a>구현</h1><p>이전 글에서 언급했듯 이 블로그는 Hexo와 Next theme 그리고 약간의 customizing으로 구현되어있는데요. 기존의 틀을 그대로 활용하여 마크다운 추가만으로도 이력 페이지를 꾸밀 수는 있겠지만 그걸로는 원하는 기능을 모두 구현할 수 없었고, 고민하지 않고 React의 도움을 받기로 했습니다.</p>\n<p>전체가 React로 구성되는 프로젝트는 아주 많이 만들어봤지만, html로 이미 구현된 페이지에 React Element를 삽입하는 형태로는 작업해본 적이 없었네요. 물론 공식 가이드 첫 부분에 나올 정도로 흔한 상식이긴하지만요… =)</p>\n<h2 id=\"React-ReactDOM-CDN-추가\"><a href=\"#React-ReactDOM-CDN-추가\" class=\"headerlink\" title=\"React, ReactDOM CDN 추가\"></a>React, ReactDOM CDN 추가</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;like_button_container&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- global 변수로 React를 가져다 사용하기 위해 아래와 같이 CDN을 통해 js를 불러오도록 합니다. --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">crossorigin</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/react@17/umd/react.production.min.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">crossorigin</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/react-dom@17/umd/react-dom.production.min.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"comment\">//아래의 예제는 React 공식 docs에서 제공하는 예제입니다.</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"meta\">      &quot;use strict&quot;</span>; <span class=\"comment\">//올바르지 않은 문법을 사전에 검출할 수 있도록 strict 모드를 쓴다는 의미라네요.</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> e = <span class=\"title class_\">React</span>.<span class=\"property\">createElement</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">class</span> <span class=\"title class_\">LikeButton</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">constructor</span>(<span class=\"params\">props</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"variable language_\">super</span>(props);</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"variable language_\">this</span>.<span class=\"property\">state</span> = &#123; <span class=\"attr\">liked</span>: <span class=\"literal\">false</span> &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">liked</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;You liked this.&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">          &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"keyword\">return</span> <span class=\"title function_\">e</span>(</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"string\">&quot;button&quot;</span>,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            &#123; <span class=\"attr\">onClick</span>: <span class=\"function\">() =&gt;</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123; <span class=\"attr\">liked</span>: <span class=\"literal\">true</span> &#125;) &#125;,</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"string\">&quot;Like&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">          );</span></span><br><span class=\"line\"><span class=\"language-javascript\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> domContainer = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#like_button_container&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(<span class=\"title function_\">e</span>(<span class=\"title class_\">LikeButton</span>), domContainer);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>이제 root/about/ 경로에 index.md 대신 index.html을 생성하고, 위의 코드를 넣어주면 끝입니다.</p>\n<h2 id=\"babel-CDN-추가\"><a href=\"#babel-CDN-추가\" class=\"headerlink\" title=\"babel CDN 추가\"></a>babel CDN 추가</h2><p>이제 React를 CDN으로 바로 가져다 쓸 수 있다는 것이 확인되었으니, 제가 쓰기 편한 코드로 바꾸고 싶어졌습니다.<br>위의 예제에서 저는 크게 두 가지가 불편해보였어요.</p>\n<ul>\n<li>createElement</li>\n<li>Class Component</li>\n</ul>\n<p>혹시 위의 예제에서 createElement 함수의 사용법을 보셨나요? 아래의 두 코드는 같은 동작을 위한 코드입니다.</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;button onClick=&#123;doSomething&#125; /&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;button&quot;</span>, &#123; <span class=\"attr\">onClick</span>: doSomething &#125;);</span><br></pre></td></tr></table></figure>\n\n<p>차이점은, jsx가 훨씬 더 html스럽게 생겨서 개발자 친화적인 것 같네요. 저도 jsx를 사용하는게 더 편하기 때문에 CDN으로부터 불러온 babel 스크립트가 jsx 형식을 알아먹을 수 있도록 수정해볼게요.</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;like_button_container&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">crossorigin</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/react@17/umd/react.production.min.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">crossorigin</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/react-dom@17/umd/react-dom.production.min.js&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://unpkg.com/@babel/standalone/babel.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- type을 주는 것을 잊지 마세요. --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/babel&quot;</span>&gt;</span><span class=\"language-javascript\"><span class=\"meta\"></span></span></span><br><span class=\"line\"><span class=\"meta\"><span class=\"language-javascript\">      &quot;use strict&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> &#123; useState &#125; = <span class=\"title class_\">React</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"keyword\">const</span> <span class=\"title function_\">LikeButton</span> = (<span class=\"params\"></span>) =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">const</span> [liked, setLiked] = <span class=\"title function_\">useState</span>(<span class=\"literal\">false</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">return</span> liked ? (</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"string\">&quot;You liked this.&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        ) : (</span></span><br><span class=\"line\"><span class=\"language-javascript\">          <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span></span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\"><span class=\"language-javascript\">            <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> &#123;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-javascript\">              setLiked(true);</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-javascript\">            &#125;&#125;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-javascript\">          &gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-javascript\">            Like</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-javascript\">          <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-javascript\">        );</span></span><br><span class=\"line\"><span class=\"language-javascript\">      &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">LikeButton</span> /&gt;</span></span>, domContainer);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>짠! 이제 제가 쓰기 편한 형태로 어느정도 정리가 된 것 같습니다.</p>\n<h2 id=\"개발\"><a href=\"#개발\" class=\"headerlink\" title=\"개발!\"></a>개발!</h2><p>개발환경이 갖추어졌으니 아래의 주요 기능을 중심으로 개발하면 되겠습니다.</p>\n<ul>\n<li>이력 타임라인</li>\n<li>기술스택 뱃지목록</li>\n<li>사이드 플젝 진행이력</li>\n<li>성격이 드러나는 짧은 소개글</li>\n</ul>\n<p>(WIP) 생각날 때마다 추가 중입니다 =)</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:02:09 GMT+0900 (대한민국 표준시)","title":"[React] React CDN 버전으로 나를 표현하는 이력 페이지를 만들자","path":"2022/01/22/ToyProjects/Blog/Resume/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-01-21T19:08:15.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-01-21T19:08:15.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"개발일지 > 블로그","tags":["Hexo","React","UI/UX"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[Hexo] Hexo와 NexT 테마를 이용하여 내 입맛에 맞는 개발 블로그를 만들자","date":"2022-01-12T05:24:10.000Z","_content":"\n# MOTIVATION\n\n개발 블로그를 시작했을 때부터 tistory를 애용해왔는데, 최근 들어서는 좀 더 **놀이터** 같은 느낌의 블로그를 갖고 싶다는 생각이 들었음.\n그래서 작년(2021년) 상반기 즈음 사이드 프로젝트로 *내 웹페이지를 만들어보자*는 계획을 세우게 되었고, 미루고 미루다가 드디어 올해(2022년) 첫 사이드 프로젝트로 다시 꺼내게 되었다.\n\n# 요구사항\n\n고객(나)과 개발자(이것도 나)의 입장에서 여러가지 옵션을 재보았던 내용은 아래와 같다.\n\n**서버 비용은 들이고 싶지 않아요**\n\n- 처음에는 집에 굴러다니는 라즈베리파이에 올릴까 생각도 했는데 의외로 나도 모르는 사이에 전원을 꺼버리는 일이 잦고, update 하려면 서버에 붙어야한다는 점이 너무 번거로워서 몇 번 해보고 포기했다.\n- 정적 웹 사이트를 무료로 deploy할 수 있는 github page 를 선택하게 되었다. 나만 안쓰고 있었어...\n\n**웹사이트 구성을 직접 하는 건 어려울 것 같은데?**\n\n- 이것도 처음에는 내 취지 (**놀이터** 같은 블로그)에 맞게 처음부터 다 구성하려고 했었다. 하지만 막상 손을 대고 보니 고려할 부분이 정말정말 많더라... 검색이나 태그, 카테고리 기능을 추가하려고 하니까 구조를 잡는 것이 너무 부담스럽게 느껴졌다.\n- 검색 성능이 보장되는 태그나 카테고리를 구성하기 위해서 알고리즘과 자료구조부터 찾아봤고, 서버 비용을 들이더라도 elastic search 를 한 번 써볼까 spike도 해봤는데 ㅠㅠ 공부할 내용이 꽤 되는 것은 둘째치고 재미가 없었다. 그래서 얼마안가 포기.\n\n**정적 웹 사이트 생성기의 도움을 받자**\n\n- github page를 사용하기로 정했을 때 Jekyll로 대표되는 정적 웹 사이트 생성기에 대해서 함께 찾아본 적은 있는데, theme가 모두 마음에 들지 않았던 것 같다.\n- 몇 개월 뒤에 검색 기능 구현에 지쳐서 찬찬히 다시 찾아봤는데, [Hexo](https://hexo.io/ko/index.html) 라는 정적 웹 사이트 생성기에 [NexT](https://theme-next.js.org/) theme이 눈에 들었다.\n\nHexo 및 NexT 모두 가이드가 잘 되어있는 편이라, 이틀 정도로 github deploy 까지 완료 가능했다.\n\n# 진행내용\n\n## Hexo 프로젝트 생성 및 구동\n\n```bash\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install\nhexo server\n```\n\n## NexT 테마 적용\n\n프로젝트 root 경로에서\n\n```bash\nnpm install hexo-theme-next\n```\n\n그리고 hexo/\\_config.yml 에서\n\n```yml\ntheme: next\n```\n\n## NexT 테마 커스터마이징 (기본)\n\n[NexT docs](https://theme-next.js.org/docs/getting-started/)를 참고하여 커스터마이징.\n대부분의 기본 옵션은 \\_config.next.yml에 명시되어있어서, flag나 값을 바꿔주는 방식으로 쉽게 변경이 가능하다.\n\n## NexT 테마 커스터마이징 (고오급)\n\nstyle이나 html을 추가하고 싶은 경우, \\_config.next.yml에서 아래의 항목을 주석 해제하고 해당 경로에 파일을 만들어서 추가하고 싶은 style이나 html을 넣어주면 된다.\n\n```yml\ncustom_file_path:\n  head: source/_data/head.njk\n  #header: source/_data/header.njk\n  #sidebar: source/_data/sidebar.njk\n  #postMeta: source/_data/post-meta.njk\n  #postBodyEnd: source/_data/post-body-end.njk\n  #footer: source/_data/footer.njk\n  #bodyEnd: source/_data/body-end.njk\n  variable: source/_data/variables.styl\n  #mixin: source/_data/mixins.styl\n  style: source/_data/styles.styl\n```\n\n예를 들어 나는 google AdSense를 추가하고 싶었는데, html head 태그 안에 script를 넣을 방법이 필요했다.\n그럴때 위 의 custom_file_path 에서 head 항목을 주석 해제하고 해당 경로에 head.njk 파일을 만들어준 다음 아래와 같이 입력해주면\n\n```html\n<meta name=\"google-site-verification\" content=\"some_value\" />\n<script\n  async\n  src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=some_value\"\n  crossorigin=\"anonymous\"\n></script>\n```\n\n`hexo generate`명령어 수행 시 위의 html 코드가 head 하단에 삽입된다.\n\n또, style 커스터마이징도 동일한 방법으로 가능하다.\ncustom_file_path 에서 style 항목을 주석 해제하고 해당 경로에 variables.styl 파일을 만들어준 다음 아래와 같이 입력해주면\n\n```stylus\n.search-popup\n    padding: 20px;\n```\n\n`hexo generate`명령어 수행 시 원하는대로 style이 잘 변경된 것을 확인할 수 있다.\n\n+) 위의 방법으로 style 커스터마이징을 하면 전반적인 통일성이 깨지므로 theme 사용의 이점이 퇴색될 수 있을 것 같아서 좀 더 찾아봤는데 (.node_modules/hexo-theme-next 에서 직접 열어볼 수 있다. )\n기본적으로 font family나 size, 대표 color 는 variable로 관리되고 있음을 확인할 수 있었다. 따라서 테마 색상, 폰트 정도만 변경하고자 한다면 variables.styl에 아래와 같이 써주는게 좋겠다.\n\n```stylus\n$theme-color = #FFD460;\n$brand-color = #2D4059;\n$text-color = #2D4059;\n$font-family-chinese = 'IBM Plex Sans KR', sans-serif;\n$font-family-base         = $font-family-chinese;\n$font-family-logo         = $font-family-chinese;\n$font-family-headings     = $font-family-chinese;\n$font-family-posts        = $font-family-chinese;\n```\n\n## github page 배포\n\n\\_config.yml에 deploy target을 명시한다.\n\n```yaml\ndeploy:\n  type: git\n  repo: https://github.com/ga0hyeon/ga0hyeon.github.io.git\n  branch: gh-pages\n```\n\ndeployer를 설치하고\n\n```bash\nnpm install hexo-deployer-git\n```\n\n배포 명령어를 수행하면 끝이다.\n\n```bash\nhexo generate\nhexo deploy\n```\n\n+) github credential 설정이 되어있지 않은 경우 에러 메시지가 발생할 수 있다. 흔한 에러이므로 구글링하면 금방 해결 가능하다.\n\n## (2022.09.02 추가) highlight.js 적용하기\n\n개발 블로그이다 보니 코드 블럭을 매우 자주 사용하는데, 색이 없으니 못생겨보여서 테마를 적용했다.\n[테마 목록](https://theme-next.js.org/highlight/)중에 원하는 것을 고른뒤 아래 html의 `{스타일명}` 자리에 넣어주면 된다. 나는 rainbow를 선택했다 ㅎㅎ\n\n```yaml\nhighlight:\n  enable: true\n\nprismjs:\n  enable: false\n\ncodeblock:\n  # Code Highlight theme\n  # All available themes: https://theme-next.js.org/highlight/\n  theme:\n    light: { 스타일명 }\n    dark: { 스타일명 }\n  # Add copy button on codeblock\n  copy_button:\n    enable: true\n    # Available values: default | flat | mac\n    style:\n```\n\n# 그리고 더 해야할일\n\n- [ ] github actions로 배포 자동화하기\n- [ ] 사이드바에 category tree가 보이게 하고싶다!\n","source":"_posts/ToyProjects/Blog/hexo.md","raw":"---\ntitle: \"[Hexo] Hexo와 NexT 테마를 이용하여 내 입맛에 맞는 개발 블로그를 만들자\"\ndate: 2022-01-12 14:24:10\ncategories: [개발일지, 블로그]\ntags: [Hexo, NexT]\n---\n\n# MOTIVATION\n\n개발 블로그를 시작했을 때부터 tistory를 애용해왔는데, 최근 들어서는 좀 더 **놀이터** 같은 느낌의 블로그를 갖고 싶다는 생각이 들었음.\n그래서 작년(2021년) 상반기 즈음 사이드 프로젝트로 *내 웹페이지를 만들어보자*는 계획을 세우게 되었고, 미루고 미루다가 드디어 올해(2022년) 첫 사이드 프로젝트로 다시 꺼내게 되었다.\n\n# 요구사항\n\n고객(나)과 개발자(이것도 나)의 입장에서 여러가지 옵션을 재보았던 내용은 아래와 같다.\n\n**서버 비용은 들이고 싶지 않아요**\n\n- 처음에는 집에 굴러다니는 라즈베리파이에 올릴까 생각도 했는데 의외로 나도 모르는 사이에 전원을 꺼버리는 일이 잦고, update 하려면 서버에 붙어야한다는 점이 너무 번거로워서 몇 번 해보고 포기했다.\n- 정적 웹 사이트를 무료로 deploy할 수 있는 github page 를 선택하게 되었다. 나만 안쓰고 있었어...\n\n**웹사이트 구성을 직접 하는 건 어려울 것 같은데?**\n\n- 이것도 처음에는 내 취지 (**놀이터** 같은 블로그)에 맞게 처음부터 다 구성하려고 했었다. 하지만 막상 손을 대고 보니 고려할 부분이 정말정말 많더라... 검색이나 태그, 카테고리 기능을 추가하려고 하니까 구조를 잡는 것이 너무 부담스럽게 느껴졌다.\n- 검색 성능이 보장되는 태그나 카테고리를 구성하기 위해서 알고리즘과 자료구조부터 찾아봤고, 서버 비용을 들이더라도 elastic search 를 한 번 써볼까 spike도 해봤는데 ㅠㅠ 공부할 내용이 꽤 되는 것은 둘째치고 재미가 없었다. 그래서 얼마안가 포기.\n\n**정적 웹 사이트 생성기의 도움을 받자**\n\n- github page를 사용하기로 정했을 때 Jekyll로 대표되는 정적 웹 사이트 생성기에 대해서 함께 찾아본 적은 있는데, theme가 모두 마음에 들지 않았던 것 같다.\n- 몇 개월 뒤에 검색 기능 구현에 지쳐서 찬찬히 다시 찾아봤는데, [Hexo](https://hexo.io/ko/index.html) 라는 정적 웹 사이트 생성기에 [NexT](https://theme-next.js.org/) theme이 눈에 들었다.\n\nHexo 및 NexT 모두 가이드가 잘 되어있는 편이라, 이틀 정도로 github deploy 까지 완료 가능했다.\n\n# 진행내용\n\n## Hexo 프로젝트 생성 및 구동\n\n```bash\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install\nhexo server\n```\n\n## NexT 테마 적용\n\n프로젝트 root 경로에서\n\n```bash\nnpm install hexo-theme-next\n```\n\n그리고 hexo/\\_config.yml 에서\n\n```yml\ntheme: next\n```\n\n## NexT 테마 커스터마이징 (기본)\n\n[NexT docs](https://theme-next.js.org/docs/getting-started/)를 참고하여 커스터마이징.\n대부분의 기본 옵션은 \\_config.next.yml에 명시되어있어서, flag나 값을 바꿔주는 방식으로 쉽게 변경이 가능하다.\n\n## NexT 테마 커스터마이징 (고오급)\n\nstyle이나 html을 추가하고 싶은 경우, \\_config.next.yml에서 아래의 항목을 주석 해제하고 해당 경로에 파일을 만들어서 추가하고 싶은 style이나 html을 넣어주면 된다.\n\n```yml\ncustom_file_path:\n  head: source/_data/head.njk\n  #header: source/_data/header.njk\n  #sidebar: source/_data/sidebar.njk\n  #postMeta: source/_data/post-meta.njk\n  #postBodyEnd: source/_data/post-body-end.njk\n  #footer: source/_data/footer.njk\n  #bodyEnd: source/_data/body-end.njk\n  variable: source/_data/variables.styl\n  #mixin: source/_data/mixins.styl\n  style: source/_data/styles.styl\n```\n\n예를 들어 나는 google AdSense를 추가하고 싶었는데, html head 태그 안에 script를 넣을 방법이 필요했다.\n그럴때 위 의 custom_file_path 에서 head 항목을 주석 해제하고 해당 경로에 head.njk 파일을 만들어준 다음 아래와 같이 입력해주면\n\n```html\n<meta name=\"google-site-verification\" content=\"some_value\" />\n<script\n  async\n  src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=some_value\"\n  crossorigin=\"anonymous\"\n></script>\n```\n\n`hexo generate`명령어 수행 시 위의 html 코드가 head 하단에 삽입된다.\n\n또, style 커스터마이징도 동일한 방법으로 가능하다.\ncustom_file_path 에서 style 항목을 주석 해제하고 해당 경로에 variables.styl 파일을 만들어준 다음 아래와 같이 입력해주면\n\n```stylus\n.search-popup\n    padding: 20px;\n```\n\n`hexo generate`명령어 수행 시 원하는대로 style이 잘 변경된 것을 확인할 수 있다.\n\n+) 위의 방법으로 style 커스터마이징을 하면 전반적인 통일성이 깨지므로 theme 사용의 이점이 퇴색될 수 있을 것 같아서 좀 더 찾아봤는데 (.node_modules/hexo-theme-next 에서 직접 열어볼 수 있다. )\n기본적으로 font family나 size, 대표 color 는 variable로 관리되고 있음을 확인할 수 있었다. 따라서 테마 색상, 폰트 정도만 변경하고자 한다면 variables.styl에 아래와 같이 써주는게 좋겠다.\n\n```stylus\n$theme-color = #FFD460;\n$brand-color = #2D4059;\n$text-color = #2D4059;\n$font-family-chinese = 'IBM Plex Sans KR', sans-serif;\n$font-family-base         = $font-family-chinese;\n$font-family-logo         = $font-family-chinese;\n$font-family-headings     = $font-family-chinese;\n$font-family-posts        = $font-family-chinese;\n```\n\n## github page 배포\n\n\\_config.yml에 deploy target을 명시한다.\n\n```yaml\ndeploy:\n  type: git\n  repo: https://github.com/ga0hyeon/ga0hyeon.github.io.git\n  branch: gh-pages\n```\n\ndeployer를 설치하고\n\n```bash\nnpm install hexo-deployer-git\n```\n\n배포 명령어를 수행하면 끝이다.\n\n```bash\nhexo generate\nhexo deploy\n```\n\n+) github credential 설정이 되어있지 않은 경우 에러 메시지가 발생할 수 있다. 흔한 에러이므로 구글링하면 금방 해결 가능하다.\n\n## (2022.09.02 추가) highlight.js 적용하기\n\n개발 블로그이다 보니 코드 블럭을 매우 자주 사용하는데, 색이 없으니 못생겨보여서 테마를 적용했다.\n[테마 목록](https://theme-next.js.org/highlight/)중에 원하는 것을 고른뒤 아래 html의 `{스타일명}` 자리에 넣어주면 된다. 나는 rainbow를 선택했다 ㅎㅎ\n\n```yaml\nhighlight:\n  enable: true\n\nprismjs:\n  enable: false\n\ncodeblock:\n  # Code Highlight theme\n  # All available themes: https://theme-next.js.org/highlight/\n  theme:\n    light: { 스타일명 }\n    dark: { 스타일명 }\n  # Add copy button on codeblock\n  copy_button:\n    enable: true\n    # Available values: default | flat | mac\n    style:\n```\n\n# 그리고 더 해야할일\n\n- [ ] github actions로 배포 자동화하기\n- [ ] 사이드바에 category tree가 보이게 하고싶다!\n","slug":"ToyProjects/Blog/hexo","published":1,"updated":"2023-01-22T14:02:02.922Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2s3001itqwebwby7gdm","content":"<h1 id=\"MOTIVATION\"><a href=\"#MOTIVATION\" class=\"headerlink\" title=\"MOTIVATION\"></a>MOTIVATION</h1><p>개발 블로그를 시작했을 때부터 tistory를 애용해왔는데, 최근 들어서는 좀 더 <strong>놀이터</strong> 같은 느낌의 블로그를 갖고 싶다는 생각이 들었음.<br>그래서 작년(2021년) 상반기 즈음 사이드 프로젝트로 <em>내 웹페이지를 만들어보자</em>는 계획을 세우게 되었고, 미루고 미루다가 드디어 올해(2022년) 첫 사이드 프로젝트로 다시 꺼내게 되었다.</p>\n<h1 id=\"요구사항\"><a href=\"#요구사항\" class=\"headerlink\" title=\"요구사항\"></a>요구사항</h1><p>고객(나)과 개발자(이것도 나)의 입장에서 여러가지 옵션을 재보았던 내용은 아래와 같다.</p>\n<p><strong>서버 비용은 들이고 싶지 않아요</strong></p>\n<ul>\n<li>처음에는 집에 굴러다니는 라즈베리파이에 올릴까 생각도 했는데 의외로 나도 모르는 사이에 전원을 꺼버리는 일이 잦고, update 하려면 서버에 붙어야한다는 점이 너무 번거로워서 몇 번 해보고 포기했다.</li>\n<li>정적 웹 사이트를 무료로 deploy할 수 있는 github page 를 선택하게 되었다. 나만 안쓰고 있었어…</li>\n</ul>\n<p><strong>웹사이트 구성을 직접 하는 건 어려울 것 같은데?</strong></p>\n<ul>\n<li>이것도 처음에는 내 취지 (<strong>놀이터</strong> 같은 블로그)에 맞게 처음부터 다 구성하려고 했었다. 하지만 막상 손을 대고 보니 고려할 부분이 정말정말 많더라… 검색이나 태그, 카테고리 기능을 추가하려고 하니까 구조를 잡는 것이 너무 부담스럽게 느껴졌다.</li>\n<li>검색 성능이 보장되는 태그나 카테고리를 구성하기 위해서 알고리즘과 자료구조부터 찾아봤고, 서버 비용을 들이더라도 elastic search 를 한 번 써볼까 spike도 해봤는데 ㅠㅠ 공부할 내용이 꽤 되는 것은 둘째치고 재미가 없었다. 그래서 얼마안가 포기.</li>\n</ul>\n<p><strong>정적 웹 사이트 생성기의 도움을 받자</strong></p>\n<ul>\n<li>github page를 사용하기로 정했을 때 Jekyll로 대표되는 정적 웹 사이트 생성기에 대해서 함께 찾아본 적은 있는데, theme가 모두 마음에 들지 않았던 것 같다.</li>\n<li>몇 개월 뒤에 검색 기능 구현에 지쳐서 찬찬히 다시 찾아봤는데, <a href=\"https://hexo.io/ko/index.html\">Hexo</a> 라는 정적 웹 사이트 생성기에 <a href=\"https://theme-next.js.org/\">NexT</a> theme이 눈에 들었다.</li>\n</ul>\n<p>Hexo 및 NexT 모두 가이드가 잘 되어있는 편이라, 이틀 정도로 github deploy 까지 완료 가능했다.</p>\n<h1 id=\"진행내용\"><a href=\"#진행내용\" class=\"headerlink\" title=\"진행내용\"></a>진행내용</h1><h2 id=\"Hexo-프로젝트-생성-및-구동\"><a href=\"#Hexo-프로젝트-생성-및-구동\" class=\"headerlink\" title=\"Hexo 프로젝트 생성 및 구동\"></a>Hexo 프로젝트 생성 및 구동</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\"><span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"NexT-테마-적용\"><a href=\"#NexT-테마-적용\" class=\"headerlink\" title=\"NexT 테마 적용\"></a>NexT 테마 적용</h2><p>프로젝트 root 경로에서</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-theme-next</span><br></pre></td></tr></table></figure>\n\n<p>그리고 hexo/_config.yml 에서</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">next</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"NexT-테마-커스터마이징-기본\"><a href=\"#NexT-테마-커스터마이징-기본\" class=\"headerlink\" title=\"NexT 테마 커스터마이징 (기본)\"></a>NexT 테마 커스터마이징 (기본)</h2><p><a href=\"https://theme-next.js.org/docs/getting-started/\">NexT docs</a>를 참고하여 커스터마이징.<br>대부분의 기본 옵션은 _config.next.yml에 명시되어있어서, flag나 값을 바꿔주는 방식으로 쉽게 변경이 가능하다.</p>\n<h2 id=\"NexT-테마-커스터마이징-고오급\"><a href=\"#NexT-테마-커스터마이징-고오급\" class=\"headerlink\" title=\"NexT 테마 커스터마이징 (고오급)\"></a>NexT 테마 커스터마이징 (고오급)</h2><p>style이나 html을 추가하고 싶은 경우, _config.next.yml에서 아래의 항목을 주석 해제하고 해당 경로에 파일을 만들어서 추가하고 싶은 style이나 html을 넣어주면 된다.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_file_path:</span></span><br><span class=\"line\">  <span class=\"attr\">head:</span> <span class=\"string\">source/_data/head.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#header: source/_data/header.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#sidebar: source/_data/sidebar.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#postMeta: source/_data/post-meta.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#postBodyEnd: source/_data/post-body-end.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#footer: source/_data/footer.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#bodyEnd: source/_data/body-end.njk</span></span><br><span class=\"line\">  <span class=\"attr\">variable:</span> <span class=\"string\">source/_data/variables.styl</span></span><br><span class=\"line\">  <span class=\"comment\">#mixin: source/_data/mixins.styl</span></span><br><span class=\"line\">  <span class=\"attr\">style:</span> <span class=\"string\">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>\n\n<p>예를 들어 나는 google AdSense를 추가하고 싶었는데, html head 태그 안에 script를 넣을 방법이 필요했다.<br>그럴때 위 의 custom_file_path 에서 head 항목을 주석 해제하고 해당 경로에 head.njk 파일을 만들어준 다음 아래와 같이 입력해주면</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;google-site-verification&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;some_value&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">async</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=some_value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>hexo generate</code>명령어 수행 시 위의 html 코드가 head 하단에 삽입된다.</p>\n<p>또, style 커스터마이징도 동일한 방법으로 가능하다.<br>custom_file_path 에서 style 항목을 주석 해제하고 해당 경로에 variables.styl 파일을 만들어준 다음 아래와 같이 입력해주면</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.search-popup</span></span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br></pre></td></tr></table></figure>\n\n<p><code>hexo generate</code>명령어 수행 시 원하는대로 style이 잘 변경된 것을 확인할 수 있다.</p>\n<p>+) 위의 방법으로 style 커스터마이징을 하면 전반적인 통일성이 깨지므로 theme 사용의 이점이 퇴색될 수 있을 것 같아서 좀 더 찾아봤는데 (.node_modules/hexo-theme-next 에서 직접 열어볼 수 있다. )<br>기본적으로 font family나 size, 대표 color 는 variable로 관리되고 있음을 확인할 수 있었다. 따라서 테마 색상, 폰트 정도만 변경하고자 한다면 variables.styl에 아래와 같이 써주는게 좋겠다.</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$theme</span>-<span class=\"attribute\">color</span> = <span class=\"number\">#FFD460</span>;</span><br><span class=\"line\"><span class=\"variable\">$brand</span>-<span class=\"attribute\">color</span> = <span class=\"number\">#2D4059</span>;</span><br><span class=\"line\"><span class=\"variable\">$text</span>-<span class=\"attribute\">color</span> = <span class=\"number\">#2D4059</span>;</span><br><span class=\"line\"><span class=\"variable\">$font</span>-family-chinese = <span class=\"string\">&#x27;IBM Plex Sans KR&#x27;</span>, sans-serif;</span><br><span class=\"line\"><span class=\"variable\">$font</span>-family-base         = <span class=\"variable\">$font</span>-family-chinese;</span><br><span class=\"line\"><span class=\"variable\">$font</span>-family-logo         = <span class=\"variable\">$font</span>-family-chinese;</span><br><span class=\"line\"><span class=\"variable\">$font</span>-family-headings     = <span class=\"variable\">$font</span>-family-chinese;</span><br><span class=\"line\"><span class=\"variable\">$font</span>-family-posts        = <span class=\"variable\">$font</span>-family-chinese;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"github-page-배포\"><a href=\"#github-page-배포\" class=\"headerlink\" title=\"github page 배포\"></a>github page 배포</h2><p>_config.yml에 deploy target을 명시한다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/ga0hyeon/ga0hyeon.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">gh-pages</span></span><br></pre></td></tr></table></figure>\n\n<p>deployer를 설치하고</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure>\n\n<p>배포 명령어를 수행하면 끝이다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>+) github credential 설정이 되어있지 않은 경우 에러 메시지가 발생할 수 있다. 흔한 에러이므로 구글링하면 금방 해결 가능하다.</p>\n<h2 id=\"2022-09-02-추가-highlight-js-적용하기\"><a href=\"#2022-09-02-추가-highlight-js-적용하기\" class=\"headerlink\" title=\"(2022.09.02 추가) highlight.js 적용하기\"></a>(2022.09.02 추가) highlight.js 적용하기</h2><p>개발 블로그이다 보니 코드 블럭을 매우 자주 사용하는데, 색이 없으니 못생겨보여서 테마를 적용했다.<br><a href=\"https://theme-next.js.org/highlight/\">테마 목록</a>중에 원하는 것을 고른뒤 아래 html의 <code>&#123;스타일명&#125;</code> 자리에 넣어주면 된다. 나는 rainbow를 선택했다 ㅎㅎ</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">prismjs:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">codeblock:</span></span><br><span class=\"line\">  <span class=\"comment\"># Code Highlight theme</span></span><br><span class=\"line\">  <span class=\"comment\"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span></span><br><span class=\"line\">    <span class=\"attr\">light:</span> &#123; <span class=\"string\">스타일명</span> &#125;</span><br><span class=\"line\">    <span class=\"attr\">dark:</span> &#123; <span class=\"string\">스타일명</span> &#125;</span><br><span class=\"line\">  <span class=\"comment\"># Add copy button on codeblock</span></span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># Available values: default | flat | mac</span></span><br><span class=\"line\">    <span class=\"attr\">style:</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"그리고-더-해야할일\"><a href=\"#그리고-더-해야할일\" class=\"headerlink\" title=\"그리고 더 해야할일\"></a>그리고 더 해야할일</h1><ul>\n<li><input disabled=\"\" type=\"checkbox\"> github actions로 배포 자동화하기</li>\n<li><input disabled=\"\" type=\"checkbox\"> 사이드바에 category tree가 보이게 하고싶다!</li>\n</ul>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"MOTIVATION\"><a href=\"#MOTIVATION\" class=\"headerlink\" title=\"MOTIVATION\"></a>MOTIVATION</h1><p>개발 블로그를 시작했을 때부터 tistory를 애용해왔는데, 최근 들어서는 좀 더 <strong>놀이터</strong> 같은 느낌의 블로그를 갖고 싶다는 생각이 들었음.<br>그래서 작년(2021년) 상반기 즈음 사이드 프로젝트로 <em>내 웹페이지를 만들어보자</em>는 계획을 세우게 되었고, 미루고 미루다가 드디어 올해(2022년) 첫 사이드 프로젝트로 다시 꺼내게 되었다.</p>\n<h1 id=\"요구사항\"><a href=\"#요구사항\" class=\"headerlink\" title=\"요구사항\"></a>요구사항</h1><p>고객(나)과 개발자(이것도 나)의 입장에서 여러가지 옵션을 재보았던 내용은 아래와 같다.</p>\n<p><strong>서버 비용은 들이고 싶지 않아요</strong></p>\n<ul>\n<li>처음에는 집에 굴러다니는 라즈베리파이에 올릴까 생각도 했는데 의외로 나도 모르는 사이에 전원을 꺼버리는 일이 잦고, update 하려면 서버에 붙어야한다는 점이 너무 번거로워서 몇 번 해보고 포기했다.</li>\n<li>정적 웹 사이트를 무료로 deploy할 수 있는 github page 를 선택하게 되었다. 나만 안쓰고 있었어…</li>\n</ul>\n<p><strong>웹사이트 구성을 직접 하는 건 어려울 것 같은데?</strong></p>\n<ul>\n<li>이것도 처음에는 내 취지 (<strong>놀이터</strong> 같은 블로그)에 맞게 처음부터 다 구성하려고 했었다. 하지만 막상 손을 대고 보니 고려할 부분이 정말정말 많더라… 검색이나 태그, 카테고리 기능을 추가하려고 하니까 구조를 잡는 것이 너무 부담스럽게 느껴졌다.</li>\n<li>검색 성능이 보장되는 태그나 카테고리를 구성하기 위해서 알고리즘과 자료구조부터 찾아봤고, 서버 비용을 들이더라도 elastic search 를 한 번 써볼까 spike도 해봤는데 ㅠㅠ 공부할 내용이 꽤 되는 것은 둘째치고 재미가 없었다. 그래서 얼마안가 포기.</li>\n</ul>\n<p><strong>정적 웹 사이트 생성기의 도움을 받자</strong></p>\n<ul>\n<li>github page를 사용하기로 정했을 때 Jekyll로 대표되는 정적 웹 사이트 생성기에 대해서 함께 찾아본 적은 있는데, theme가 모두 마음에 들지 않았던 것 같다.</li>\n<li>몇 개월 뒤에 검색 기능 구현에 지쳐서 찬찬히 다시 찾아봤는데, <a href=\"https://hexo.io/ko/index.html\">Hexo</a> 라는 정적 웹 사이트 생성기에 <a href=\"https://theme-next.js.org/\">NexT</a> theme이 눈에 들었다.</li>\n</ul>\n<p>Hexo 및 NexT 모두 가이드가 잘 되어있는 편이라, 이틀 정도로 github deploy 까지 완료 가능했다.</p>\n<h1 id=\"진행내용\"><a href=\"#진행내용\" class=\"headerlink\" title=\"진행내용\"></a>진행내용</h1><h2 id=\"Hexo-프로젝트-생성-및-구동\"><a href=\"#Hexo-프로젝트-생성-및-구동\" class=\"headerlink\" title=\"Hexo 프로젝트 생성 및 구동\"></a>Hexo 프로젝트 생성 및 구동</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\"><span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"NexT-테마-적용\"><a href=\"#NexT-테마-적용\" class=\"headerlink\" title=\"NexT 테마 적용\"></a>NexT 테마 적용</h2><p>프로젝트 root 경로에서</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-theme-next</span><br></pre></td></tr></table></figure>\n\n<p>그리고 hexo/_config.yml 에서</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">next</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"NexT-테마-커스터마이징-기본\"><a href=\"#NexT-테마-커스터마이징-기본\" class=\"headerlink\" title=\"NexT 테마 커스터마이징 (기본)\"></a>NexT 테마 커스터마이징 (기본)</h2><p><a href=\"https://theme-next.js.org/docs/getting-started/\">NexT docs</a>를 참고하여 커스터마이징.<br>대부분의 기본 옵션은 _config.next.yml에 명시되어있어서, flag나 값을 바꿔주는 방식으로 쉽게 변경이 가능하다.</p>\n<h2 id=\"NexT-테마-커스터마이징-고오급\"><a href=\"#NexT-테마-커스터마이징-고오급\" class=\"headerlink\" title=\"NexT 테마 커스터마이징 (고오급)\"></a>NexT 테마 커스터마이징 (고오급)</h2><p>style이나 html을 추가하고 싶은 경우, _config.next.yml에서 아래의 항목을 주석 해제하고 해당 경로에 파일을 만들어서 추가하고 싶은 style이나 html을 넣어주면 된다.</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_file_path:</span></span><br><span class=\"line\">  <span class=\"attr\">head:</span> <span class=\"string\">source/_data/head.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#header: source/_data/header.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#sidebar: source/_data/sidebar.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#postMeta: source/_data/post-meta.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#postBodyEnd: source/_data/post-body-end.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#footer: source/_data/footer.njk</span></span><br><span class=\"line\">  <span class=\"comment\">#bodyEnd: source/_data/body-end.njk</span></span><br><span class=\"line\">  <span class=\"attr\">variable:</span> <span class=\"string\">source/_data/variables.styl</span></span><br><span class=\"line\">  <span class=\"comment\">#mixin: source/_data/mixins.styl</span></span><br><span class=\"line\">  <span class=\"attr\">style:</span> <span class=\"string\">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>\n\n<p>예를 들어 나는 google AdSense를 추가하고 싶었는데, html head 태그 안에 script를 넣을 방법이 필요했다.<br>그럴때 위 의 custom_file_path 에서 head 항목을 주석 해제하고 해당 경로에 head.njk 파일을 만들어준 다음 아래와 같이 입력해주면</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;google-site-verification&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;some_value&quot;</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">async</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=some_value&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">crossorigin</span>=<span class=\"string\">&quot;anonymous&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>hexo generate</code>명령어 수행 시 위의 html 코드가 head 하단에 삽입된다.</p>\n<p>또, style 커스터마이징도 동일한 방법으로 가능하다.<br>custom_file_path 에서 style 항목을 주석 해제하고 해당 경로에 variables.styl 파일을 만들어준 다음 아래와 같이 입력해주면</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.search-popup</span></span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">20px</span>;</span><br></pre></td></tr></table></figure>\n\n<p><code>hexo generate</code>명령어 수행 시 원하는대로 style이 잘 변경된 것을 확인할 수 있다.</p>\n<p>+) 위의 방법으로 style 커스터마이징을 하면 전반적인 통일성이 깨지므로 theme 사용의 이점이 퇴색될 수 있을 것 같아서 좀 더 찾아봤는데 (.node_modules/hexo-theme-next 에서 직접 열어볼 수 있다. )<br>기본적으로 font family나 size, 대표 color 는 variable로 관리되고 있음을 확인할 수 있었다. 따라서 테마 색상, 폰트 정도만 변경하고자 한다면 variables.styl에 아래와 같이 써주는게 좋겠다.</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$theme</span>-<span class=\"attribute\">color</span> = <span class=\"number\">#FFD460</span>;</span><br><span class=\"line\"><span class=\"variable\">$brand</span>-<span class=\"attribute\">color</span> = <span class=\"number\">#2D4059</span>;</span><br><span class=\"line\"><span class=\"variable\">$text</span>-<span class=\"attribute\">color</span> = <span class=\"number\">#2D4059</span>;</span><br><span class=\"line\"><span class=\"variable\">$font</span>-family-chinese = <span class=\"string\">&#x27;IBM Plex Sans KR&#x27;</span>, sans-serif;</span><br><span class=\"line\"><span class=\"variable\">$font</span>-family-base         = <span class=\"variable\">$font</span>-family-chinese;</span><br><span class=\"line\"><span class=\"variable\">$font</span>-family-logo         = <span class=\"variable\">$font</span>-family-chinese;</span><br><span class=\"line\"><span class=\"variable\">$font</span>-family-headings     = <span class=\"variable\">$font</span>-family-chinese;</span><br><span class=\"line\"><span class=\"variable\">$font</span>-family-posts        = <span class=\"variable\">$font</span>-family-chinese;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"github-page-배포\"><a href=\"#github-page-배포\" class=\"headerlink\" title=\"github page 배포\"></a>github page 배포</h2><p>_config.yml에 deploy target을 명시한다.</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/ga0hyeon/ga0hyeon.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">gh-pages</span></span><br></pre></td></tr></table></figure>\n\n<p>deployer를 설치하고</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure>\n\n<p>배포 명령어를 수행하면 끝이다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>+) github credential 설정이 되어있지 않은 경우 에러 메시지가 발생할 수 있다. 흔한 에러이므로 구글링하면 금방 해결 가능하다.</p>\n<h2 id=\"2022-09-02-추가-highlight-js-적용하기\"><a href=\"#2022-09-02-추가-highlight-js-적용하기\" class=\"headerlink\" title=\"(2022.09.02 추가) highlight.js 적용하기\"></a>(2022.09.02 추가) highlight.js 적용하기</h2><p>개발 블로그이다 보니 코드 블럭을 매우 자주 사용하는데, 색이 없으니 못생겨보여서 테마를 적용했다.<br><a href=\"https://theme-next.js.org/highlight/\">테마 목록</a>중에 원하는 것을 고른뒤 아래 html의 <code>&#123;스타일명&#125;</code> 자리에 넣어주면 된다. 나는 rainbow를 선택했다 ㅎㅎ</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">highlight:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">prismjs:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">codeblock:</span></span><br><span class=\"line\">  <span class=\"comment\"># Code Highlight theme</span></span><br><span class=\"line\">  <span class=\"comment\"># All available themes: https://theme-next.js.org/highlight/</span></span><br><span class=\"line\">  <span class=\"attr\">theme:</span></span><br><span class=\"line\">    <span class=\"attr\">light:</span> &#123; <span class=\"string\">스타일명</span> &#125;</span><br><span class=\"line\">    <span class=\"attr\">dark:</span> &#123; <span class=\"string\">스타일명</span> &#125;</span><br><span class=\"line\">  <span class=\"comment\"># Add copy button on codeblock</span></span><br><span class=\"line\">  <span class=\"attr\">copy_button:</span></span><br><span class=\"line\">    <span class=\"attr\">enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># Available values: default | flat | mac</span></span><br><span class=\"line\">    <span class=\"attr\">style:</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"그리고-더-해야할일\"><a href=\"#그리고-더-해야할일\" class=\"headerlink\" title=\"그리고 더 해야할일\"></a>그리고 더 해야할일</h1><ul>\n<li><input disabled=\"\" type=\"checkbox\"> github actions로 배포 자동화하기</li>\n<li><input disabled=\"\" type=\"checkbox\"> 사이드바에 category tree가 보이게 하고싶다!</li>\n</ul>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:02:02 GMT+0900 (대한민국 표준시)","title":"[Hexo] Hexo와 NexT 테마를 이용하여 내 입맛에 맞는 개발 블로그를 만들자","path":"2022/01/12/ToyProjects/Blog/hexo/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-01-12T05:24:10.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-01-12T05:24:10.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"개발일지 > 블로그","tags":["Hexo","NexT"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[토이프로젝트] 개더타운 클론코딩 - 1","date":"2022-07-19T17:14:38.000Z","_content":"\n# MOTIVATION\n\n나는 코딩이던 미싱이던 그림이던 단시간에 머리를 풀가동해서 결과물을 끌어내는것을 좋아한다.  \n사실 이런 챌린지를 기획할 때 제일 어려운 점은 목표를 정하는 것이다. 끝내는 데에 시간이 N시간 정도면 되겠다 싶으면서도 그 시간 동안 끊임없이 흥미와 도전정신을 끌어올릴 수 있는 목표를 정해야하기 때문이다. 말 그대로 시작이 반인 셈 ㅎㅎ\n\n멘탈 상태가 좋을 때는 이런 아이디어가 샘솟는데 최근에는 이래저래 의욕이 하나도 없어서 침체되어있다가... 간만에 주말에 시간이 생겨서 일을 벌려 보았다.\n\n요즘 업무하면서 정말 유용하게 사용하고 있는 개더타운을 참고하여 화상채팅 웹사이트를 구현해보려고 한다. 이런 주제를 선정하게 된 이유는 다음과 같다.\n\n- 정제된 전체 가이드나 소스가 흔히 돌아다니지 않는 듯 하다. 개발하면서 제일 꿀맛은 개척하는 맛이니까\n- 평소에 궁금했던 웹 기술 분야를 세 개나 체험할 수 있다.\n  - WebSocket 통신 (을 사용하는 줄 알았지만 뒤에 가서 WebRTC 라는 것을 깨닫게 될 예정) 체험하기\n  - HTML5 게임 개발 라이브러리 또는 프레임워크 서칭 및 체험하기\n  - 인기 있는 디자인 시스템 서칭 및 체험하기\n\n# PREPARATION\n\n## 개더타운은 무엇으로 만들어져있나?\n\nREST api를 주로 설계/개발해왔기 때문에 실시간 통신에 대해 아는 것이 없어서, 막연하게 '개더타운은 WebSocket으로 뭔가 되어있지 않을까?' 라고 생각했다.  \n물론 그러면서도 어떻게 그 많은 사람이 음성 / 비디오를 서로 전송하고 있을까... 서버가 중간에서 이 많은 미디어를 다 나누어주고 있다면 개더타운은 어떻게 공짜인걸까... 생각은 했으나 그 뒤까지는 몰랐다.\n찾아보니 개더타운은 P2P로 미디어 또는 임의의 데이터를 주고받을 수 있는 WebRTC를 사용하고 있고, WebRTC은 이미 오래전부터 많은 곳에서 (게임, 화상회의, 휘발성 채팅) 쓰이고 있다고 한다. 떠올려보니 회의 참여자 중 로컬 자원을 많이 쓰고 있는 사람이 포함되어 있을 때 내 게더타운이 약간 느려지는 현상이 종종 있었는데 P2P라서 그랬던 걸 수 있다는 생각이 든다.\n\n메인 기술 셋을 알아냈으니 WebRTC에 대해 구글링해봤다. 생각보다 공식 가이드 및 샘플이 탄탄해서 처음 접하는 기술임에도 왠지 순탄히 진행될 것 같다. 찾은 리소스는 아래와 같이 리스트업 해둔다.\n\n- [잘 정리된 공식 가이드](https://webrtc.org/getting-started/firebase-rtc-codelab)\n- [잘 정리된 공식 샘플코드](https://webrtc.github.io/samples)\n- [Mozilla의 WebRTC 설명](https://developer.mozilla.org/ko/docs/Web/API/WebRTC_API/Signaling_and_video_calling)\n\n## 어떻게 만들까?\n\n개더타운에 접속해서 F12도 켜보고, 구글링으로 찾은 가이드도 읽어어 보니 어느정도 아키텍처는 그려진 것 같다.\n<image src=\"/images/webrtc_layout.png\" />\n각 항목에 대한 설명은 다음과 같다.\n\n- Signaling Server 구성 : **Django with djangoRestFramework**\n  WebRTC 자체는 P2P 방식이라 미디어 교환 자체를 위해서는 중간다리 역할을 하는 서버가 필요없지만, 맨 처음 통신을 시작할 때 Client 간의 메시지 포맷 등을 협의 (Signaling) 하기 위한 서버가 필요하다고 한다. 요건 오랜만에 Django로 만들어보기로 한다.\n- 화면구성\n  - 뼈대 : **React.js with Chakra UI**\n    화면 디자인 및 스타일링 작업도 재미있고 신나는 일이지만 요즘 표준 없는 UX/UI (정확히는 FE 개발자 - UX/UI 협업 표준의 부재(?) 또는 어려움(?)..)에 현타를 느끼고 있어서, 유명한 디자인 시스템을 써보기로 했다. 검색하면 여러 개의 빵빵한 디자인 시스템이 나오는데, 그 중 나는 [Chakra UI](https://www.npmjs.com/package/@chakra-ui/react)를 써보기로 했다.\n  - 맵 및 캐릭터 렌더 : **Phaser**\n    HTML5 게임 개발 라이브러리 / 프레임워크에 대해서도 서칭을 했고, 최종으로는 Phaser와 PixiJS 두 개가 후보에 올랐다. 처음 관심 가져본 분야여서 판단을 내리기 어려웠는데 [요 글](https://stackoverflow.com/questions/38509629/decide-pixi-js-or-phaser)이 큰 도움이 됐다. 내가 이해한 바를 키워드로 요약하자면 편리함(Phaser) vs 자유도(PixiJS) 같다. PixiJS를 쓰면 좀 더 deep하게 이해할 수 있을 것 같아서 10초 정도 고민됐는데, 욕심 같아서 포기했다. 이번에는 Phaser를 사용해보고, 다음에 HTML5 게임 개발이 정말 하고 싶어지면 그때 PixiJS를 써보자.  \n    +) 뜬금없지만 [Phaser 웹사이트](https://phaser.io/)가 너무나 2000년대 감성이다.\n- 미디어 전송 : **WebRTC**\n\n## 무엇부터 어떤 순서로 만들까?\n\n이번 사이드 프로젝트에서 제일 큰 수확이 요 스텝이라고 생각한다. 일정에 쫒기며 떠밀리듯이 개발하는 것이 요즘 내 개발 기피(?)의 원인이라고 생각하기 때문에 토이 프로젝트 만큼은 그렇게 진행하지 않으려고 노력했다. 사실 과거를 돌아보면 나는 토이 프로젝트도 그렇게 일정에 쫒기며 했던 사람이었긴하다 ㅋㅋㅋ 물론 오버웤이 내 의지였냐는 또 다른 문제긴 하지만...\n\n---\n\n아모튼!! 이제는 그렇게 일하지 않으리라.. 다짐하면서 개발에 착수하기 전 내가 한 고민들을 적어보면 다음과 같다.\n\n**고민1️⃣** 다음 중 내가 우선 시 하는 것은 무엇인가?\n\n- 내가 할애하려고 계획한 에포트 이상은 들이지 않고 진행하기\n- 내가 마무리하려고 계획한 날짜까지는 끝내기\n- 내가 계획했던 수준까지는 결과물의 퀄리티 내기\n  - 외적인 퀄리티 (기능성, 사용성, 심미성 등등)\n  - 내적인 퀄리티 (코드 품질)\n\n**고민2️⃣** 목표 기간 내에 효율적이고 빠르게 작업을 하려면 어떻게 일을 쪼개고, 어떤 순서로 일을 해야할까?\n\n**고민3️⃣** 작업 내용이 대부분 내가 처음 해보는 것이라면, 내가 아는 일을 할 때와 어떻게 다르게 일해야할까?\n\n---\n\n그리고 위 고민에 대한 결론은 요렇게 냈다. 물론 앞으로 계속해서 개정해나갈 예정이다 ㅎㅎ 실험🧪적인 것도 있고 ㅋㅋㅋ\n\n**고민1️⃣** 다음 중 내가 우선 시 하는 것은 무엇인가?\n**결론💡** 이 토이 프로젝트에서 나는 `내적인 퀄리티 > 마감일 지키기 > 에포트 지키기 > 외적인 퀄리티` 순서대로 중요하게 생각할 것이다.\n\n1. 내적인 퀄리티 기준 : `Github public repo에 공개할 수 있는 수준` 으로\n2. 마감일 지키기 기준 : 8/28\n3. 에포트 지키기 기준 : `평일은 MAX 하루 3시간 이내, 주말은 하루 골라서 MAX 반나절만` 투자\n4. 외적인 퀄리티 기준 : 뭐 그냥 데모 가능한 정도로만?\n   나는 요게 제일 신선했다. 실제로 내가 토이 플젝을 하면서 들였던 시간의 꽤 많은 부분이 외적인 퀄리티에 있었는데,\n   정작 진지하게 내가 이것을 얼마나 중요하게 생각하는가를 생각해보았더니 사실은 내가 외적인 퀄리티의 중요도를 별로 높게 생각하고 있지 않았다. 작은 부분이 눈에 거슬리면 '에이 뭐 별로 안걸리는데 지금 금방 고칠까' 하는 마음에 바로 바로 코드에 손을 대는 것이 누적되어 결과적으로 시간을 많이 쏟은 셈이 되었던 것 같다. 한 눈을 팔았다고 해야하나... 아무튼 시간을 내어 이런 고민을 했던 것이 이번 토이 프로젝트 최고의 수확인 것 같다. 👍\n\n**고민2️⃣** 목표 기간 내에 효율적이고 빠르게 작업을 하려면 어떻게 일을 쪼개고, 어떤 순서로 일을 해야할까?\n**결론💡** 이 토이 프로젝트에서 나는 성취감을 느낄수 있는 최소한의 단위로 일을 쪼개고, 요렇게 쪼갠 일들을 다시 연관된 것들 끼리 뭉쳐서 진행할 것이다. 각 항목에서 성취할 수 있는 내용은 🎁 표시로 적어봤다.\n\n1. git repository 생성 및 각 모듈 셋업하기\n   🎁 React, Django 셋업과정\n2. 화면 뼈대 구성하기\n   🎁 Chakra 사용법\n3. 맵 구성하기\n   🎁 Phaser 사용법\n   🎁 Phaser와 React.js를 함께 사용하는 과정\n4. 캐릭터 이동 구현하기\n5. 회의실 입장 구현하기\n6. 2인 음성 영상 챗 구현하기\n   🎁 WebRTC 예제 이해 및 응용\n7. 다자 음성 영상 챗 구현하기\n8. 미디어 설정 기능 구현하기\n\n**고민3️⃣** 작업 내용이 대부분 내가 처음 해보는 것이라면, 내가 아는 일을 할 때와 어떻게 다르게 일해야할까?\n**결론🧪** 이 토이 프로젝트에서 나는 현재 작업 마무리 직후 다음 작업 내용에 대한 서칭을 하고, 실제 다음 작업 까지 약간의 텀을 두고 스스로에게 고민할 시간을 의도적으로 줄 것이다.\n\n- 생각보다 멍때릴때 나오는 코드가 각잡고 짠 코드보다 선방하는 것 같아서 ㅋㅋㅋ 이번에 실험해본다.\n\nDELEVERY 단계부터는 내용이 길어져서 다음 포스트에서 이어서 정리한다 :)\n","source":"_posts/ToyProjects/Gather/gather-clonecoding-1.md","raw":"---\ntitle: \"[토이프로젝트] 개더타운 클론코딩 - 1\"\ndate: 2022-07-20 02:14:38\ncategories: [개발일지, 개더타운 클론코딩]\ntags: [토이프로젝트, WebRTC, Phaser]\n---\n\n# MOTIVATION\n\n나는 코딩이던 미싱이던 그림이던 단시간에 머리를 풀가동해서 결과물을 끌어내는것을 좋아한다.  \n사실 이런 챌린지를 기획할 때 제일 어려운 점은 목표를 정하는 것이다. 끝내는 데에 시간이 N시간 정도면 되겠다 싶으면서도 그 시간 동안 끊임없이 흥미와 도전정신을 끌어올릴 수 있는 목표를 정해야하기 때문이다. 말 그대로 시작이 반인 셈 ㅎㅎ\n\n멘탈 상태가 좋을 때는 이런 아이디어가 샘솟는데 최근에는 이래저래 의욕이 하나도 없어서 침체되어있다가... 간만에 주말에 시간이 생겨서 일을 벌려 보았다.\n\n요즘 업무하면서 정말 유용하게 사용하고 있는 개더타운을 참고하여 화상채팅 웹사이트를 구현해보려고 한다. 이런 주제를 선정하게 된 이유는 다음과 같다.\n\n- 정제된 전체 가이드나 소스가 흔히 돌아다니지 않는 듯 하다. 개발하면서 제일 꿀맛은 개척하는 맛이니까\n- 평소에 궁금했던 웹 기술 분야를 세 개나 체험할 수 있다.\n  - WebSocket 통신 (을 사용하는 줄 알았지만 뒤에 가서 WebRTC 라는 것을 깨닫게 될 예정) 체험하기\n  - HTML5 게임 개발 라이브러리 또는 프레임워크 서칭 및 체험하기\n  - 인기 있는 디자인 시스템 서칭 및 체험하기\n\n# PREPARATION\n\n## 개더타운은 무엇으로 만들어져있나?\n\nREST api를 주로 설계/개발해왔기 때문에 실시간 통신에 대해 아는 것이 없어서, 막연하게 '개더타운은 WebSocket으로 뭔가 되어있지 않을까?' 라고 생각했다.  \n물론 그러면서도 어떻게 그 많은 사람이 음성 / 비디오를 서로 전송하고 있을까... 서버가 중간에서 이 많은 미디어를 다 나누어주고 있다면 개더타운은 어떻게 공짜인걸까... 생각은 했으나 그 뒤까지는 몰랐다.\n찾아보니 개더타운은 P2P로 미디어 또는 임의의 데이터를 주고받을 수 있는 WebRTC를 사용하고 있고, WebRTC은 이미 오래전부터 많은 곳에서 (게임, 화상회의, 휘발성 채팅) 쓰이고 있다고 한다. 떠올려보니 회의 참여자 중 로컬 자원을 많이 쓰고 있는 사람이 포함되어 있을 때 내 게더타운이 약간 느려지는 현상이 종종 있었는데 P2P라서 그랬던 걸 수 있다는 생각이 든다.\n\n메인 기술 셋을 알아냈으니 WebRTC에 대해 구글링해봤다. 생각보다 공식 가이드 및 샘플이 탄탄해서 처음 접하는 기술임에도 왠지 순탄히 진행될 것 같다. 찾은 리소스는 아래와 같이 리스트업 해둔다.\n\n- [잘 정리된 공식 가이드](https://webrtc.org/getting-started/firebase-rtc-codelab)\n- [잘 정리된 공식 샘플코드](https://webrtc.github.io/samples)\n- [Mozilla의 WebRTC 설명](https://developer.mozilla.org/ko/docs/Web/API/WebRTC_API/Signaling_and_video_calling)\n\n## 어떻게 만들까?\n\n개더타운에 접속해서 F12도 켜보고, 구글링으로 찾은 가이드도 읽어어 보니 어느정도 아키텍처는 그려진 것 같다.\n<image src=\"/images/webrtc_layout.png\" />\n각 항목에 대한 설명은 다음과 같다.\n\n- Signaling Server 구성 : **Django with djangoRestFramework**\n  WebRTC 자체는 P2P 방식이라 미디어 교환 자체를 위해서는 중간다리 역할을 하는 서버가 필요없지만, 맨 처음 통신을 시작할 때 Client 간의 메시지 포맷 등을 협의 (Signaling) 하기 위한 서버가 필요하다고 한다. 요건 오랜만에 Django로 만들어보기로 한다.\n- 화면구성\n  - 뼈대 : **React.js with Chakra UI**\n    화면 디자인 및 스타일링 작업도 재미있고 신나는 일이지만 요즘 표준 없는 UX/UI (정확히는 FE 개발자 - UX/UI 협업 표준의 부재(?) 또는 어려움(?)..)에 현타를 느끼고 있어서, 유명한 디자인 시스템을 써보기로 했다. 검색하면 여러 개의 빵빵한 디자인 시스템이 나오는데, 그 중 나는 [Chakra UI](https://www.npmjs.com/package/@chakra-ui/react)를 써보기로 했다.\n  - 맵 및 캐릭터 렌더 : **Phaser**\n    HTML5 게임 개발 라이브러리 / 프레임워크에 대해서도 서칭을 했고, 최종으로는 Phaser와 PixiJS 두 개가 후보에 올랐다. 처음 관심 가져본 분야여서 판단을 내리기 어려웠는데 [요 글](https://stackoverflow.com/questions/38509629/decide-pixi-js-or-phaser)이 큰 도움이 됐다. 내가 이해한 바를 키워드로 요약하자면 편리함(Phaser) vs 자유도(PixiJS) 같다. PixiJS를 쓰면 좀 더 deep하게 이해할 수 있을 것 같아서 10초 정도 고민됐는데, 욕심 같아서 포기했다. 이번에는 Phaser를 사용해보고, 다음에 HTML5 게임 개발이 정말 하고 싶어지면 그때 PixiJS를 써보자.  \n    +) 뜬금없지만 [Phaser 웹사이트](https://phaser.io/)가 너무나 2000년대 감성이다.\n- 미디어 전송 : **WebRTC**\n\n## 무엇부터 어떤 순서로 만들까?\n\n이번 사이드 프로젝트에서 제일 큰 수확이 요 스텝이라고 생각한다. 일정에 쫒기며 떠밀리듯이 개발하는 것이 요즘 내 개발 기피(?)의 원인이라고 생각하기 때문에 토이 프로젝트 만큼은 그렇게 진행하지 않으려고 노력했다. 사실 과거를 돌아보면 나는 토이 프로젝트도 그렇게 일정에 쫒기며 했던 사람이었긴하다 ㅋㅋㅋ 물론 오버웤이 내 의지였냐는 또 다른 문제긴 하지만...\n\n---\n\n아모튼!! 이제는 그렇게 일하지 않으리라.. 다짐하면서 개발에 착수하기 전 내가 한 고민들을 적어보면 다음과 같다.\n\n**고민1️⃣** 다음 중 내가 우선 시 하는 것은 무엇인가?\n\n- 내가 할애하려고 계획한 에포트 이상은 들이지 않고 진행하기\n- 내가 마무리하려고 계획한 날짜까지는 끝내기\n- 내가 계획했던 수준까지는 결과물의 퀄리티 내기\n  - 외적인 퀄리티 (기능성, 사용성, 심미성 등등)\n  - 내적인 퀄리티 (코드 품질)\n\n**고민2️⃣** 목표 기간 내에 효율적이고 빠르게 작업을 하려면 어떻게 일을 쪼개고, 어떤 순서로 일을 해야할까?\n\n**고민3️⃣** 작업 내용이 대부분 내가 처음 해보는 것이라면, 내가 아는 일을 할 때와 어떻게 다르게 일해야할까?\n\n---\n\n그리고 위 고민에 대한 결론은 요렇게 냈다. 물론 앞으로 계속해서 개정해나갈 예정이다 ㅎㅎ 실험🧪적인 것도 있고 ㅋㅋㅋ\n\n**고민1️⃣** 다음 중 내가 우선 시 하는 것은 무엇인가?\n**결론💡** 이 토이 프로젝트에서 나는 `내적인 퀄리티 > 마감일 지키기 > 에포트 지키기 > 외적인 퀄리티` 순서대로 중요하게 생각할 것이다.\n\n1. 내적인 퀄리티 기준 : `Github public repo에 공개할 수 있는 수준` 으로\n2. 마감일 지키기 기준 : 8/28\n3. 에포트 지키기 기준 : `평일은 MAX 하루 3시간 이내, 주말은 하루 골라서 MAX 반나절만` 투자\n4. 외적인 퀄리티 기준 : 뭐 그냥 데모 가능한 정도로만?\n   나는 요게 제일 신선했다. 실제로 내가 토이 플젝을 하면서 들였던 시간의 꽤 많은 부분이 외적인 퀄리티에 있었는데,\n   정작 진지하게 내가 이것을 얼마나 중요하게 생각하는가를 생각해보았더니 사실은 내가 외적인 퀄리티의 중요도를 별로 높게 생각하고 있지 않았다. 작은 부분이 눈에 거슬리면 '에이 뭐 별로 안걸리는데 지금 금방 고칠까' 하는 마음에 바로 바로 코드에 손을 대는 것이 누적되어 결과적으로 시간을 많이 쏟은 셈이 되었던 것 같다. 한 눈을 팔았다고 해야하나... 아무튼 시간을 내어 이런 고민을 했던 것이 이번 토이 프로젝트 최고의 수확인 것 같다. 👍\n\n**고민2️⃣** 목표 기간 내에 효율적이고 빠르게 작업을 하려면 어떻게 일을 쪼개고, 어떤 순서로 일을 해야할까?\n**결론💡** 이 토이 프로젝트에서 나는 성취감을 느낄수 있는 최소한의 단위로 일을 쪼개고, 요렇게 쪼갠 일들을 다시 연관된 것들 끼리 뭉쳐서 진행할 것이다. 각 항목에서 성취할 수 있는 내용은 🎁 표시로 적어봤다.\n\n1. git repository 생성 및 각 모듈 셋업하기\n   🎁 React, Django 셋업과정\n2. 화면 뼈대 구성하기\n   🎁 Chakra 사용법\n3. 맵 구성하기\n   🎁 Phaser 사용법\n   🎁 Phaser와 React.js를 함께 사용하는 과정\n4. 캐릭터 이동 구현하기\n5. 회의실 입장 구현하기\n6. 2인 음성 영상 챗 구현하기\n   🎁 WebRTC 예제 이해 및 응용\n7. 다자 음성 영상 챗 구현하기\n8. 미디어 설정 기능 구현하기\n\n**고민3️⃣** 작업 내용이 대부분 내가 처음 해보는 것이라면, 내가 아는 일을 할 때와 어떻게 다르게 일해야할까?\n**결론🧪** 이 토이 프로젝트에서 나는 현재 작업 마무리 직후 다음 작업 내용에 대한 서칭을 하고, 실제 다음 작업 까지 약간의 텀을 두고 스스로에게 고민할 시간을 의도적으로 줄 것이다.\n\n- 생각보다 멍때릴때 나오는 코드가 각잡고 짠 코드보다 선방하는 것 같아서 ㅋㅋㅋ 이번에 실험해본다.\n\nDELEVERY 단계부터는 내용이 길어져서 다음 포스트에서 이어서 정리한다 :)\n","slug":"ToyProjects/Gather/gather-clonecoding-1","published":1,"updated":"2023-01-22T14:01:39.421Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2s4001ktqwe76cjdj9n","content":"<h1 id=\"MOTIVATION\"><a href=\"#MOTIVATION\" class=\"headerlink\" title=\"MOTIVATION\"></a>MOTIVATION</h1><p>나는 코딩이던 미싱이던 그림이던 단시간에 머리를 풀가동해서 결과물을 끌어내는것을 좋아한다.<br>사실 이런 챌린지를 기획할 때 제일 어려운 점은 목표를 정하는 것이다. 끝내는 데에 시간이 N시간 정도면 되겠다 싶으면서도 그 시간 동안 끊임없이 흥미와 도전정신을 끌어올릴 수 있는 목표를 정해야하기 때문이다. 말 그대로 시작이 반인 셈 ㅎㅎ</p>\n<p>멘탈 상태가 좋을 때는 이런 아이디어가 샘솟는데 최근에는 이래저래 의욕이 하나도 없어서 침체되어있다가… 간만에 주말에 시간이 생겨서 일을 벌려 보았다.</p>\n<p>요즘 업무하면서 정말 유용하게 사용하고 있는 개더타운을 참고하여 화상채팅 웹사이트를 구현해보려고 한다. 이런 주제를 선정하게 된 이유는 다음과 같다.</p>\n<ul>\n<li>정제된 전체 가이드나 소스가 흔히 돌아다니지 않는 듯 하다. 개발하면서 제일 꿀맛은 개척하는 맛이니까</li>\n<li>평소에 궁금했던 웹 기술 분야를 세 개나 체험할 수 있다.<ul>\n<li>WebSocket 통신 (을 사용하는 줄 알았지만 뒤에 가서 WebRTC 라는 것을 깨닫게 될 예정) 체험하기</li>\n<li>HTML5 게임 개발 라이브러리 또는 프레임워크 서칭 및 체험하기</li>\n<li>인기 있는 디자인 시스템 서칭 및 체험하기</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"PREPARATION\"><a href=\"#PREPARATION\" class=\"headerlink\" title=\"PREPARATION\"></a>PREPARATION</h1><h2 id=\"개더타운은-무엇으로-만들어져있나\"><a href=\"#개더타운은-무엇으로-만들어져있나\" class=\"headerlink\" title=\"개더타운은 무엇으로 만들어져있나?\"></a>개더타운은 무엇으로 만들어져있나?</h2><p>REST api를 주로 설계/개발해왔기 때문에 실시간 통신에 대해 아는 것이 없어서, 막연하게 ‘개더타운은 WebSocket으로 뭔가 되어있지 않을까?’ 라고 생각했다.<br>물론 그러면서도 어떻게 그 많은 사람이 음성 / 비디오를 서로 전송하고 있을까… 서버가 중간에서 이 많은 미디어를 다 나누어주고 있다면 개더타운은 어떻게 공짜인걸까… 생각은 했으나 그 뒤까지는 몰랐다.<br>찾아보니 개더타운은 P2P로 미디어 또는 임의의 데이터를 주고받을 수 있는 WebRTC를 사용하고 있고, WebRTC은 이미 오래전부터 많은 곳에서 (게임, 화상회의, 휘발성 채팅) 쓰이고 있다고 한다. 떠올려보니 회의 참여자 중 로컬 자원을 많이 쓰고 있는 사람이 포함되어 있을 때 내 게더타운이 약간 느려지는 현상이 종종 있었는데 P2P라서 그랬던 걸 수 있다는 생각이 든다.</p>\n<p>메인 기술 셋을 알아냈으니 WebRTC에 대해 구글링해봤다. 생각보다 공식 가이드 및 샘플이 탄탄해서 처음 접하는 기술임에도 왠지 순탄히 진행될 것 같다. 찾은 리소스는 아래와 같이 리스트업 해둔다.</p>\n<ul>\n<li><a href=\"https://webrtc.org/getting-started/firebase-rtc-codelab\">잘 정리된 공식 가이드</a></li>\n<li><a href=\"https://webrtc.github.io/samples\">잘 정리된 공식 샘플코드</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/WebRTC_API/Signaling_and_video_calling\">Mozilla의 WebRTC 설명</a></li>\n</ul>\n<h2 id=\"어떻게-만들까\"><a href=\"#어떻게-만들까\" class=\"headerlink\" title=\"어떻게 만들까?\"></a>어떻게 만들까?</h2><p>개더타운에 접속해서 F12도 켜보고, 구글링으로 찾은 가이드도 읽어어 보니 어느정도 아키텍처는 그려진 것 같다.<br><image src=\"/images/webrtc_layout.png\" /><br>각 항목에 대한 설명은 다음과 같다.</p>\n<ul>\n<li>Signaling Server 구성 : <strong>Django with djangoRestFramework</strong><br>WebRTC 자체는 P2P 방식이라 미디어 교환 자체를 위해서는 중간다리 역할을 하는 서버가 필요없지만, 맨 처음 통신을 시작할 때 Client 간의 메시지 포맷 등을 협의 (Signaling) 하기 위한 서버가 필요하다고 한다. 요건 오랜만에 Django로 만들어보기로 한다.</li>\n<li>화면구성<ul>\n<li>뼈대 : <strong>React.js with Chakra UI</strong><br>화면 디자인 및 스타일링 작업도 재미있고 신나는 일이지만 요즘 표준 없는 UX/UI (정확히는 FE 개발자 - UX/UI 협업 표준의 부재(?) 또는 어려움(?)..)에 현타를 느끼고 있어서, 유명한 디자인 시스템을 써보기로 했다. 검색하면 여러 개의 빵빵한 디자인 시스템이 나오는데, 그 중 나는 <a href=\"https://www.npmjs.com/package/@chakra-ui/react\">Chakra UI</a>를 써보기로 했다.</li>\n<li>맵 및 캐릭터 렌더 : <strong>Phaser</strong><br>HTML5 게임 개발 라이브러리 / 프레임워크에 대해서도 서칭을 했고, 최종으로는 Phaser와 PixiJS 두 개가 후보에 올랐다. 처음 관심 가져본 분야여서 판단을 내리기 어려웠는데 <a href=\"https://stackoverflow.com/questions/38509629/decide-pixi-js-or-phaser\">요 글</a>이 큰 도움이 됐다. 내가 이해한 바를 키워드로 요약하자면 편리함(Phaser) vs 자유도(PixiJS) 같다. PixiJS를 쓰면 좀 더 deep하게 이해할 수 있을 것 같아서 10초 정도 고민됐는데, 욕심 같아서 포기했다. 이번에는 Phaser를 사용해보고, 다음에 HTML5 게임 개발이 정말 하고 싶어지면 그때 PixiJS를 써보자.<br>+) 뜬금없지만 <a href=\"https://phaser.io/\">Phaser 웹사이트</a>가 너무나 2000년대 감성이다.</li>\n</ul>\n</li>\n<li>미디어 전송 : <strong>WebRTC</strong></li>\n</ul>\n<h2 id=\"무엇부터-어떤-순서로-만들까\"><a href=\"#무엇부터-어떤-순서로-만들까\" class=\"headerlink\" title=\"무엇부터 어떤 순서로 만들까?\"></a>무엇부터 어떤 순서로 만들까?</h2><p>이번 사이드 프로젝트에서 제일 큰 수확이 요 스텝이라고 생각한다. 일정에 쫒기며 떠밀리듯이 개발하는 것이 요즘 내 개발 기피(?)의 원인이라고 생각하기 때문에 토이 프로젝트 만큼은 그렇게 진행하지 않으려고 노력했다. 사실 과거를 돌아보면 나는 토이 프로젝트도 그렇게 일정에 쫒기며 했던 사람이었긴하다 ㅋㅋㅋ 물론 오버웤이 내 의지였냐는 또 다른 문제긴 하지만…</p>\n<hr>\n<p>아모튼!! 이제는 그렇게 일하지 않으리라.. 다짐하면서 개발에 착수하기 전 내가 한 고민들을 적어보면 다음과 같다.</p>\n<p><strong>고민1️⃣</strong> 다음 중 내가 우선 시 하는 것은 무엇인가?</p>\n<ul>\n<li>내가 할애하려고 계획한 에포트 이상은 들이지 않고 진행하기</li>\n<li>내가 마무리하려고 계획한 날짜까지는 끝내기</li>\n<li>내가 계획했던 수준까지는 결과물의 퀄리티 내기<ul>\n<li>외적인 퀄리티 (기능성, 사용성, 심미성 등등)</li>\n<li>내적인 퀄리티 (코드 품질)</li>\n</ul>\n</li>\n</ul>\n<p><strong>고민2️⃣</strong> 목표 기간 내에 효율적이고 빠르게 작업을 하려면 어떻게 일을 쪼개고, 어떤 순서로 일을 해야할까?</p>\n<p><strong>고민3️⃣</strong> 작업 내용이 대부분 내가 처음 해보는 것이라면, 내가 아는 일을 할 때와 어떻게 다르게 일해야할까?</p>\n<hr>\n<p>그리고 위 고민에 대한 결론은 요렇게 냈다. 물론 앞으로 계속해서 개정해나갈 예정이다 ㅎㅎ 실험🧪적인 것도 있고 ㅋㅋㅋ</p>\n<p><strong>고민1️⃣</strong> 다음 중 내가 우선 시 하는 것은 무엇인가?<br><strong>결론💡</strong> 이 토이 프로젝트에서 나는 <code>내적인 퀄리티 &gt; 마감일 지키기 &gt; 에포트 지키기 &gt; 외적인 퀄리티</code> 순서대로 중요하게 생각할 것이다.</p>\n<ol>\n<li>내적인 퀄리티 기준 : <code>Github public repo에 공개할 수 있는 수준</code> 으로</li>\n<li>마감일 지키기 기준 : 8/28</li>\n<li>에포트 지키기 기준 : <code>평일은 MAX 하루 3시간 이내, 주말은 하루 골라서 MAX 반나절만</code> 투자</li>\n<li>외적인 퀄리티 기준 : 뭐 그냥 데모 가능한 정도로만?<br>나는 요게 제일 신선했다. 실제로 내가 토이 플젝을 하면서 들였던 시간의 꽤 많은 부분이 외적인 퀄리티에 있었는데,<br>정작 진지하게 내가 이것을 얼마나 중요하게 생각하는가를 생각해보았더니 사실은 내가 외적인 퀄리티의 중요도를 별로 높게 생각하고 있지 않았다. 작은 부분이 눈에 거슬리면 ‘에이 뭐 별로 안걸리는데 지금 금방 고칠까’ 하는 마음에 바로 바로 코드에 손을 대는 것이 누적되어 결과적으로 시간을 많이 쏟은 셈이 되었던 것 같다. 한 눈을 팔았다고 해야하나… 아무튼 시간을 내어 이런 고민을 했던 것이 이번 토이 프로젝트 최고의 수확인 것 같다. 👍</li>\n</ol>\n<p><strong>고민2️⃣</strong> 목표 기간 내에 효율적이고 빠르게 작업을 하려면 어떻게 일을 쪼개고, 어떤 순서로 일을 해야할까?<br><strong>결론💡</strong> 이 토이 프로젝트에서 나는 성취감을 느낄수 있는 최소한의 단위로 일을 쪼개고, 요렇게 쪼갠 일들을 다시 연관된 것들 끼리 뭉쳐서 진행할 것이다. 각 항목에서 성취할 수 있는 내용은 🎁 표시로 적어봤다.</p>\n<ol>\n<li>git repository 생성 및 각 모듈 셋업하기<br>🎁 React, Django 셋업과정</li>\n<li>화면 뼈대 구성하기<br>🎁 Chakra 사용법</li>\n<li>맵 구성하기<br>🎁 Phaser 사용법<br>🎁 Phaser와 React.js를 함께 사용하는 과정</li>\n<li>캐릭터 이동 구현하기</li>\n<li>회의실 입장 구현하기</li>\n<li>2인 음성 영상 챗 구현하기<br>🎁 WebRTC 예제 이해 및 응용</li>\n<li>다자 음성 영상 챗 구현하기</li>\n<li>미디어 설정 기능 구현하기</li>\n</ol>\n<p><strong>고민3️⃣</strong> 작업 내용이 대부분 내가 처음 해보는 것이라면, 내가 아는 일을 할 때와 어떻게 다르게 일해야할까?<br><strong>결론🧪</strong> 이 토이 프로젝트에서 나는 현재 작업 마무리 직후 다음 작업 내용에 대한 서칭을 하고, 실제 다음 작업 까지 약간의 텀을 두고 스스로에게 고민할 시간을 의도적으로 줄 것이다.</p>\n<ul>\n<li>생각보다 멍때릴때 나오는 코드가 각잡고 짠 코드보다 선방하는 것 같아서 ㅋㅋㅋ 이번에 실험해본다.</li>\n</ul>\n<p>DELEVERY 단계부터는 내용이 길어져서 다음 포스트에서 이어서 정리한다 :)</p>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<h1 id=\"MOTIVATION\"><a href=\"#MOTIVATION\" class=\"headerlink\" title=\"MOTIVATION\"></a>MOTIVATION</h1><p>나는 코딩이던 미싱이던 그림이던 단시간에 머리를 풀가동해서 결과물을 끌어내는것을 좋아한다.<br>사실 이런 챌린지를 기획할 때 제일 어려운 점은 목표를 정하는 것이다. 끝내는 데에 시간이 N시간 정도면 되겠다 싶으면서도 그 시간 동안 끊임없이 흥미와 도전정신을 끌어올릴 수 있는 목표를 정해야하기 때문이다. 말 그대로 시작이 반인 셈 ㅎㅎ</p>\n<p>멘탈 상태가 좋을 때는 이런 아이디어가 샘솟는데 최근에는 이래저래 의욕이 하나도 없어서 침체되어있다가… 간만에 주말에 시간이 생겨서 일을 벌려 보았다.</p>\n<p>요즘 업무하면서 정말 유용하게 사용하고 있는 개더타운을 참고하여 화상채팅 웹사이트를 구현해보려고 한다. 이런 주제를 선정하게 된 이유는 다음과 같다.</p>\n<ul>\n<li>정제된 전체 가이드나 소스가 흔히 돌아다니지 않는 듯 하다. 개발하면서 제일 꿀맛은 개척하는 맛이니까</li>\n<li>평소에 궁금했던 웹 기술 분야를 세 개나 체험할 수 있다.<ul>\n<li>WebSocket 통신 (을 사용하는 줄 알았지만 뒤에 가서 WebRTC 라는 것을 깨닫게 될 예정) 체험하기</li>\n<li>HTML5 게임 개발 라이브러리 또는 프레임워크 서칭 및 체험하기</li>\n<li>인기 있는 디자인 시스템 서칭 및 체험하기</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"PREPARATION\"><a href=\"#PREPARATION\" class=\"headerlink\" title=\"PREPARATION\"></a>PREPARATION</h1><h2 id=\"개더타운은-무엇으로-만들어져있나\"><a href=\"#개더타운은-무엇으로-만들어져있나\" class=\"headerlink\" title=\"개더타운은 무엇으로 만들어져있나?\"></a>개더타운은 무엇으로 만들어져있나?</h2><p>REST api를 주로 설계/개발해왔기 때문에 실시간 통신에 대해 아는 것이 없어서, 막연하게 ‘개더타운은 WebSocket으로 뭔가 되어있지 않을까?’ 라고 생각했다.<br>물론 그러면서도 어떻게 그 많은 사람이 음성 / 비디오를 서로 전송하고 있을까… 서버가 중간에서 이 많은 미디어를 다 나누어주고 있다면 개더타운은 어떻게 공짜인걸까… 생각은 했으나 그 뒤까지는 몰랐다.<br>찾아보니 개더타운은 P2P로 미디어 또는 임의의 데이터를 주고받을 수 있는 WebRTC를 사용하고 있고, WebRTC은 이미 오래전부터 많은 곳에서 (게임, 화상회의, 휘발성 채팅) 쓰이고 있다고 한다. 떠올려보니 회의 참여자 중 로컬 자원을 많이 쓰고 있는 사람이 포함되어 있을 때 내 게더타운이 약간 느려지는 현상이 종종 있었는데 P2P라서 그랬던 걸 수 있다는 생각이 든다.</p>\n<p>메인 기술 셋을 알아냈으니 WebRTC에 대해 구글링해봤다. 생각보다 공식 가이드 및 샘플이 탄탄해서 처음 접하는 기술임에도 왠지 순탄히 진행될 것 같다. 찾은 리소스는 아래와 같이 리스트업 해둔다.</p>\n<ul>\n<li><a href=\"https://webrtc.org/getting-started/firebase-rtc-codelab\">잘 정리된 공식 가이드</a></li>\n<li><a href=\"https://webrtc.github.io/samples\">잘 정리된 공식 샘플코드</a></li>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/API/WebRTC_API/Signaling_and_video_calling\">Mozilla의 WebRTC 설명</a></li>\n</ul>\n<h2 id=\"어떻게-만들까\"><a href=\"#어떻게-만들까\" class=\"headerlink\" title=\"어떻게 만들까?\"></a>어떻게 만들까?</h2><p>개더타운에 접속해서 F12도 켜보고, 구글링으로 찾은 가이드도 읽어어 보니 어느정도 아키텍처는 그려진 것 같다.<br><image src=\"/images/webrtc_layout.png\" /><br>각 항목에 대한 설명은 다음과 같다.</p>\n<ul>\n<li>Signaling Server 구성 : <strong>Django with djangoRestFramework</strong><br>WebRTC 자체는 P2P 방식이라 미디어 교환 자체를 위해서는 중간다리 역할을 하는 서버가 필요없지만, 맨 처음 통신을 시작할 때 Client 간의 메시지 포맷 등을 협의 (Signaling) 하기 위한 서버가 필요하다고 한다. 요건 오랜만에 Django로 만들어보기로 한다.</li>\n<li>화면구성<ul>\n<li>뼈대 : <strong>React.js with Chakra UI</strong><br>화면 디자인 및 스타일링 작업도 재미있고 신나는 일이지만 요즘 표준 없는 UX/UI (정확히는 FE 개발자 - UX/UI 협업 표준의 부재(?) 또는 어려움(?)..)에 현타를 느끼고 있어서, 유명한 디자인 시스템을 써보기로 했다. 검색하면 여러 개의 빵빵한 디자인 시스템이 나오는데, 그 중 나는 <a href=\"https://www.npmjs.com/package/@chakra-ui/react\">Chakra UI</a>를 써보기로 했다.</li>\n<li>맵 및 캐릭터 렌더 : <strong>Phaser</strong><br>HTML5 게임 개발 라이브러리 / 프레임워크에 대해서도 서칭을 했고, 최종으로는 Phaser와 PixiJS 두 개가 후보에 올랐다. 처음 관심 가져본 분야여서 판단을 내리기 어려웠는데 <a href=\"https://stackoverflow.com/questions/38509629/decide-pixi-js-or-phaser\">요 글</a>이 큰 도움이 됐다. 내가 이해한 바를 키워드로 요약하자면 편리함(Phaser) vs 자유도(PixiJS) 같다. PixiJS를 쓰면 좀 더 deep하게 이해할 수 있을 것 같아서 10초 정도 고민됐는데, 욕심 같아서 포기했다. 이번에는 Phaser를 사용해보고, 다음에 HTML5 게임 개발이 정말 하고 싶어지면 그때 PixiJS를 써보자.<br>+) 뜬금없지만 <a href=\"https://phaser.io/\">Phaser 웹사이트</a>가 너무나 2000년대 감성이다.</li>\n</ul>\n</li>\n<li>미디어 전송 : <strong>WebRTC</strong></li>\n</ul>\n<h2 id=\"무엇부터-어떤-순서로-만들까\"><a href=\"#무엇부터-어떤-순서로-만들까\" class=\"headerlink\" title=\"무엇부터 어떤 순서로 만들까?\"></a>무엇부터 어떤 순서로 만들까?</h2><p>이번 사이드 프로젝트에서 제일 큰 수확이 요 스텝이라고 생각한다. 일정에 쫒기며 떠밀리듯이 개발하는 것이 요즘 내 개발 기피(?)의 원인이라고 생각하기 때문에 토이 프로젝트 만큼은 그렇게 진행하지 않으려고 노력했다. 사실 과거를 돌아보면 나는 토이 프로젝트도 그렇게 일정에 쫒기며 했던 사람이었긴하다 ㅋㅋㅋ 물론 오버웤이 내 의지였냐는 또 다른 문제긴 하지만…</p>\n<hr>\n<p>아모튼!! 이제는 그렇게 일하지 않으리라.. 다짐하면서 개발에 착수하기 전 내가 한 고민들을 적어보면 다음과 같다.</p>\n<p><strong>고민1️⃣</strong> 다음 중 내가 우선 시 하는 것은 무엇인가?</p>\n<ul>\n<li>내가 할애하려고 계획한 에포트 이상은 들이지 않고 진행하기</li>\n<li>내가 마무리하려고 계획한 날짜까지는 끝내기</li>\n<li>내가 계획했던 수준까지는 결과물의 퀄리티 내기<ul>\n<li>외적인 퀄리티 (기능성, 사용성, 심미성 등등)</li>\n<li>내적인 퀄리티 (코드 품질)</li>\n</ul>\n</li>\n</ul>\n<p><strong>고민2️⃣</strong> 목표 기간 내에 효율적이고 빠르게 작업을 하려면 어떻게 일을 쪼개고, 어떤 순서로 일을 해야할까?</p>\n<p><strong>고민3️⃣</strong> 작업 내용이 대부분 내가 처음 해보는 것이라면, 내가 아는 일을 할 때와 어떻게 다르게 일해야할까?</p>\n<hr>\n<p>그리고 위 고민에 대한 결론은 요렇게 냈다. 물론 앞으로 계속해서 개정해나갈 예정이다 ㅎㅎ 실험🧪적인 것도 있고 ㅋㅋㅋ</p>\n<p><strong>고민1️⃣</strong> 다음 중 내가 우선 시 하는 것은 무엇인가?<br><strong>결론💡</strong> 이 토이 프로젝트에서 나는 <code>내적인 퀄리티 &gt; 마감일 지키기 &gt; 에포트 지키기 &gt; 외적인 퀄리티</code> 순서대로 중요하게 생각할 것이다.</p>\n<ol>\n<li>내적인 퀄리티 기준 : <code>Github public repo에 공개할 수 있는 수준</code> 으로</li>\n<li>마감일 지키기 기준 : 8/28</li>\n<li>에포트 지키기 기준 : <code>평일은 MAX 하루 3시간 이내, 주말은 하루 골라서 MAX 반나절만</code> 투자</li>\n<li>외적인 퀄리티 기준 : 뭐 그냥 데모 가능한 정도로만?<br>나는 요게 제일 신선했다. 실제로 내가 토이 플젝을 하면서 들였던 시간의 꽤 많은 부분이 외적인 퀄리티에 있었는데,<br>정작 진지하게 내가 이것을 얼마나 중요하게 생각하는가를 생각해보았더니 사실은 내가 외적인 퀄리티의 중요도를 별로 높게 생각하고 있지 않았다. 작은 부분이 눈에 거슬리면 ‘에이 뭐 별로 안걸리는데 지금 금방 고칠까’ 하는 마음에 바로 바로 코드에 손을 대는 것이 누적되어 결과적으로 시간을 많이 쏟은 셈이 되었던 것 같다. 한 눈을 팔았다고 해야하나… 아무튼 시간을 내어 이런 고민을 했던 것이 이번 토이 프로젝트 최고의 수확인 것 같다. 👍</li>\n</ol>\n<p><strong>고민2️⃣</strong> 목표 기간 내에 효율적이고 빠르게 작업을 하려면 어떻게 일을 쪼개고, 어떤 순서로 일을 해야할까?<br><strong>결론💡</strong> 이 토이 프로젝트에서 나는 성취감을 느낄수 있는 최소한의 단위로 일을 쪼개고, 요렇게 쪼갠 일들을 다시 연관된 것들 끼리 뭉쳐서 진행할 것이다. 각 항목에서 성취할 수 있는 내용은 🎁 표시로 적어봤다.</p>\n<ol>\n<li>git repository 생성 및 각 모듈 셋업하기<br>🎁 React, Django 셋업과정</li>\n<li>화면 뼈대 구성하기<br>🎁 Chakra 사용법</li>\n<li>맵 구성하기<br>🎁 Phaser 사용법<br>🎁 Phaser와 React.js를 함께 사용하는 과정</li>\n<li>캐릭터 이동 구현하기</li>\n<li>회의실 입장 구현하기</li>\n<li>2인 음성 영상 챗 구현하기<br>🎁 WebRTC 예제 이해 및 응용</li>\n<li>다자 음성 영상 챗 구현하기</li>\n<li>미디어 설정 기능 구현하기</li>\n</ol>\n<p><strong>고민3️⃣</strong> 작업 내용이 대부분 내가 처음 해보는 것이라면, 내가 아는 일을 할 때와 어떻게 다르게 일해야할까?<br><strong>결론🧪</strong> 이 토이 프로젝트에서 나는 현재 작업 마무리 직후 다음 작업 내용에 대한 서칭을 하고, 실제 다음 작업 까지 약간의 텀을 두고 스스로에게 고민할 시간을 의도적으로 줄 것이다.</p>\n<ul>\n<li>생각보다 멍때릴때 나오는 코드가 각잡고 짠 코드보다 선방하는 것 같아서 ㅋㅋㅋ 이번에 실험해본다.</li>\n</ul>\n<p>DELEVERY 단계부터는 내용이 길어져서 다음 포스트에서 이어서 정리한다 :)</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/webrtc_layout.png","popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:01:39 GMT+0900 (대한민국 표준시)","title":"[토이프로젝트] 개더타운 클론코딩 - 1","path":"2022/07/20/ToyProjects/Gather/gather-clonecoding-1/","eyeCatchImage":"/images/webrtc_layout.png","excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-07-19T17:14:38.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-07-19T17:14:38.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"개발일지 > 개더타운 클론코딩","tags":["토이프로젝트","WebRTC","Phaser"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[토이프로젝트] 개더타운 클론코딩 - 2","date":"2022-07-27T17:14:38.000Z","_content":"\n이전 포스트에서는 MOTIVATION, PREPARATION 까지 정리했고, 이어서 DELEVERY했던 내용 중 3.맵 구성하기 항목까지 기록한다.\n\n1. **git repository 생성 및 각 모듈 셋업하기**\n   🎁 React, Django 셋업과정\n2. **화면 뼈대 구성하기**\n   🎁 Chakra 사용법\n3. **맵 구성하기**\n   🎁 Phaser 사용법\n   🎁 Phaser와 React.js를 함께 사용하는 과정\n4. 캐릭터 이동 구현하기\n5. 회의실 입장 구현하기\n6. 2인 음성 영상 챗 구현하기\n7. 다자 음성 영상 챗 구현하기\n8. 미디어 설정 기능 구현하기\n\n# DELEVERY\n\n## 1. git repository 생성 및 각 모듈 셋업하기\n\n[git repository](https://github.com/ga0hyeon/cowork-saga)를 만들어주고, signalingServer와 client 폴더에 각각 Django와 React 셋업을 진행했다.\n\n### Django 셋업 with djangoRestFramework\n\n[django docs](https://docs.djangoproject.com/ko/4.0/intro/)를 참고하여 초기 세팅을 진행한다.\n+) mac에 python 2.7이 기본으로 깔려있어서 3.x 버전의 python을 받아주었다. python3을 기본으로 바라보도록 bashrc에도 alias를 추가해준다.\n\ndjango를 설치해주고\n\n```bash\n$ python -m pip install Django\n```\n\n설치 후 잘 설치되었는지 버전을 확인한다.\n\n```bash\n$ python -m django --version\n```\n\n그리고 아래 명령어로 현재 경로에 django 프로젝트를 생성한다.\n\n```bash\n$ python -m django startproject gather_clone_siganlling_server\n```\n\n지정해준 폴더 (나의 경우 gather_clone_siganlling_server)로 이동하여 아래의 명령어를 수행하면, 짜잔! 기본포트(8000)에 샘플페이지가 뜬다.\n\n```bash\n$ python manage.py runserver\n```\n\n나는 웹서버가 아니라 REST Api 서버로 사용할 것이므로, [django-rest-framework docs](https://www.django-rest-framework.org/#installation)를 참고하여 djangoRestFramework를 깔아주자.  \nexample까지 따라서 만들면, 이제 localhost:8000에 이전의 django 샘플페이지가 아니라 swagger와 유사한 형태의 REST framework 페이지가 뜬다.\n\n### React 셋업 with Chakra UI & Adapter.js\n\n1. CRA로 React 앱 초기 세팅\n\n```bash\n   $ npx create-react-app gather-clone-client --template @chakra-ui/typescript\n```\n\n2. Adapter.js 라이브러리 설치\n   Adapter.js는 Polyfill(브라우저에서 지원하지 않는 최신 기능을 사용할 수 있도록 도와주는 코드의 모음)과 Shim(이미 존재하는 코드의 동작을 바로잡는데에 사용하는 코드의 모음)을 사용하여 WebRTC의 브라우저 간 호환성 문제를 해결해둔 라이브러리이다.\n   WebRTC가 계속해서 변화하고 있는 기술이고, 각 브라우저별로 지원 수준이 다르기 때문에 일괄 적용이 쉽지 않은 모양이다.\n\n```bash\nnpm install webrtc-adapter\n```\n\n## 2. 화면 뼈대 구성하기\n\n위에서 만들어준 React 프로젝트 폴더에서 화면 뼈대 구성을 이어서 진행한다. 화면 구조는 아래와 매우 간단하다 :)\n\n```bash\n   App.tsx\n   pages\n    ⌞IntroPage.tsx\n    ⌞MeetingPage.tsx\n```\n\nIntroPage에는 Chakra UI를 활용해서 간단한 정보 입력 form을 구현한다. 우선은 구분을 위해 이름 정도만 입력받도록 하자.\n\n## 3. 맵 구성하기\n\n맵 구성에는 Phaser를 사용한다.\n\n### Phaser란?\n\ncross-browser HTML5 게임을 쉽고 빠르게 만들 수 있도록하는 프레임워크.\n\n### Phaser를 사용하기 위한 추가적인 개발환경 setup\n\nPhaser가 html 기반으로 게임을 만들수 있게 해준다고 하더라도, 브라우저에서는 원칙적으로 로컬 리소스에 접근할 수 없기 때문에 html 파일 만으로는 Phaser 게임을 실행할 수 없다. (사실 이 개념 예전에도 접했었는데 그때는 바로 이해가 안되었는데.. 지금은 후루룩 읽힌다. 아주 좋다!!)따라서 html과 리소스를 올릴 서버가 필요하고, 공식 가이드에서는 python, php, node.js 정도를 언급하고 있다.\n\n나는 위에서 이미 React로 페이지 뼈대를 구성했고, 운영 단계까지 올릴 생각이 없으므로 React 개발 서버면 충분하다.\n\n그리고 가이드에 IDE도 몇 가지 언급하고있는데, brakets 같은 HTML 편집기로도 개발이 가능하다고 한다. 재밌다. 물론 나는 위에서 세팅해둔 VS code를 사용한다 ㅎㅎ\n\n추가적인 서버 셋업과 IDE 설정이 필요 없으니 Phaser 사용을 위해서는 요 정도만 추가로 해주면 되겠다.\n\n- npm으로 Phaser 설치\n\n```bash\n$ npm install phaser\n```\n\n### 가이드를 따라 샘플 게임 만들기\n\n본격적으로 구미에 맡는 맵을 만들기 전에 Phaser에 익숙해질 겸 가이드를 따라 샘플 게임을 만들어본다. 가이드로 제공된 소스는 html script라서, 글로벌 변수가 따로 없는 react에 맞게 ref, state를 사용해서 약간 수정해봤다. 잘 뜬다 :)\n(making-your-first-phaser-3-game)[https://phaser.io/tutorials/making-your-first-phaser-3-game]\n\n이 샘플 소스만으로도 회의실 구성에 필요한 요소는 어느정도 구현이 가능해보인다. 굿!\n\n![Sample Game](/images/gather_clone_coding/1.png)\n\n<details>\n<summary>샘플 소스 전문</summary>\n\n```jsx\nimport Phaser from \"phaser\";\nimport { useEffect, useRef, useState } from \"react\";\n\nconst SamplePage = () => {\n  const variables = useRef<{\n    platforms: Phaser.Physics.Arcade.StaticGroup;\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody;\n    cursors: Phaser.Types.Input.Keyboard.CursorKeys;\n    stars: Phaser.Physics.Arcade.Group;\n  }>();\n\n  const config = useRef<Phaser.Types.Core.GameConfig>({\n    type: Phaser.AUTO,\n    parent: \"sample-page\", //NOTE : 아래 div의 id값을 넣어주면 된다.\n    width: 800,\n    height: 600,\n    physics: {\n      default: \"arcade\",\n      arcade: {\n        gravity: { y: 200 },\n      },\n    },\n    scene: {\n      preload: function () {\n        this.load.image(\"sky\", \"assets/sky.png\");\n        this.load.image(\"ground\", \"assets/platform.png\");\n        this.load.image(\"star\", \"assets/star.png\");\n        this.load.image(\"bomb\", \"assets/bomb.png\");\n        this.load.spritesheet(\"dude\", \"assets/dude.png\", {\n          frameWidth: 32,\n          frameHeight: 48,\n        });\n      },\n      create: function () {\n        this.add.image(400, 300, \"sky\");\n\n        //NOTE : config에 physics를 정의해두어야 정상적으로 동작한다\n        const platforms = this.physics.add.staticGroup();\n\n        //NOTE : static physics body의 크기를 변경했으므로 refreshBody 호출\n        platforms.create(400, 568, \"ground\").setScale(2).refreshBody();\n\n        platforms.create(600, 400, \"ground\");\n        platforms.create(50, 250, \"ground\");\n        platforms.create(750, 220, \"ground\");\n\n        const player = this.physics.add.sprite(100, 450, \"dude\");\n        player.setBounce(0.2);\n        player.setCollideWorldBounds(true);\n\n        this.anims.create({\n          key: \"left\",\n          frames: this.anims.generateFrameNumbers(\"dude\", { start: 0, end: 3 }),\n          frameRate: 10,\n          repeat: -1,\n        });\n\n        this.anims.create({\n          key: \"turn\",\n          frames: [{ key: \"dude\", frame: 4 }],\n          frameRate: 20,\n        });\n\n        this.anims.create({\n          key: \"right\",\n          frames: this.anims.generateFrameNumbers(\"dude\", { start: 5, end: 8 }),\n          frameRate: 10,\n          repeat: -1,\n        });\n\n        this.physics.add.collider(player, platforms);\n\n        const cursors = this.input.keyboard.createCursorKeys();\n\n        const scoreText = this.add.text(16, 16, \"score: 0\", {\n          fontSize: \"32px\",\n          color: \"#fff\",\n        });\n\n        const stars = this.physics.add.group({\n          key: \"star\",\n          repeat: 11,\n          setXY: { x: 12, y: 0, stepX: 70 },\n        });\n\n        stars.children.iterate(function (child) {\n          (child as any).setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));\n        });\n\n        this.physics.add.collider(stars, platforms);\n        this.physics.add.overlap(\n          player,\n          stars,\n          (player, star) => {\n            (star as any).disableBody(true, true);\n            setScore((prev) => {\n              scoreText.setText(\"Score: \" + (prev + 1));\n              return prev + 1;\n            });\n\n            if (stars.countActive(true) === 0) {\n              stars.children.iterate(function (child) {\n                (child as any).enableBody(\n                  true,\n                  (child as any).x,\n                  0,\n                  true,\n                  true\n                );\n              });\n\n              const x =\n                (player as any).x < 400\n                  ? Phaser.Math.Between(400, 800)\n                  : Phaser.Math.Between(0, 400);\n\n              const bomb = bombs.create(x, 16, \"bomb\");\n              bomb.setBounce(1);\n              bomb.setCollideWorldBounds(true);\n              bomb.setVelocity(Phaser.Math.Between(-200, 200), 20);\n            }\n          },\n          undefined,\n          this\n        );\n\n        const bombs = this.physics.add.group();\n\n        this.physics.add.collider(bombs, platforms);\n\n        this.physics.add.collider(\n          player,\n          bombs,\n          (player, bomb) => {\n            this.physics.pause();\n\n            (player as any).setTint(0xff0000);\n\n            this.anims.play(\"turn\", player);\n\n            this.add.text(240, 300, \"GAME OVER\", {\n              fontSize: \"64px\",\n              color: \"#0xff00\",\n            });\n          },\n          undefined,\n          this\n        );\n        variables.current = {\n          platforms,\n          player,\n          cursors,\n          stars,\n        };\n      },\n      update: function () {\n        if (variables.current) {\n          const { cursors, player } = variables.current;\n\n          if (cursors.left.isDown) {\n            player.setVelocityX(-160);\n            player.anims.play(\"left\", true);\n          } else if (cursors.right.isDown) {\n            player.setVelocityX(160);\n            player.anims.play(\"right\", true);\n          } else {\n            player.setVelocityX(0);\n            player.anims.play(\"turn\");\n          }\n          if (cursors.up.isDown && player.body.touching.down) {\n            player.setVelocityY(-330);\n          }\n        }\n      },\n    },\n  });\n\n  const [score, setScore] = useState<number>(0);\n  const [game, setGame] = useState<Phaser.Game>();\n\n  useEffect(() => {\n    const game = new Phaser.Game(config.current);\n    setGame(game);\n\n    return () => {\n      game.destroy(true);\n    };\n  }, []);\n\n  return <div id=\"sample-page\"></div>;\n};\n\nexport default SamplePage;\n```\n\n</details>\n\n### 회의실을 그리는데에 사용할 무료 애셋을 찾자\n\n가장 기본적인 회의실 맵을 그리기 위해서 아래와 같이 크게 세 가지의 애셋이 필요하다.\n\n- 바닥\n- 캐릭터\n- 오브젝트 (벽, 책상, 집기 등등)\n- 맵 뒷배경 이미지\n\n[무료로 애셋을 받을 수 있는 사이트](https://itch.io/game-assets/free)와 [Pixabay](https://pixabay.com/ko)에서 발품을 팔아 줍줍한 애셋들은 root의 public 폴더에 차곡차곡 담아준다.\n\n### 자 이제 회의실을 그려보자\n\n이제 어느 위치에 어떤 타일을 배치할지 정의하면 된다. Phaser 예제를 둘러보니 아래 캡쳐와 같이 json 형식으로 좌표값을 넘겨받고 있다는 것을 어렵지 않게 확인할 수 있었는데, 처음에는 이걸 손으로 하나하나 해야하는 줄 알고 포기할까 했다.\n![json](/images/gather_clone_coding/5.png)\n\n당연히 요 json을 쉽게 만들 수 있도록 도와주는 프로그램이 이미 있더라. 한 가지만은 아닌 것 같은데, 그 중 나는 [Tiled](https://www.mapeditor.org/) 를 사용해보았다. 검색결과가 제일 많아서 ㅎㅎ\n\nTiled를 실행한 뒤 프로젝트와 맵을 신규 생성하고, 위에서 모아둔 애셋 타일셋을 import 해주면 아래와 같이 맵을 한칸 한칸 그려줄 수 있다.\n\n![회의실 전경](/images/gather_clone_coding/2.png)\n\n타일셋을 그릴 때는 용도에 맞게 레이어를 추가할 수 있는 듯 하다. 나는 바닥, 벽, 집기류 총 세 개의 레이어를 사용하여 회의실을 꾸몄다.\n참고로 맵 메이커를 제대로/잘 사용하는 방법에 대해서는 다른 포스트에서 추가로 다루어야 할 정도로 양이 되는 듯 하다, 이번에는 이 정도로 만족하고 넘어간다.\n\n이제 만든 맵을 Phaser에서 읽을 수 있도록 json 형식으로 저장해주면 되는데, 그전에 맵이 타일셋을 내장하도록 해야하는데... 무슨 이유에서인지 가이드대로 '타일셋 내장' 버튼을 클릭하면 맵이 깨진다 ㅠㅠ\n![요것을 누르면](/images/gather_clone_coding/3.png)\n![이렇게 된다 ㅠㅠ 왜!!!](/images/gather_clone_coding/4.png)\n잠시 생각해보니 json에 이미지 정보를 내장하는 것이 자연스러운 방법만은 아니라는 생각이 들기도한다. 문득 위에 캡쳐한 Phaser 예제에서 힌트를 얻을 수 있지 않을까 싶어 [예제 소스](https://phaser.io/examples/v3/view/camera/follow-zoom-tilemap)를 확인 해보니 아래 코드와 같이 타일셋의 경로도 상대경로로 지정이 되어있었다. onCreate 시점에 타일셋 자원도 로드하는 모양 ㅎㅎ\n\n```jsx\nthis.load.tilemapTiledJSON(\"map\", \"assets/tilemaps/maps/super-mario.json\");\nthis.load.image(\"tiles1\", \"assets/tilemaps/tiles/super-mario.png\");\n```\n\n타일셋을 포함해서 저장했을 때 왜 깨지는지까지는 빨리 파악이 어려울 것 같으니 우선은 예제를 참고하여 얼른 넘어가기로하고 (응 그렇게 넘어간거 산더미~) 나도 타일셋 이미지를 asset 쪽에 넣어줬다.\n\n### 짜잔\n\nonCreate 함수에 아래와 같이 에셋과 맵정보를 로드하면 화면에 희의실이 그려진 것을 확인할 수 있다 :) 이제 다음 포스트 부터는 실제로 캐릭터를 이동해보도록 하겠다\n\n```jsx\nthis.load.tilemapTiledJSON(\"map\", \"assets/tilemaps/maps/super-mario.json\");\nthis.load.image(\"tiles1\", \"assets/tilemaps/tiles/super-mario.png\");\n```\n","source":"_posts/ToyProjects/Gather/gather-clonecoding-2.md","raw":"---\ntitle: \"[토이프로젝트] 개더타운 클론코딩 - 2\"\ndate: 2022-07-28 02:14:38\ncategories: [개발일지, 개더타운 클론코딩]\ntags: [토이프로젝트, WebRTC, Phaser]\n---\n\n이전 포스트에서는 MOTIVATION, PREPARATION 까지 정리했고, 이어서 DELEVERY했던 내용 중 3.맵 구성하기 항목까지 기록한다.\n\n1. **git repository 생성 및 각 모듈 셋업하기**\n   🎁 React, Django 셋업과정\n2. **화면 뼈대 구성하기**\n   🎁 Chakra 사용법\n3. **맵 구성하기**\n   🎁 Phaser 사용법\n   🎁 Phaser와 React.js를 함께 사용하는 과정\n4. 캐릭터 이동 구현하기\n5. 회의실 입장 구현하기\n6. 2인 음성 영상 챗 구현하기\n7. 다자 음성 영상 챗 구현하기\n8. 미디어 설정 기능 구현하기\n\n# DELEVERY\n\n## 1. git repository 생성 및 각 모듈 셋업하기\n\n[git repository](https://github.com/ga0hyeon/cowork-saga)를 만들어주고, signalingServer와 client 폴더에 각각 Django와 React 셋업을 진행했다.\n\n### Django 셋업 with djangoRestFramework\n\n[django docs](https://docs.djangoproject.com/ko/4.0/intro/)를 참고하여 초기 세팅을 진행한다.\n+) mac에 python 2.7이 기본으로 깔려있어서 3.x 버전의 python을 받아주었다. python3을 기본으로 바라보도록 bashrc에도 alias를 추가해준다.\n\ndjango를 설치해주고\n\n```bash\n$ python -m pip install Django\n```\n\n설치 후 잘 설치되었는지 버전을 확인한다.\n\n```bash\n$ python -m django --version\n```\n\n그리고 아래 명령어로 현재 경로에 django 프로젝트를 생성한다.\n\n```bash\n$ python -m django startproject gather_clone_siganlling_server\n```\n\n지정해준 폴더 (나의 경우 gather_clone_siganlling_server)로 이동하여 아래의 명령어를 수행하면, 짜잔! 기본포트(8000)에 샘플페이지가 뜬다.\n\n```bash\n$ python manage.py runserver\n```\n\n나는 웹서버가 아니라 REST Api 서버로 사용할 것이므로, [django-rest-framework docs](https://www.django-rest-framework.org/#installation)를 참고하여 djangoRestFramework를 깔아주자.  \nexample까지 따라서 만들면, 이제 localhost:8000에 이전의 django 샘플페이지가 아니라 swagger와 유사한 형태의 REST framework 페이지가 뜬다.\n\n### React 셋업 with Chakra UI & Adapter.js\n\n1. CRA로 React 앱 초기 세팅\n\n```bash\n   $ npx create-react-app gather-clone-client --template @chakra-ui/typescript\n```\n\n2. Adapter.js 라이브러리 설치\n   Adapter.js는 Polyfill(브라우저에서 지원하지 않는 최신 기능을 사용할 수 있도록 도와주는 코드의 모음)과 Shim(이미 존재하는 코드의 동작을 바로잡는데에 사용하는 코드의 모음)을 사용하여 WebRTC의 브라우저 간 호환성 문제를 해결해둔 라이브러리이다.\n   WebRTC가 계속해서 변화하고 있는 기술이고, 각 브라우저별로 지원 수준이 다르기 때문에 일괄 적용이 쉽지 않은 모양이다.\n\n```bash\nnpm install webrtc-adapter\n```\n\n## 2. 화면 뼈대 구성하기\n\n위에서 만들어준 React 프로젝트 폴더에서 화면 뼈대 구성을 이어서 진행한다. 화면 구조는 아래와 매우 간단하다 :)\n\n```bash\n   App.tsx\n   pages\n    ⌞IntroPage.tsx\n    ⌞MeetingPage.tsx\n```\n\nIntroPage에는 Chakra UI를 활용해서 간단한 정보 입력 form을 구현한다. 우선은 구분을 위해 이름 정도만 입력받도록 하자.\n\n## 3. 맵 구성하기\n\n맵 구성에는 Phaser를 사용한다.\n\n### Phaser란?\n\ncross-browser HTML5 게임을 쉽고 빠르게 만들 수 있도록하는 프레임워크.\n\n### Phaser를 사용하기 위한 추가적인 개발환경 setup\n\nPhaser가 html 기반으로 게임을 만들수 있게 해준다고 하더라도, 브라우저에서는 원칙적으로 로컬 리소스에 접근할 수 없기 때문에 html 파일 만으로는 Phaser 게임을 실행할 수 없다. (사실 이 개념 예전에도 접했었는데 그때는 바로 이해가 안되었는데.. 지금은 후루룩 읽힌다. 아주 좋다!!)따라서 html과 리소스를 올릴 서버가 필요하고, 공식 가이드에서는 python, php, node.js 정도를 언급하고 있다.\n\n나는 위에서 이미 React로 페이지 뼈대를 구성했고, 운영 단계까지 올릴 생각이 없으므로 React 개발 서버면 충분하다.\n\n그리고 가이드에 IDE도 몇 가지 언급하고있는데, brakets 같은 HTML 편집기로도 개발이 가능하다고 한다. 재밌다. 물론 나는 위에서 세팅해둔 VS code를 사용한다 ㅎㅎ\n\n추가적인 서버 셋업과 IDE 설정이 필요 없으니 Phaser 사용을 위해서는 요 정도만 추가로 해주면 되겠다.\n\n- npm으로 Phaser 설치\n\n```bash\n$ npm install phaser\n```\n\n### 가이드를 따라 샘플 게임 만들기\n\n본격적으로 구미에 맡는 맵을 만들기 전에 Phaser에 익숙해질 겸 가이드를 따라 샘플 게임을 만들어본다. 가이드로 제공된 소스는 html script라서, 글로벌 변수가 따로 없는 react에 맞게 ref, state를 사용해서 약간 수정해봤다. 잘 뜬다 :)\n(making-your-first-phaser-3-game)[https://phaser.io/tutorials/making-your-first-phaser-3-game]\n\n이 샘플 소스만으로도 회의실 구성에 필요한 요소는 어느정도 구현이 가능해보인다. 굿!\n\n![Sample Game](/images/gather_clone_coding/1.png)\n\n<details>\n<summary>샘플 소스 전문</summary>\n\n```jsx\nimport Phaser from \"phaser\";\nimport { useEffect, useRef, useState } from \"react\";\n\nconst SamplePage = () => {\n  const variables = useRef<{\n    platforms: Phaser.Physics.Arcade.StaticGroup;\n    player: Phaser.Types.Physics.Arcade.SpriteWithDynamicBody;\n    cursors: Phaser.Types.Input.Keyboard.CursorKeys;\n    stars: Phaser.Physics.Arcade.Group;\n  }>();\n\n  const config = useRef<Phaser.Types.Core.GameConfig>({\n    type: Phaser.AUTO,\n    parent: \"sample-page\", //NOTE : 아래 div의 id값을 넣어주면 된다.\n    width: 800,\n    height: 600,\n    physics: {\n      default: \"arcade\",\n      arcade: {\n        gravity: { y: 200 },\n      },\n    },\n    scene: {\n      preload: function () {\n        this.load.image(\"sky\", \"assets/sky.png\");\n        this.load.image(\"ground\", \"assets/platform.png\");\n        this.load.image(\"star\", \"assets/star.png\");\n        this.load.image(\"bomb\", \"assets/bomb.png\");\n        this.load.spritesheet(\"dude\", \"assets/dude.png\", {\n          frameWidth: 32,\n          frameHeight: 48,\n        });\n      },\n      create: function () {\n        this.add.image(400, 300, \"sky\");\n\n        //NOTE : config에 physics를 정의해두어야 정상적으로 동작한다\n        const platforms = this.physics.add.staticGroup();\n\n        //NOTE : static physics body의 크기를 변경했으므로 refreshBody 호출\n        platforms.create(400, 568, \"ground\").setScale(2).refreshBody();\n\n        platforms.create(600, 400, \"ground\");\n        platforms.create(50, 250, \"ground\");\n        platforms.create(750, 220, \"ground\");\n\n        const player = this.physics.add.sprite(100, 450, \"dude\");\n        player.setBounce(0.2);\n        player.setCollideWorldBounds(true);\n\n        this.anims.create({\n          key: \"left\",\n          frames: this.anims.generateFrameNumbers(\"dude\", { start: 0, end: 3 }),\n          frameRate: 10,\n          repeat: -1,\n        });\n\n        this.anims.create({\n          key: \"turn\",\n          frames: [{ key: \"dude\", frame: 4 }],\n          frameRate: 20,\n        });\n\n        this.anims.create({\n          key: \"right\",\n          frames: this.anims.generateFrameNumbers(\"dude\", { start: 5, end: 8 }),\n          frameRate: 10,\n          repeat: -1,\n        });\n\n        this.physics.add.collider(player, platforms);\n\n        const cursors = this.input.keyboard.createCursorKeys();\n\n        const scoreText = this.add.text(16, 16, \"score: 0\", {\n          fontSize: \"32px\",\n          color: \"#fff\",\n        });\n\n        const stars = this.physics.add.group({\n          key: \"star\",\n          repeat: 11,\n          setXY: { x: 12, y: 0, stepX: 70 },\n        });\n\n        stars.children.iterate(function (child) {\n          (child as any).setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));\n        });\n\n        this.physics.add.collider(stars, platforms);\n        this.physics.add.overlap(\n          player,\n          stars,\n          (player, star) => {\n            (star as any).disableBody(true, true);\n            setScore((prev) => {\n              scoreText.setText(\"Score: \" + (prev + 1));\n              return prev + 1;\n            });\n\n            if (stars.countActive(true) === 0) {\n              stars.children.iterate(function (child) {\n                (child as any).enableBody(\n                  true,\n                  (child as any).x,\n                  0,\n                  true,\n                  true\n                );\n              });\n\n              const x =\n                (player as any).x < 400\n                  ? Phaser.Math.Between(400, 800)\n                  : Phaser.Math.Between(0, 400);\n\n              const bomb = bombs.create(x, 16, \"bomb\");\n              bomb.setBounce(1);\n              bomb.setCollideWorldBounds(true);\n              bomb.setVelocity(Phaser.Math.Between(-200, 200), 20);\n            }\n          },\n          undefined,\n          this\n        );\n\n        const bombs = this.physics.add.group();\n\n        this.physics.add.collider(bombs, platforms);\n\n        this.physics.add.collider(\n          player,\n          bombs,\n          (player, bomb) => {\n            this.physics.pause();\n\n            (player as any).setTint(0xff0000);\n\n            this.anims.play(\"turn\", player);\n\n            this.add.text(240, 300, \"GAME OVER\", {\n              fontSize: \"64px\",\n              color: \"#0xff00\",\n            });\n          },\n          undefined,\n          this\n        );\n        variables.current = {\n          platforms,\n          player,\n          cursors,\n          stars,\n        };\n      },\n      update: function () {\n        if (variables.current) {\n          const { cursors, player } = variables.current;\n\n          if (cursors.left.isDown) {\n            player.setVelocityX(-160);\n            player.anims.play(\"left\", true);\n          } else if (cursors.right.isDown) {\n            player.setVelocityX(160);\n            player.anims.play(\"right\", true);\n          } else {\n            player.setVelocityX(0);\n            player.anims.play(\"turn\");\n          }\n          if (cursors.up.isDown && player.body.touching.down) {\n            player.setVelocityY(-330);\n          }\n        }\n      },\n    },\n  });\n\n  const [score, setScore] = useState<number>(0);\n  const [game, setGame] = useState<Phaser.Game>();\n\n  useEffect(() => {\n    const game = new Phaser.Game(config.current);\n    setGame(game);\n\n    return () => {\n      game.destroy(true);\n    };\n  }, []);\n\n  return <div id=\"sample-page\"></div>;\n};\n\nexport default SamplePage;\n```\n\n</details>\n\n### 회의실을 그리는데에 사용할 무료 애셋을 찾자\n\n가장 기본적인 회의실 맵을 그리기 위해서 아래와 같이 크게 세 가지의 애셋이 필요하다.\n\n- 바닥\n- 캐릭터\n- 오브젝트 (벽, 책상, 집기 등등)\n- 맵 뒷배경 이미지\n\n[무료로 애셋을 받을 수 있는 사이트](https://itch.io/game-assets/free)와 [Pixabay](https://pixabay.com/ko)에서 발품을 팔아 줍줍한 애셋들은 root의 public 폴더에 차곡차곡 담아준다.\n\n### 자 이제 회의실을 그려보자\n\n이제 어느 위치에 어떤 타일을 배치할지 정의하면 된다. Phaser 예제를 둘러보니 아래 캡쳐와 같이 json 형식으로 좌표값을 넘겨받고 있다는 것을 어렵지 않게 확인할 수 있었는데, 처음에는 이걸 손으로 하나하나 해야하는 줄 알고 포기할까 했다.\n![json](/images/gather_clone_coding/5.png)\n\n당연히 요 json을 쉽게 만들 수 있도록 도와주는 프로그램이 이미 있더라. 한 가지만은 아닌 것 같은데, 그 중 나는 [Tiled](https://www.mapeditor.org/) 를 사용해보았다. 검색결과가 제일 많아서 ㅎㅎ\n\nTiled를 실행한 뒤 프로젝트와 맵을 신규 생성하고, 위에서 모아둔 애셋 타일셋을 import 해주면 아래와 같이 맵을 한칸 한칸 그려줄 수 있다.\n\n![회의실 전경](/images/gather_clone_coding/2.png)\n\n타일셋을 그릴 때는 용도에 맞게 레이어를 추가할 수 있는 듯 하다. 나는 바닥, 벽, 집기류 총 세 개의 레이어를 사용하여 회의실을 꾸몄다.\n참고로 맵 메이커를 제대로/잘 사용하는 방법에 대해서는 다른 포스트에서 추가로 다루어야 할 정도로 양이 되는 듯 하다, 이번에는 이 정도로 만족하고 넘어간다.\n\n이제 만든 맵을 Phaser에서 읽을 수 있도록 json 형식으로 저장해주면 되는데, 그전에 맵이 타일셋을 내장하도록 해야하는데... 무슨 이유에서인지 가이드대로 '타일셋 내장' 버튼을 클릭하면 맵이 깨진다 ㅠㅠ\n![요것을 누르면](/images/gather_clone_coding/3.png)\n![이렇게 된다 ㅠㅠ 왜!!!](/images/gather_clone_coding/4.png)\n잠시 생각해보니 json에 이미지 정보를 내장하는 것이 자연스러운 방법만은 아니라는 생각이 들기도한다. 문득 위에 캡쳐한 Phaser 예제에서 힌트를 얻을 수 있지 않을까 싶어 [예제 소스](https://phaser.io/examples/v3/view/camera/follow-zoom-tilemap)를 확인 해보니 아래 코드와 같이 타일셋의 경로도 상대경로로 지정이 되어있었다. onCreate 시점에 타일셋 자원도 로드하는 모양 ㅎㅎ\n\n```jsx\nthis.load.tilemapTiledJSON(\"map\", \"assets/tilemaps/maps/super-mario.json\");\nthis.load.image(\"tiles1\", \"assets/tilemaps/tiles/super-mario.png\");\n```\n\n타일셋을 포함해서 저장했을 때 왜 깨지는지까지는 빨리 파악이 어려울 것 같으니 우선은 예제를 참고하여 얼른 넘어가기로하고 (응 그렇게 넘어간거 산더미~) 나도 타일셋 이미지를 asset 쪽에 넣어줬다.\n\n### 짜잔\n\nonCreate 함수에 아래와 같이 에셋과 맵정보를 로드하면 화면에 희의실이 그려진 것을 확인할 수 있다 :) 이제 다음 포스트 부터는 실제로 캐릭터를 이동해보도록 하겠다\n\n```jsx\nthis.load.tilemapTiledJSON(\"map\", \"assets/tilemaps/maps/super-mario.json\");\nthis.load.image(\"tiles1\", \"assets/tilemaps/tiles/super-mario.png\");\n```\n","slug":"ToyProjects/Gather/gather-clonecoding-2","published":1,"updated":"2023-01-22T14:01:43.144Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2s4001mtqwe3z6hfbj0","content":"<p>이전 포스트에서는 MOTIVATION, PREPARATION 까지 정리했고, 이어서 DELEVERY했던 내용 중 3.맵 구성하기 항목까지 기록한다.</p>\n<ol>\n<li><strong>git repository 생성 및 각 모듈 셋업하기</strong><br>🎁 React, Django 셋업과정</li>\n<li><strong>화면 뼈대 구성하기</strong><br>🎁 Chakra 사용법</li>\n<li><strong>맵 구성하기</strong><br>🎁 Phaser 사용법<br>🎁 Phaser와 React.js를 함께 사용하는 과정</li>\n<li>캐릭터 이동 구현하기</li>\n<li>회의실 입장 구현하기</li>\n<li>2인 음성 영상 챗 구현하기</li>\n<li>다자 음성 영상 챗 구현하기</li>\n<li>미디어 설정 기능 구현하기</li>\n</ol>\n<h1 id=\"DELEVERY\"><a href=\"#DELEVERY\" class=\"headerlink\" title=\"DELEVERY\"></a>DELEVERY</h1><h2 id=\"1-git-repository-생성-및-각-모듈-셋업하기\"><a href=\"#1-git-repository-생성-및-각-모듈-셋업하기\" class=\"headerlink\" title=\"1. git repository 생성 및 각 모듈 셋업하기\"></a>1. git repository 생성 및 각 모듈 셋업하기</h2><p><a href=\"https://github.com/ga0hyeon/cowork-saga\">git repository</a>를 만들어주고, signalingServer와 client 폴더에 각각 Django와 React 셋업을 진행했다.</p>\n<h3 id=\"Django-셋업-with-djangoRestFramework\"><a href=\"#Django-셋업-with-djangoRestFramework\" class=\"headerlink\" title=\"Django 셋업 with djangoRestFramework\"></a>Django 셋업 with djangoRestFramework</h3><p><a href=\"https://docs.djangoproject.com/ko/4.0/intro/\">django docs</a>를 참고하여 초기 세팅을 진행한다.<br>+) mac에 python 2.7이 기본으로 깔려있어서 3.x 버전의 python을 받아주었다. python3을 기본으로 바라보도록 bashrc에도 alias를 추가해준다.</p>\n<p>django를 설치해주고</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python -m pip install Django</span><br></pre></td></tr></table></figure>\n\n<p>설치 후 잘 설치되었는지 버전을 확인한다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python -m django --version</span><br></pre></td></tr></table></figure>\n\n<p>그리고 아래 명령어로 현재 경로에 django 프로젝트를 생성한다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python -m django startproject gather_clone_siganlling_server</span><br></pre></td></tr></table></figure>\n\n<p>지정해준 폴더 (나의 경우 gather_clone_siganlling_server)로 이동하여 아래의 명령어를 수행하면, 짜잔! 기본포트(8000)에 샘플페이지가 뜬다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python manage.py runserver</span><br></pre></td></tr></table></figure>\n\n<p>나는 웹서버가 아니라 REST Api 서버로 사용할 것이므로, <a href=\"https://www.django-rest-framework.org/#installation\">django-rest-framework docs</a>를 참고하여 djangoRestFramework를 깔아주자.<br>example까지 따라서 만들면, 이제 localhost:8000에 이전의 django 샘플페이지가 아니라 swagger와 유사한 형태의 REST framework 페이지가 뜬다.</p>\n<h3 id=\"React-셋업-with-Chakra-UI-amp-Adapter-js\"><a href=\"#React-셋업-with-Chakra-UI-amp-Adapter-js\" class=\"headerlink\" title=\"React 셋업 with Chakra UI &amp; Adapter.js\"></a>React 셋업 with Chakra UI &amp; Adapter.js</h3><ol>\n<li>CRA로 React 앱 초기 세팅</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npx create-react-app gather-clone-client --template @chakra-ui/typescript</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>Adapter.js 라이브러리 설치<br>Adapter.js는 Polyfill(브라우저에서 지원하지 않는 최신 기능을 사용할 수 있도록 도와주는 코드의 모음)과 Shim(이미 존재하는 코드의 동작을 바로잡는데에 사용하는 코드의 모음)을 사용하여 WebRTC의 브라우저 간 호환성 문제를 해결해둔 라이브러리이다.<br>WebRTC가 계속해서 변화하고 있는 기술이고, 각 브라우저별로 지원 수준이 다르기 때문에 일괄 적용이 쉽지 않은 모양이다.</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webrtc-adapter</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-화면-뼈대-구성하기\"><a href=\"#2-화면-뼈대-구성하기\" class=\"headerlink\" title=\"2. 화면 뼈대 구성하기\"></a>2. 화면 뼈대 구성하기</h2><p>위에서 만들어준 React 프로젝트 폴더에서 화면 뼈대 구성을 이어서 진행한다. 화면 구조는 아래와 매우 간단하다 :)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">App.tsx</span><br><span class=\"line\">pages</span><br><span class=\"line\"> ⌞IntroPage.tsx</span><br><span class=\"line\"> ⌞MeetingPage.tsx</span><br></pre></td></tr></table></figure>\n\n<p>IntroPage에는 Chakra UI를 활용해서 간단한 정보 입력 form을 구현한다. 우선은 구분을 위해 이름 정도만 입력받도록 하자.</p>\n<h2 id=\"3-맵-구성하기\"><a href=\"#3-맵-구성하기\" class=\"headerlink\" title=\"3. 맵 구성하기\"></a>3. 맵 구성하기</h2><p>맵 구성에는 Phaser를 사용한다.</p>\n<h3 id=\"Phaser란\"><a href=\"#Phaser란\" class=\"headerlink\" title=\"Phaser란?\"></a>Phaser란?</h3><p>cross-browser HTML5 게임을 쉽고 빠르게 만들 수 있도록하는 프레임워크.</p>\n<h3 id=\"Phaser를-사용하기-위한-추가적인-개발환경-setup\"><a href=\"#Phaser를-사용하기-위한-추가적인-개발환경-setup\" class=\"headerlink\" title=\"Phaser를 사용하기 위한 추가적인 개발환경 setup\"></a>Phaser를 사용하기 위한 추가적인 개발환경 setup</h3><p>Phaser가 html 기반으로 게임을 만들수 있게 해준다고 하더라도, 브라우저에서는 원칙적으로 로컬 리소스에 접근할 수 없기 때문에 html 파일 만으로는 Phaser 게임을 실행할 수 없다. (사실 이 개념 예전에도 접했었는데 그때는 바로 이해가 안되었는데.. 지금은 후루룩 읽힌다. 아주 좋다!!)따라서 html과 리소스를 올릴 서버가 필요하고, 공식 가이드에서는 python, php, node.js 정도를 언급하고 있다.</p>\n<p>나는 위에서 이미 React로 페이지 뼈대를 구성했고, 운영 단계까지 올릴 생각이 없으므로 React 개발 서버면 충분하다.</p>\n<p>그리고 가이드에 IDE도 몇 가지 언급하고있는데, brakets 같은 HTML 편집기로도 개발이 가능하다고 한다. 재밌다. 물론 나는 위에서 세팅해둔 VS code를 사용한다 ㅎㅎ</p>\n<p>추가적인 서버 셋업과 IDE 설정이 필요 없으니 Phaser 사용을 위해서는 요 정도만 추가로 해주면 되겠다.</p>\n<ul>\n<li>npm으로 Phaser 설치</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install phaser</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"가이드를-따라-샘플-게임-만들기\"><a href=\"#가이드를-따라-샘플-게임-만들기\" class=\"headerlink\" title=\"가이드를 따라 샘플 게임 만들기\"></a>가이드를 따라 샘플 게임 만들기</h3><p>본격적으로 구미에 맡는 맵을 만들기 전에 Phaser에 익숙해질 겸 가이드를 따라 샘플 게임을 만들어본다. 가이드로 제공된 소스는 html script라서, 글로벌 변수가 따로 없는 react에 맞게 ref, state를 사용해서 약간 수정해봤다. 잘 뜬다 :)<br>(making-your-first-phaser-3-game)[<a href=\"https://phaser.io/tutorials/making-your-first-phaser-3-game]\">https://phaser.io/tutorials/making-your-first-phaser-3-game]</a></p>\n<p>이 샘플 소스만으로도 회의실 구성에 필요한 요소는 어느정도 구현이 가능해보인다. 굿!</p>\n<p><img src=\"/images/gather_clone_coding/1.png\" alt=\"Sample Game\"></p>\n<details>\n<summary>샘플 소스 전문</summary>\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Phaser</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;phaser&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useEffect, useRef, useState &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">SamplePage</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> variables = useRef&lt;&#123;</span><br><span class=\"line\">    <span class=\"attr\">platforms</span>: <span class=\"title class_\">Phaser</span>.<span class=\"property\">Physics</span>.<span class=\"property\">Arcade</span>.<span class=\"property\">StaticGroup</span>;</span><br><span class=\"line\">    <span class=\"attr\">player</span>: <span class=\"title class_\">Phaser</span>.<span class=\"property\">Types</span>.<span class=\"property\">Physics</span>.<span class=\"property\">Arcade</span>.<span class=\"property\">SpriteWithDynamicBody</span>;</span><br><span class=\"line\">    <span class=\"attr\">cursors</span>: <span class=\"title class_\">Phaser</span>.<span class=\"property\">Types</span>.<span class=\"property\">Input</span>.<span class=\"property\">Keyboard</span>.<span class=\"property\">CursorKeys</span>;</span><br><span class=\"line\">    <span class=\"attr\">stars</span>: <span class=\"title class_\">Phaser</span>.<span class=\"property\">Physics</span>.<span class=\"property\">Arcade</span>.<span class=\"property\">Group</span>;</span><br><span class=\"line\">  &#125;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> config = useRef&lt;<span class=\"title class_\">Phaser</span>.<span class=\"property\">Types</span>.<span class=\"property\">Core</span>.<span class=\"property\">GameConfig</span>&gt;(&#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"title class_\">Phaser</span>.<span class=\"property\">AUTO</span>,</span><br><span class=\"line\">    <span class=\"attr\">parent</span>: <span class=\"string\">&quot;sample-page&quot;</span>, <span class=\"comment\">//NOTE : 아래 div의 id값을 넣어주면 된다.</span></span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"number\">800</span>,</span><br><span class=\"line\">    <span class=\"attr\">height</span>: <span class=\"number\">600</span>,</span><br><span class=\"line\">    <span class=\"attr\">physics</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">default</span>: <span class=\"string\">&quot;arcade&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">arcade</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">gravity</span>: &#123; <span class=\"attr\">y</span>: <span class=\"number\">200</span> &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">scene</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">preload</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&quot;sky&quot;</span>, <span class=\"string\">&quot;assets/sky.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&quot;ground&quot;</span>, <span class=\"string\">&quot;assets/platform.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&quot;star&quot;</span>, <span class=\"string\">&quot;assets/star.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&quot;bomb&quot;</span>, <span class=\"string\">&quot;assets/bomb.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">spritesheet</span>(<span class=\"string\">&quot;dude&quot;</span>, <span class=\"string\">&quot;assets/dude.png&quot;</span>, &#123;</span><br><span class=\"line\">          <span class=\"attr\">frameWidth</span>: <span class=\"number\">32</span>,</span><br><span class=\"line\">          <span class=\"attr\">frameHeight</span>: <span class=\"number\">48</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">create</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">add</span>.<span class=\"title function_\">image</span>(<span class=\"number\">400</span>, <span class=\"number\">300</span>, <span class=\"string\">&quot;sky&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//NOTE : config에 physics를 정의해두어야 정상적으로 동작한다</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> platforms = <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">staticGroup</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//NOTE : static physics body의 크기를 변경했으므로 refreshBody 호출</span></span><br><span class=\"line\">        platforms.<span class=\"title function_\">create</span>(<span class=\"number\">400</span>, <span class=\"number\">568</span>, <span class=\"string\">&quot;ground&quot;</span>).<span class=\"title function_\">setScale</span>(<span class=\"number\">2</span>).<span class=\"title function_\">refreshBody</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        platforms.<span class=\"title function_\">create</span>(<span class=\"number\">600</span>, <span class=\"number\">400</span>, <span class=\"string\">&quot;ground&quot;</span>);</span><br><span class=\"line\">        platforms.<span class=\"title function_\">create</span>(<span class=\"number\">50</span>, <span class=\"number\">250</span>, <span class=\"string\">&quot;ground&quot;</span>);</span><br><span class=\"line\">        platforms.<span class=\"title function_\">create</span>(<span class=\"number\">750</span>, <span class=\"number\">220</span>, <span class=\"string\">&quot;ground&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> player = <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">sprite</span>(<span class=\"number\">100</span>, <span class=\"number\">450</span>, <span class=\"string\">&quot;dude&quot;</span>);</span><br><span class=\"line\">        player.<span class=\"title function_\">setBounce</span>(<span class=\"number\">0.2</span>);</span><br><span class=\"line\">        player.<span class=\"title function_\">setCollideWorldBounds</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">anims</span>.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">key</span>: <span class=\"string\">&quot;left&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">frames</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">anims</span>.<span class=\"title function_\">generateFrameNumbers</span>(<span class=\"string\">&quot;dude&quot;</span>, &#123; <span class=\"attr\">start</span>: <span class=\"number\">0</span>, <span class=\"attr\">end</span>: <span class=\"number\">3</span> &#125;),</span><br><span class=\"line\">          <span class=\"attr\">frameRate</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">          <span class=\"attr\">repeat</span>: -<span class=\"number\">1</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">anims</span>.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">key</span>: <span class=\"string\">&quot;turn&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">frames</span>: [&#123; <span class=\"attr\">key</span>: <span class=\"string\">&quot;dude&quot;</span>, <span class=\"attr\">frame</span>: <span class=\"number\">4</span> &#125;],</span><br><span class=\"line\">          <span class=\"attr\">frameRate</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">anims</span>.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">key</span>: <span class=\"string\">&quot;right&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">frames</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">anims</span>.<span class=\"title function_\">generateFrameNumbers</span>(<span class=\"string\">&quot;dude&quot;</span>, &#123; <span class=\"attr\">start</span>: <span class=\"number\">5</span>, <span class=\"attr\">end</span>: <span class=\"number\">8</span> &#125;),</span><br><span class=\"line\">          <span class=\"attr\">frameRate</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">          <span class=\"attr\">repeat</span>: -<span class=\"number\">1</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">collider</span>(player, platforms);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> cursors = <span class=\"variable language_\">this</span>.<span class=\"property\">input</span>.<span class=\"property\">keyboard</span>.<span class=\"title function_\">createCursorKeys</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> scoreText = <span class=\"variable language_\">this</span>.<span class=\"property\">add</span>.<span class=\"title function_\">text</span>(<span class=\"number\">16</span>, <span class=\"number\">16</span>, <span class=\"string\">&quot;score: 0&quot;</span>, &#123;</span><br><span class=\"line\">          <span class=\"attr\">fontSize</span>: <span class=\"string\">&quot;32px&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">color</span>: <span class=\"string\">&quot;#fff&quot;</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> stars = <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">group</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">key</span>: <span class=\"string\">&quot;star&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">repeat</span>: <span class=\"number\">11</span>,</span><br><span class=\"line\">          <span class=\"attr\">setXY</span>: &#123; <span class=\"attr\">x</span>: <span class=\"number\">12</span>, <span class=\"attr\">y</span>: <span class=\"number\">0</span>, <span class=\"attr\">stepX</span>: <span class=\"number\">70</span> &#125;,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        stars.<span class=\"property\">children</span>.<span class=\"title function_\">iterate</span>(<span class=\"keyword\">function</span> (<span class=\"params\">child</span>) &#123;</span><br><span class=\"line\">          (child <span class=\"keyword\">as</span> any).<span class=\"title function_\">setBounceY</span>(<span class=\"title class_\">Phaser</span>.<span class=\"property\">Math</span>.<span class=\"title class_\">FloatBetween</span>(<span class=\"number\">0.4</span>, <span class=\"number\">0.8</span>));</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">collider</span>(stars, platforms);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">overlap</span>(</span><br><span class=\"line\">          player,</span><br><span class=\"line\">          stars,</span><br><span class=\"line\">          <span class=\"function\">(<span class=\"params\">player, star</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            (star <span class=\"keyword\">as</span> any).<span class=\"title function_\">disableBody</span>(<span class=\"literal\">true</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">            <span class=\"title function_\">setScore</span>(<span class=\"function\">(<span class=\"params\">prev</span>) =&gt;</span> &#123;</span><br><span class=\"line\">              scoreText.<span class=\"title function_\">setText</span>(<span class=\"string\">&quot;Score: &quot;</span> + (prev + <span class=\"number\">1</span>));</span><br><span class=\"line\">              <span class=\"keyword\">return</span> prev + <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (stars.<span class=\"title function_\">countActive</span>(<span class=\"literal\">true</span>) === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">              stars.<span class=\"property\">children</span>.<span class=\"title function_\">iterate</span>(<span class=\"keyword\">function</span> (<span class=\"params\">child</span>) &#123;</span><br><span class=\"line\">                (child <span class=\"keyword\">as</span> any).<span class=\"title function_\">enableBody</span>(</span><br><span class=\"line\">                  <span class=\"literal\">true</span>,</span><br><span class=\"line\">                  (child <span class=\"keyword\">as</span> any).<span class=\"property\">x</span>,</span><br><span class=\"line\">                  <span class=\"number\">0</span>,</span><br><span class=\"line\">                  <span class=\"literal\">true</span>,</span><br><span class=\"line\">                  <span class=\"literal\">true</span></span><br><span class=\"line\">                );</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">const</span> x =</span><br><span class=\"line\">                (player <span class=\"keyword\">as</span> any).<span class=\"property\">x</span> &lt; <span class=\"number\">400</span></span><br><span class=\"line\">                  ? <span class=\"title class_\">Phaser</span>.<span class=\"property\">Math</span>.<span class=\"title class_\">Between</span>(<span class=\"number\">400</span>, <span class=\"number\">800</span>)</span><br><span class=\"line\">                  : <span class=\"title class_\">Phaser</span>.<span class=\"property\">Math</span>.<span class=\"title class_\">Between</span>(<span class=\"number\">0</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">const</span> bomb = bombs.<span class=\"title function_\">create</span>(x, <span class=\"number\">16</span>, <span class=\"string\">&quot;bomb&quot;</span>);</span><br><span class=\"line\">              bomb.<span class=\"title function_\">setBounce</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">              bomb.<span class=\"title function_\">setCollideWorldBounds</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">              bomb.<span class=\"title function_\">setVelocity</span>(<span class=\"title class_\">Phaser</span>.<span class=\"property\">Math</span>.<span class=\"title class_\">Between</span>(-<span class=\"number\">200</span>, <span class=\"number\">200</span>), <span class=\"number\">20</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"literal\">undefined</span>,</span><br><span class=\"line\">          <span class=\"variable language_\">this</span></span><br><span class=\"line\">        );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> bombs = <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">group</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">collider</span>(bombs, platforms);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">collider</span>(</span><br><span class=\"line\">          player,</span><br><span class=\"line\">          bombs,</span><br><span class=\"line\">          <span class=\"function\">(<span class=\"params\">player, bomb</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"title function_\">pause</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">            (player <span class=\"keyword\">as</span> any).<span class=\"title function_\">setTint</span>(<span class=\"number\">0xff0000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">anims</span>.<span class=\"title function_\">play</span>(<span class=\"string\">&quot;turn&quot;</span>, player);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">add</span>.<span class=\"title function_\">text</span>(<span class=\"number\">240</span>, <span class=\"number\">300</span>, <span class=\"string\">&quot;GAME OVER&quot;</span>, &#123;</span><br><span class=\"line\">              <span class=\"attr\">fontSize</span>: <span class=\"string\">&quot;64px&quot;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&quot;#0xff00&quot;</span>,</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"literal\">undefined</span>,</span><br><span class=\"line\">          <span class=\"variable language_\">this</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">        variables.<span class=\"property\">current</span> = &#123;</span><br><span class=\"line\">          platforms,</span><br><span class=\"line\">          player,</span><br><span class=\"line\">          cursors,</span><br><span class=\"line\">          stars,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">update</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (variables.<span class=\"property\">current</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> &#123; cursors, player &#125; = variables.<span class=\"property\">current</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (cursors.<span class=\"property\">left</span>.<span class=\"property\">isDown</span>) &#123;</span><br><span class=\"line\">            player.<span class=\"title function_\">setVelocityX</span>(-<span class=\"number\">160</span>);</span><br><span class=\"line\">            player.<span class=\"property\">anims</span>.<span class=\"title function_\">play</span>(<span class=\"string\">&quot;left&quot;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cursors.<span class=\"property\">right</span>.<span class=\"property\">isDown</span>) &#123;</span><br><span class=\"line\">            player.<span class=\"title function_\">setVelocityX</span>(<span class=\"number\">160</span>);</span><br><span class=\"line\">            player.<span class=\"property\">anims</span>.<span class=\"title function_\">play</span>(<span class=\"string\">&quot;right&quot;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            player.<span class=\"title function_\">setVelocityX</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">            player.<span class=\"property\">anims</span>.<span class=\"title function_\">play</span>(<span class=\"string\">&quot;turn&quot;</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (cursors.<span class=\"property\">up</span>.<span class=\"property\">isDown</span> &amp;&amp; player.<span class=\"property\">body</span>.<span class=\"property\">touching</span>.<span class=\"property\">down</span>) &#123;</span><br><span class=\"line\">            player.<span class=\"title function_\">setVelocityY</span>(-<span class=\"number\">330</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> [score, setScore] = useState&lt;number&gt;(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [game, setGame] = useState&lt;<span class=\"title class_\">Phaser</span>.<span class=\"property\">Game</span>&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> game = <span class=\"keyword\">new</span> <span class=\"title class_\">Phaser</span>.<span class=\"title class_\">Game</span>(config.<span class=\"property\">current</span>);</span><br><span class=\"line\">    <span class=\"title function_\">setGame</span>(game);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      game.<span class=\"title function_\">destroy</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;, []);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sample-page&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">SamplePage</span>;</span><br></pre></td></tr></table></figure>\n\n</details>\n\n<h3 id=\"회의실을-그리는데에-사용할-무료-애셋을-찾자\"><a href=\"#회의실을-그리는데에-사용할-무료-애셋을-찾자\" class=\"headerlink\" title=\"회의실을 그리는데에 사용할 무료 애셋을 찾자\"></a>회의실을 그리는데에 사용할 무료 애셋을 찾자</h3><p>가장 기본적인 회의실 맵을 그리기 위해서 아래와 같이 크게 세 가지의 애셋이 필요하다.</p>\n<ul>\n<li>바닥</li>\n<li>캐릭터</li>\n<li>오브젝트 (벽, 책상, 집기 등등)</li>\n<li>맵 뒷배경 이미지</li>\n</ul>\n<p><a href=\"https://itch.io/game-assets/free\">무료로 애셋을 받을 수 있는 사이트</a>와 <a href=\"https://pixabay.com/ko\">Pixabay</a>에서 발품을 팔아 줍줍한 애셋들은 root의 public 폴더에 차곡차곡 담아준다.</p>\n<h3 id=\"자-이제-회의실을-그려보자\"><a href=\"#자-이제-회의실을-그려보자\" class=\"headerlink\" title=\"자 이제 회의실을 그려보자\"></a>자 이제 회의실을 그려보자</h3><p>이제 어느 위치에 어떤 타일을 배치할지 정의하면 된다. Phaser 예제를 둘러보니 아래 캡쳐와 같이 json 형식으로 좌표값을 넘겨받고 있다는 것을 어렵지 않게 확인할 수 있었는데, 처음에는 이걸 손으로 하나하나 해야하는 줄 알고 포기할까 했다.<br><img src=\"/images/gather_clone_coding/5.png\" alt=\"json\"></p>\n<p>당연히 요 json을 쉽게 만들 수 있도록 도와주는 프로그램이 이미 있더라. 한 가지만은 아닌 것 같은데, 그 중 나는 <a href=\"https://www.mapeditor.org/\">Tiled</a> 를 사용해보았다. 검색결과가 제일 많아서 ㅎㅎ</p>\n<p>Tiled를 실행한 뒤 프로젝트와 맵을 신규 생성하고, 위에서 모아둔 애셋 타일셋을 import 해주면 아래와 같이 맵을 한칸 한칸 그려줄 수 있다.</p>\n<p><img src=\"/images/gather_clone_coding/2.png\" alt=\"회의실 전경\"></p>\n<p>타일셋을 그릴 때는 용도에 맞게 레이어를 추가할 수 있는 듯 하다. 나는 바닥, 벽, 집기류 총 세 개의 레이어를 사용하여 회의실을 꾸몄다.<br>참고로 맵 메이커를 제대로/잘 사용하는 방법에 대해서는 다른 포스트에서 추가로 다루어야 할 정도로 양이 되는 듯 하다, 이번에는 이 정도로 만족하고 넘어간다.</p>\n<p>이제 만든 맵을 Phaser에서 읽을 수 있도록 json 형식으로 저장해주면 되는데, 그전에 맵이 타일셋을 내장하도록 해야하는데… 무슨 이유에서인지 가이드대로 ‘타일셋 내장’ 버튼을 클릭하면 맵이 깨진다 ㅠㅠ<br><img src=\"/images/gather_clone_coding/3.png\" alt=\"요것을 누르면\"><br><img src=\"/images/gather_clone_coding/4.png\" alt=\"이렇게 된다 ㅠㅠ 왜!!!\"><br>잠시 생각해보니 json에 이미지 정보를 내장하는 것이 자연스러운 방법만은 아니라는 생각이 들기도한다. 문득 위에 캡쳐한 Phaser 예제에서 힌트를 얻을 수 있지 않을까 싶어 <a href=\"https://phaser.io/examples/v3/view/camera/follow-zoom-tilemap\">예제 소스</a>를 확인 해보니 아래 코드와 같이 타일셋의 경로도 상대경로로 지정이 되어있었다. onCreate 시점에 타일셋 자원도 로드하는 모양 ㅎㅎ</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">tilemapTiledJSON</span>(<span class=\"string\">&quot;map&quot;</span>, <span class=\"string\">&quot;assets/tilemaps/maps/super-mario.json&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&quot;tiles1&quot;</span>, <span class=\"string\">&quot;assets/tilemaps/tiles/super-mario.png&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>타일셋을 포함해서 저장했을 때 왜 깨지는지까지는 빨리 파악이 어려울 것 같으니 우선은 예제를 참고하여 얼른 넘어가기로하고 (응 그렇게 넘어간거 산더미~) 나도 타일셋 이미지를 asset 쪽에 넣어줬다.</p>\n<h3 id=\"짜잔\"><a href=\"#짜잔\" class=\"headerlink\" title=\"짜잔\"></a>짜잔</h3><p>onCreate 함수에 아래와 같이 에셋과 맵정보를 로드하면 화면에 희의실이 그려진 것을 확인할 수 있다 :) 이제 다음 포스트 부터는 실제로 캐릭터를 이동해보도록 하겠다</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">tilemapTiledJSON</span>(<span class=\"string\">&quot;map&quot;</span>, <span class=\"string\">&quot;assets/tilemaps/maps/super-mario.json&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&quot;tiles1&quot;</span>, <span class=\"string\">&quot;assets/tilemaps/tiles/super-mario.png&quot;</span>);</span><br></pre></td></tr></table></figure>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<p>이전 포스트에서는 MOTIVATION, PREPARATION 까지 정리했고, 이어서 DELEVERY했던 내용 중 3.맵 구성하기 항목까지 기록한다.</p>\n<ol>\n<li><strong>git repository 생성 및 각 모듈 셋업하기</strong><br>🎁 React, Django 셋업과정</li>\n<li><strong>화면 뼈대 구성하기</strong><br>🎁 Chakra 사용법</li>\n<li><strong>맵 구성하기</strong><br>🎁 Phaser 사용법<br>🎁 Phaser와 React.js를 함께 사용하는 과정</li>\n<li>캐릭터 이동 구현하기</li>\n<li>회의실 입장 구현하기</li>\n<li>2인 음성 영상 챗 구현하기</li>\n<li>다자 음성 영상 챗 구현하기</li>\n<li>미디어 설정 기능 구현하기</li>\n</ol>\n<h1 id=\"DELEVERY\"><a href=\"#DELEVERY\" class=\"headerlink\" title=\"DELEVERY\"></a>DELEVERY</h1><h2 id=\"1-git-repository-생성-및-각-모듈-셋업하기\"><a href=\"#1-git-repository-생성-및-각-모듈-셋업하기\" class=\"headerlink\" title=\"1. git repository 생성 및 각 모듈 셋업하기\"></a>1. git repository 생성 및 각 모듈 셋업하기</h2><p><a href=\"https://github.com/ga0hyeon/cowork-saga\">git repository</a>를 만들어주고, signalingServer와 client 폴더에 각각 Django와 React 셋업을 진행했다.</p>\n<h3 id=\"Django-셋업-with-djangoRestFramework\"><a href=\"#Django-셋업-with-djangoRestFramework\" class=\"headerlink\" title=\"Django 셋업 with djangoRestFramework\"></a>Django 셋업 with djangoRestFramework</h3><p><a href=\"https://docs.djangoproject.com/ko/4.0/intro/\">django docs</a>를 참고하여 초기 세팅을 진행한다.<br>+) mac에 python 2.7이 기본으로 깔려있어서 3.x 버전의 python을 받아주었다. python3을 기본으로 바라보도록 bashrc에도 alias를 추가해준다.</p>\n<p>django를 설치해주고</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python -m pip install Django</span><br></pre></td></tr></table></figure>\n\n<p>설치 후 잘 설치되었는지 버전을 확인한다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python -m django --version</span><br></pre></td></tr></table></figure>\n\n<p>그리고 아래 명령어로 현재 경로에 django 프로젝트를 생성한다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python -m django startproject gather_clone_siganlling_server</span><br></pre></td></tr></table></figure>\n\n<p>지정해준 폴더 (나의 경우 gather_clone_siganlling_server)로 이동하여 아래의 명령어를 수행하면, 짜잔! 기본포트(8000)에 샘플페이지가 뜬다.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python manage.py runserver</span><br></pre></td></tr></table></figure>\n\n<p>나는 웹서버가 아니라 REST Api 서버로 사용할 것이므로, <a href=\"https://www.django-rest-framework.org/#installation\">django-rest-framework docs</a>를 참고하여 djangoRestFramework를 깔아주자.<br>example까지 따라서 만들면, 이제 localhost:8000에 이전의 django 샘플페이지가 아니라 swagger와 유사한 형태의 REST framework 페이지가 뜬다.</p>\n<h3 id=\"React-셋업-with-Chakra-UI-amp-Adapter-js\"><a href=\"#React-셋업-with-Chakra-UI-amp-Adapter-js\" class=\"headerlink\" title=\"React 셋업 with Chakra UI &amp; Adapter.js\"></a>React 셋업 with Chakra UI &amp; Adapter.js</h3><ol>\n<li>CRA로 React 앱 초기 세팅</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npx create-react-app gather-clone-client --template @chakra-ui/typescript</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>Adapter.js 라이브러리 설치<br>Adapter.js는 Polyfill(브라우저에서 지원하지 않는 최신 기능을 사용할 수 있도록 도와주는 코드의 모음)과 Shim(이미 존재하는 코드의 동작을 바로잡는데에 사용하는 코드의 모음)을 사용하여 WebRTC의 브라우저 간 호환성 문제를 해결해둔 라이브러리이다.<br>WebRTC가 계속해서 변화하고 있는 기술이고, 각 브라우저별로 지원 수준이 다르기 때문에 일괄 적용이 쉽지 않은 모양이다.</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webrtc-adapter</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-화면-뼈대-구성하기\"><a href=\"#2-화면-뼈대-구성하기\" class=\"headerlink\" title=\"2. 화면 뼈대 구성하기\"></a>2. 화면 뼈대 구성하기</h2><p>위에서 만들어준 React 프로젝트 폴더에서 화면 뼈대 구성을 이어서 진행한다. 화면 구조는 아래와 매우 간단하다 :)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">App.tsx</span><br><span class=\"line\">pages</span><br><span class=\"line\"> ⌞IntroPage.tsx</span><br><span class=\"line\"> ⌞MeetingPage.tsx</span><br></pre></td></tr></table></figure>\n\n<p>IntroPage에는 Chakra UI를 활용해서 간단한 정보 입력 form을 구현한다. 우선은 구분을 위해 이름 정도만 입력받도록 하자.</p>\n<h2 id=\"3-맵-구성하기\"><a href=\"#3-맵-구성하기\" class=\"headerlink\" title=\"3. 맵 구성하기\"></a>3. 맵 구성하기</h2><p>맵 구성에는 Phaser를 사용한다.</p>\n<h3 id=\"Phaser란\"><a href=\"#Phaser란\" class=\"headerlink\" title=\"Phaser란?\"></a>Phaser란?</h3><p>cross-browser HTML5 게임을 쉽고 빠르게 만들 수 있도록하는 프레임워크.</p>\n<h3 id=\"Phaser를-사용하기-위한-추가적인-개발환경-setup\"><a href=\"#Phaser를-사용하기-위한-추가적인-개발환경-setup\" class=\"headerlink\" title=\"Phaser를 사용하기 위한 추가적인 개발환경 setup\"></a>Phaser를 사용하기 위한 추가적인 개발환경 setup</h3><p>Phaser가 html 기반으로 게임을 만들수 있게 해준다고 하더라도, 브라우저에서는 원칙적으로 로컬 리소스에 접근할 수 없기 때문에 html 파일 만으로는 Phaser 게임을 실행할 수 없다. (사실 이 개념 예전에도 접했었는데 그때는 바로 이해가 안되었는데.. 지금은 후루룩 읽힌다. 아주 좋다!!)따라서 html과 리소스를 올릴 서버가 필요하고, 공식 가이드에서는 python, php, node.js 정도를 언급하고 있다.</p>\n<p>나는 위에서 이미 React로 페이지 뼈대를 구성했고, 운영 단계까지 올릴 생각이 없으므로 React 개발 서버면 충분하다.</p>\n<p>그리고 가이드에 IDE도 몇 가지 언급하고있는데, brakets 같은 HTML 편집기로도 개발이 가능하다고 한다. 재밌다. 물론 나는 위에서 세팅해둔 VS code를 사용한다 ㅎㅎ</p>\n<p>추가적인 서버 셋업과 IDE 설정이 필요 없으니 Phaser 사용을 위해서는 요 정도만 추가로 해주면 되겠다.</p>\n<ul>\n<li>npm으로 Phaser 설치</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install phaser</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"가이드를-따라-샘플-게임-만들기\"><a href=\"#가이드를-따라-샘플-게임-만들기\" class=\"headerlink\" title=\"가이드를 따라 샘플 게임 만들기\"></a>가이드를 따라 샘플 게임 만들기</h3><p>본격적으로 구미에 맡는 맵을 만들기 전에 Phaser에 익숙해질 겸 가이드를 따라 샘플 게임을 만들어본다. 가이드로 제공된 소스는 html script라서, 글로벌 변수가 따로 없는 react에 맞게 ref, state를 사용해서 약간 수정해봤다. 잘 뜬다 :)<br>(making-your-first-phaser-3-game)[<a href=\"https://phaser.io/tutorials/making-your-first-phaser-3-game]\">https://phaser.io/tutorials/making-your-first-phaser-3-game]</a></p>\n<p>이 샘플 소스만으로도 회의실 구성에 필요한 요소는 어느정도 구현이 가능해보인다. 굿!</p>\n<p><img src=\"/images/gather_clone_coding/1.png\" alt=\"Sample Game\"></p>\n<details>\n<summary>샘플 소스 전문</summary>\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Phaser</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;phaser&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; useEffect, useRef, useState &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">SamplePage</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> variables = useRef&lt;&#123;</span><br><span class=\"line\">    <span class=\"attr\">platforms</span>: <span class=\"title class_\">Phaser</span>.<span class=\"property\">Physics</span>.<span class=\"property\">Arcade</span>.<span class=\"property\">StaticGroup</span>;</span><br><span class=\"line\">    <span class=\"attr\">player</span>: <span class=\"title class_\">Phaser</span>.<span class=\"property\">Types</span>.<span class=\"property\">Physics</span>.<span class=\"property\">Arcade</span>.<span class=\"property\">SpriteWithDynamicBody</span>;</span><br><span class=\"line\">    <span class=\"attr\">cursors</span>: <span class=\"title class_\">Phaser</span>.<span class=\"property\">Types</span>.<span class=\"property\">Input</span>.<span class=\"property\">Keyboard</span>.<span class=\"property\">CursorKeys</span>;</span><br><span class=\"line\">    <span class=\"attr\">stars</span>: <span class=\"title class_\">Phaser</span>.<span class=\"property\">Physics</span>.<span class=\"property\">Arcade</span>.<span class=\"property\">Group</span>;</span><br><span class=\"line\">  &#125;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> config = useRef&lt;<span class=\"title class_\">Phaser</span>.<span class=\"property\">Types</span>.<span class=\"property\">Core</span>.<span class=\"property\">GameConfig</span>&gt;(&#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"title class_\">Phaser</span>.<span class=\"property\">AUTO</span>,</span><br><span class=\"line\">    <span class=\"attr\">parent</span>: <span class=\"string\">&quot;sample-page&quot;</span>, <span class=\"comment\">//NOTE : 아래 div의 id값을 넣어주면 된다.</span></span><br><span class=\"line\">    <span class=\"attr\">width</span>: <span class=\"number\">800</span>,</span><br><span class=\"line\">    <span class=\"attr\">height</span>: <span class=\"number\">600</span>,</span><br><span class=\"line\">    <span class=\"attr\">physics</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">default</span>: <span class=\"string\">&quot;arcade&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">arcade</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">gravity</span>: &#123; <span class=\"attr\">y</span>: <span class=\"number\">200</span> &#125;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">scene</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">preload</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&quot;sky&quot;</span>, <span class=\"string\">&quot;assets/sky.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&quot;ground&quot;</span>, <span class=\"string\">&quot;assets/platform.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&quot;star&quot;</span>, <span class=\"string\">&quot;assets/star.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&quot;bomb&quot;</span>, <span class=\"string\">&quot;assets/bomb.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">spritesheet</span>(<span class=\"string\">&quot;dude&quot;</span>, <span class=\"string\">&quot;assets/dude.png&quot;</span>, &#123;</span><br><span class=\"line\">          <span class=\"attr\">frameWidth</span>: <span class=\"number\">32</span>,</span><br><span class=\"line\">          <span class=\"attr\">frameHeight</span>: <span class=\"number\">48</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">create</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">add</span>.<span class=\"title function_\">image</span>(<span class=\"number\">400</span>, <span class=\"number\">300</span>, <span class=\"string\">&quot;sky&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//NOTE : config에 physics를 정의해두어야 정상적으로 동작한다</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> platforms = <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">staticGroup</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//NOTE : static physics body의 크기를 변경했으므로 refreshBody 호출</span></span><br><span class=\"line\">        platforms.<span class=\"title function_\">create</span>(<span class=\"number\">400</span>, <span class=\"number\">568</span>, <span class=\"string\">&quot;ground&quot;</span>).<span class=\"title function_\">setScale</span>(<span class=\"number\">2</span>).<span class=\"title function_\">refreshBody</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        platforms.<span class=\"title function_\">create</span>(<span class=\"number\">600</span>, <span class=\"number\">400</span>, <span class=\"string\">&quot;ground&quot;</span>);</span><br><span class=\"line\">        platforms.<span class=\"title function_\">create</span>(<span class=\"number\">50</span>, <span class=\"number\">250</span>, <span class=\"string\">&quot;ground&quot;</span>);</span><br><span class=\"line\">        platforms.<span class=\"title function_\">create</span>(<span class=\"number\">750</span>, <span class=\"number\">220</span>, <span class=\"string\">&quot;ground&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> player = <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">sprite</span>(<span class=\"number\">100</span>, <span class=\"number\">450</span>, <span class=\"string\">&quot;dude&quot;</span>);</span><br><span class=\"line\">        player.<span class=\"title function_\">setBounce</span>(<span class=\"number\">0.2</span>);</span><br><span class=\"line\">        player.<span class=\"title function_\">setCollideWorldBounds</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">anims</span>.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">key</span>: <span class=\"string\">&quot;left&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">frames</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">anims</span>.<span class=\"title function_\">generateFrameNumbers</span>(<span class=\"string\">&quot;dude&quot;</span>, &#123; <span class=\"attr\">start</span>: <span class=\"number\">0</span>, <span class=\"attr\">end</span>: <span class=\"number\">3</span> &#125;),</span><br><span class=\"line\">          <span class=\"attr\">frameRate</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">          <span class=\"attr\">repeat</span>: -<span class=\"number\">1</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">anims</span>.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">key</span>: <span class=\"string\">&quot;turn&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">frames</span>: [&#123; <span class=\"attr\">key</span>: <span class=\"string\">&quot;dude&quot;</span>, <span class=\"attr\">frame</span>: <span class=\"number\">4</span> &#125;],</span><br><span class=\"line\">          <span class=\"attr\">frameRate</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">anims</span>.<span class=\"title function_\">create</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">key</span>: <span class=\"string\">&quot;right&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">frames</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">anims</span>.<span class=\"title function_\">generateFrameNumbers</span>(<span class=\"string\">&quot;dude&quot;</span>, &#123; <span class=\"attr\">start</span>: <span class=\"number\">5</span>, <span class=\"attr\">end</span>: <span class=\"number\">8</span> &#125;),</span><br><span class=\"line\">          <span class=\"attr\">frameRate</span>: <span class=\"number\">10</span>,</span><br><span class=\"line\">          <span class=\"attr\">repeat</span>: -<span class=\"number\">1</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">collider</span>(player, platforms);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> cursors = <span class=\"variable language_\">this</span>.<span class=\"property\">input</span>.<span class=\"property\">keyboard</span>.<span class=\"title function_\">createCursorKeys</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> scoreText = <span class=\"variable language_\">this</span>.<span class=\"property\">add</span>.<span class=\"title function_\">text</span>(<span class=\"number\">16</span>, <span class=\"number\">16</span>, <span class=\"string\">&quot;score: 0&quot;</span>, &#123;</span><br><span class=\"line\">          <span class=\"attr\">fontSize</span>: <span class=\"string\">&quot;32px&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">color</span>: <span class=\"string\">&quot;#fff&quot;</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> stars = <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">group</span>(&#123;</span><br><span class=\"line\">          <span class=\"attr\">key</span>: <span class=\"string\">&quot;star&quot;</span>,</span><br><span class=\"line\">          <span class=\"attr\">repeat</span>: <span class=\"number\">11</span>,</span><br><span class=\"line\">          <span class=\"attr\">setXY</span>: &#123; <span class=\"attr\">x</span>: <span class=\"number\">12</span>, <span class=\"attr\">y</span>: <span class=\"number\">0</span>, <span class=\"attr\">stepX</span>: <span class=\"number\">70</span> &#125;,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        stars.<span class=\"property\">children</span>.<span class=\"title function_\">iterate</span>(<span class=\"keyword\">function</span> (<span class=\"params\">child</span>) &#123;</span><br><span class=\"line\">          (child <span class=\"keyword\">as</span> any).<span class=\"title function_\">setBounceY</span>(<span class=\"title class_\">Phaser</span>.<span class=\"property\">Math</span>.<span class=\"title class_\">FloatBetween</span>(<span class=\"number\">0.4</span>, <span class=\"number\">0.8</span>));</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">collider</span>(stars, platforms);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">overlap</span>(</span><br><span class=\"line\">          player,</span><br><span class=\"line\">          stars,</span><br><span class=\"line\">          <span class=\"function\">(<span class=\"params\">player, star</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            (star <span class=\"keyword\">as</span> any).<span class=\"title function_\">disableBody</span>(<span class=\"literal\">true</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">            <span class=\"title function_\">setScore</span>(<span class=\"function\">(<span class=\"params\">prev</span>) =&gt;</span> &#123;</span><br><span class=\"line\">              scoreText.<span class=\"title function_\">setText</span>(<span class=\"string\">&quot;Score: &quot;</span> + (prev + <span class=\"number\">1</span>));</span><br><span class=\"line\">              <span class=\"keyword\">return</span> prev + <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (stars.<span class=\"title function_\">countActive</span>(<span class=\"literal\">true</span>) === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">              stars.<span class=\"property\">children</span>.<span class=\"title function_\">iterate</span>(<span class=\"keyword\">function</span> (<span class=\"params\">child</span>) &#123;</span><br><span class=\"line\">                (child <span class=\"keyword\">as</span> any).<span class=\"title function_\">enableBody</span>(</span><br><span class=\"line\">                  <span class=\"literal\">true</span>,</span><br><span class=\"line\">                  (child <span class=\"keyword\">as</span> any).<span class=\"property\">x</span>,</span><br><span class=\"line\">                  <span class=\"number\">0</span>,</span><br><span class=\"line\">                  <span class=\"literal\">true</span>,</span><br><span class=\"line\">                  <span class=\"literal\">true</span></span><br><span class=\"line\">                );</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">const</span> x =</span><br><span class=\"line\">                (player <span class=\"keyword\">as</span> any).<span class=\"property\">x</span> &lt; <span class=\"number\">400</span></span><br><span class=\"line\">                  ? <span class=\"title class_\">Phaser</span>.<span class=\"property\">Math</span>.<span class=\"title class_\">Between</span>(<span class=\"number\">400</span>, <span class=\"number\">800</span>)</span><br><span class=\"line\">                  : <span class=\"title class_\">Phaser</span>.<span class=\"property\">Math</span>.<span class=\"title class_\">Between</span>(<span class=\"number\">0</span>, <span class=\"number\">400</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"keyword\">const</span> bomb = bombs.<span class=\"title function_\">create</span>(x, <span class=\"number\">16</span>, <span class=\"string\">&quot;bomb&quot;</span>);</span><br><span class=\"line\">              bomb.<span class=\"title function_\">setBounce</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">              bomb.<span class=\"title function_\">setCollideWorldBounds</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">              bomb.<span class=\"title function_\">setVelocity</span>(<span class=\"title class_\">Phaser</span>.<span class=\"property\">Math</span>.<span class=\"title class_\">Between</span>(-<span class=\"number\">200</span>, <span class=\"number\">200</span>), <span class=\"number\">20</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"literal\">undefined</span>,</span><br><span class=\"line\">          <span class=\"variable language_\">this</span></span><br><span class=\"line\">        );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> bombs = <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">group</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">collider</span>(bombs, platforms);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"property\">add</span>.<span class=\"title function_\">collider</span>(</span><br><span class=\"line\">          player,</span><br><span class=\"line\">          bombs,</span><br><span class=\"line\">          <span class=\"function\">(<span class=\"params\">player, bomb</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">physics</span>.<span class=\"title function_\">pause</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">            (player <span class=\"keyword\">as</span> any).<span class=\"title function_\">setTint</span>(<span class=\"number\">0xff0000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">anims</span>.<span class=\"title function_\">play</span>(<span class=\"string\">&quot;turn&quot;</span>, player);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">add</span>.<span class=\"title function_\">text</span>(<span class=\"number\">240</span>, <span class=\"number\">300</span>, <span class=\"string\">&quot;GAME OVER&quot;</span>, &#123;</span><br><span class=\"line\">              <span class=\"attr\">fontSize</span>: <span class=\"string\">&quot;64px&quot;</span>,</span><br><span class=\"line\">              <span class=\"attr\">color</span>: <span class=\"string\">&quot;#0xff00&quot;</span>,</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"literal\">undefined</span>,</span><br><span class=\"line\">          <span class=\"variable language_\">this</span></span><br><span class=\"line\">        );</span><br><span class=\"line\">        variables.<span class=\"property\">current</span> = &#123;</span><br><span class=\"line\">          platforms,</span><br><span class=\"line\">          player,</span><br><span class=\"line\">          cursors,</span><br><span class=\"line\">          stars,</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">update</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (variables.<span class=\"property\">current</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">const</span> &#123; cursors, player &#125; = variables.<span class=\"property\">current</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (cursors.<span class=\"property\">left</span>.<span class=\"property\">isDown</span>) &#123;</span><br><span class=\"line\">            player.<span class=\"title function_\">setVelocityX</span>(-<span class=\"number\">160</span>);</span><br><span class=\"line\">            player.<span class=\"property\">anims</span>.<span class=\"title function_\">play</span>(<span class=\"string\">&quot;left&quot;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (cursors.<span class=\"property\">right</span>.<span class=\"property\">isDown</span>) &#123;</span><br><span class=\"line\">            player.<span class=\"title function_\">setVelocityX</span>(<span class=\"number\">160</span>);</span><br><span class=\"line\">            player.<span class=\"property\">anims</span>.<span class=\"title function_\">play</span>(<span class=\"string\">&quot;right&quot;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            player.<span class=\"title function_\">setVelocityX</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">            player.<span class=\"property\">anims</span>.<span class=\"title function_\">play</span>(<span class=\"string\">&quot;turn&quot;</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (cursors.<span class=\"property\">up</span>.<span class=\"property\">isDown</span> &amp;&amp; player.<span class=\"property\">body</span>.<span class=\"property\">touching</span>.<span class=\"property\">down</span>) &#123;</span><br><span class=\"line\">            player.<span class=\"title function_\">setVelocityY</span>(-<span class=\"number\">330</span>);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> [score, setScore] = useState&lt;number&gt;(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [game, setGame] = useState&lt;<span class=\"title class_\">Phaser</span>.<span class=\"property\">Game</span>&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">useEffect</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> game = <span class=\"keyword\">new</span> <span class=\"title class_\">Phaser</span>.<span class=\"title class_\">Game</span>(config.<span class=\"property\">current</span>);</span><br><span class=\"line\">    <span class=\"title function_\">setGame</span>(game);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      game.<span class=\"title function_\">destroy</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;, []);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;sample-page&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title class_\">SamplePage</span>;</span><br></pre></td></tr></table></figure>\n\n</details>\n\n<h3 id=\"회의실을-그리는데에-사용할-무료-애셋을-찾자\"><a href=\"#회의실을-그리는데에-사용할-무료-애셋을-찾자\" class=\"headerlink\" title=\"회의실을 그리는데에 사용할 무료 애셋을 찾자\"></a>회의실을 그리는데에 사용할 무료 애셋을 찾자</h3><p>가장 기본적인 회의실 맵을 그리기 위해서 아래와 같이 크게 세 가지의 애셋이 필요하다.</p>\n<ul>\n<li>바닥</li>\n<li>캐릭터</li>\n<li>오브젝트 (벽, 책상, 집기 등등)</li>\n<li>맵 뒷배경 이미지</li>\n</ul>\n<p><a href=\"https://itch.io/game-assets/free\">무료로 애셋을 받을 수 있는 사이트</a>와 <a href=\"https://pixabay.com/ko\">Pixabay</a>에서 발품을 팔아 줍줍한 애셋들은 root의 public 폴더에 차곡차곡 담아준다.</p>\n<h3 id=\"자-이제-회의실을-그려보자\"><a href=\"#자-이제-회의실을-그려보자\" class=\"headerlink\" title=\"자 이제 회의실을 그려보자\"></a>자 이제 회의실을 그려보자</h3><p>이제 어느 위치에 어떤 타일을 배치할지 정의하면 된다. Phaser 예제를 둘러보니 아래 캡쳐와 같이 json 형식으로 좌표값을 넘겨받고 있다는 것을 어렵지 않게 확인할 수 있었는데, 처음에는 이걸 손으로 하나하나 해야하는 줄 알고 포기할까 했다.<br><img src=\"/images/gather_clone_coding/5.png\" alt=\"json\"></p>\n<p>당연히 요 json을 쉽게 만들 수 있도록 도와주는 프로그램이 이미 있더라. 한 가지만은 아닌 것 같은데, 그 중 나는 <a href=\"https://www.mapeditor.org/\">Tiled</a> 를 사용해보았다. 검색결과가 제일 많아서 ㅎㅎ</p>\n<p>Tiled를 실행한 뒤 프로젝트와 맵을 신규 생성하고, 위에서 모아둔 애셋 타일셋을 import 해주면 아래와 같이 맵을 한칸 한칸 그려줄 수 있다.</p>\n<p><img src=\"/images/gather_clone_coding/2.png\" alt=\"회의실 전경\"></p>\n<p>타일셋을 그릴 때는 용도에 맞게 레이어를 추가할 수 있는 듯 하다. 나는 바닥, 벽, 집기류 총 세 개의 레이어를 사용하여 회의실을 꾸몄다.<br>참고로 맵 메이커를 제대로/잘 사용하는 방법에 대해서는 다른 포스트에서 추가로 다루어야 할 정도로 양이 되는 듯 하다, 이번에는 이 정도로 만족하고 넘어간다.</p>\n<p>이제 만든 맵을 Phaser에서 읽을 수 있도록 json 형식으로 저장해주면 되는데, 그전에 맵이 타일셋을 내장하도록 해야하는데… 무슨 이유에서인지 가이드대로 ‘타일셋 내장’ 버튼을 클릭하면 맵이 깨진다 ㅠㅠ<br><img src=\"/images/gather_clone_coding/3.png\" alt=\"요것을 누르면\"><br><img src=\"/images/gather_clone_coding/4.png\" alt=\"이렇게 된다 ㅠㅠ 왜!!!\"><br>잠시 생각해보니 json에 이미지 정보를 내장하는 것이 자연스러운 방법만은 아니라는 생각이 들기도한다. 문득 위에 캡쳐한 Phaser 예제에서 힌트를 얻을 수 있지 않을까 싶어 <a href=\"https://phaser.io/examples/v3/view/camera/follow-zoom-tilemap\">예제 소스</a>를 확인 해보니 아래 코드와 같이 타일셋의 경로도 상대경로로 지정이 되어있었다. onCreate 시점에 타일셋 자원도 로드하는 모양 ㅎㅎ</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">tilemapTiledJSON</span>(<span class=\"string\">&quot;map&quot;</span>, <span class=\"string\">&quot;assets/tilemaps/maps/super-mario.json&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&quot;tiles1&quot;</span>, <span class=\"string\">&quot;assets/tilemaps/tiles/super-mario.png&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>타일셋을 포함해서 저장했을 때 왜 깨지는지까지는 빨리 파악이 어려울 것 같으니 우선은 예제를 참고하여 얼른 넘어가기로하고 (응 그렇게 넘어간거 산더미~) 나도 타일셋 이미지를 asset 쪽에 넣어줬다.</p>\n<h3 id=\"짜잔\"><a href=\"#짜잔\" class=\"headerlink\" title=\"짜잔\"></a>짜잔</h3><p>onCreate 함수에 아래와 같이 에셋과 맵정보를 로드하면 화면에 희의실이 그려진 것을 확인할 수 있다 :) 이제 다음 포스트 부터는 실제로 캐릭터를 이동해보도록 하겠다</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">tilemapTiledJSON</span>(<span class=\"string\">&quot;map&quot;</span>, <span class=\"string\">&quot;assets/tilemaps/maps/super-mario.json&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">load</span>.<span class=\"title function_\">image</span>(<span class=\"string\">&quot;tiles1&quot;</span>, <span class=\"string\">&quot;assets/tilemaps/tiles/super-mario.png&quot;</span>);</span><br></pre></td></tr></table></figure>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"/images/gather_clone_coding/1.png","popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:01:43 GMT+0900 (대한민국 표준시)","title":"[토이프로젝트] 개더타운 클론코딩 - 2","path":"2022/07/28/ToyProjects/Gather/gather-clonecoding-2/","eyeCatchImage":"/images/gather_clone_coding/1.png","excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-07-27T17:14:38.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-07-27T17:14:38.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"개발일지 > 개더타운 클론코딩","tags":["토이프로젝트","WebRTC","Phaser"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[토이프로젝트] 개더타운 클론코딩 - 3","date":"2022-08-24T17:14:38.000Z","_content":"\n이전 포스트에 이어서 DELEVERY했던 내용 중 5.회의실 입장 구현하기 항목까지 기록한다.\n\n1. ~~git repository 생성 및 각 모듈 셋업하기~~\n2. ~~화면 뼈대 구성하기~~\n3. ~~맵 구성하기~~\n4. **캐릭터 이동 구현하기**\n5. **회의실 입장 구현하기**\n6. 2인 음성 영상 챗 구현하기\n7. 다자 음성 영상 챗 구현하기\n8. 미디어 설정 기능 구현하기\n\n## 4. 캐릭터 이동 구현하기\n\n캐릭터 이동도 사실은 이전 포스트에서 본 예제 코드에 친절히 있었다. create에 에셋을 로드하고 update에 이동 시 애니메이션을 표현해주면 된다.\n\n## 5. 회의실 입장 구현하기\n\n대망의 회의실 입장 구현~ 이라고 해봤자 별거없다 ^\\_^\n캐릭터가 이동할 때마다 회의실 사각형안에 캐릭터의 좌표가 포함되는지 계산하고, 회의실에 들어온 사람이 2명 이상이 되는 순간 WebRTC 커넥션을 열어주면 된다. 시간을 좀 더 써본다면 이 좌표 계산에도 최적의 알고리즘이 있을 것 같긴하다 ㅎㅎ\n","source":"_posts/ToyProjects/Gather/gather-clonecoding-3.md","raw":"---\ntitle: \"[토이프로젝트] 개더타운 클론코딩 - 3\"\ndate: 2022-08-25 02:14:38\ncategories: [개발일지, 개더타운 클론코딩]\ntags: [토이프로젝트, WebRTC, Phaser]\n---\n\n이전 포스트에 이어서 DELEVERY했던 내용 중 5.회의실 입장 구현하기 항목까지 기록한다.\n\n1. ~~git repository 생성 및 각 모듈 셋업하기~~\n2. ~~화면 뼈대 구성하기~~\n3. ~~맵 구성하기~~\n4. **캐릭터 이동 구현하기**\n5. **회의실 입장 구현하기**\n6. 2인 음성 영상 챗 구현하기\n7. 다자 음성 영상 챗 구현하기\n8. 미디어 설정 기능 구현하기\n\n## 4. 캐릭터 이동 구현하기\n\n캐릭터 이동도 사실은 이전 포스트에서 본 예제 코드에 친절히 있었다. create에 에셋을 로드하고 update에 이동 시 애니메이션을 표현해주면 된다.\n\n## 5. 회의실 입장 구현하기\n\n대망의 회의실 입장 구현~ 이라고 해봤자 별거없다 ^\\_^\n캐릭터가 이동할 때마다 회의실 사각형안에 캐릭터의 좌표가 포함되는지 계산하고, 회의실에 들어온 사람이 2명 이상이 되는 순간 WebRTC 커넥션을 열어주면 된다. 시간을 좀 더 써본다면 이 좌표 계산에도 최적의 알고리즘이 있을 것 같긴하다 ㅎㅎ\n","slug":"ToyProjects/Gather/gather-clonecoding-3","published":1,"updated":"2023-01-22T14:01:45.251Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2s5001otqweh0fghu7d","content":"<p>이전 포스트에 이어서 DELEVERY했던 내용 중 5.회의실 입장 구현하기 항목까지 기록한다.</p>\n<ol>\n<li><del>git repository 생성 및 각 모듈 셋업하기</del></li>\n<li><del>화면 뼈대 구성하기</del></li>\n<li><del>맵 구성하기</del></li>\n<li><strong>캐릭터 이동 구현하기</strong></li>\n<li><strong>회의실 입장 구현하기</strong></li>\n<li>2인 음성 영상 챗 구현하기</li>\n<li>다자 음성 영상 챗 구현하기</li>\n<li>미디어 설정 기능 구현하기</li>\n</ol>\n<h2 id=\"4-캐릭터-이동-구현하기\"><a href=\"#4-캐릭터-이동-구현하기\" class=\"headerlink\" title=\"4. 캐릭터 이동 구현하기\"></a>4. 캐릭터 이동 구현하기</h2><p>캐릭터 이동도 사실은 이전 포스트에서 본 예제 코드에 친절히 있었다. create에 에셋을 로드하고 update에 이동 시 애니메이션을 표현해주면 된다.</p>\n<h2 id=\"5-회의실-입장-구현하기\"><a href=\"#5-회의실-입장-구현하기\" class=\"headerlink\" title=\"5. 회의실 입장 구현하기\"></a>5. 회의실 입장 구현하기</h2><p>대망의 회의실 입장 구현~ 이라고 해봤자 별거없다 ^_^<br>캐릭터가 이동할 때마다 회의실 사각형안에 캐릭터의 좌표가 포함되는지 계산하고, 회의실에 들어온 사람이 2명 이상이 되는 순간 WebRTC 커넥션을 열어주면 된다. 시간을 좀 더 써본다면 이 좌표 계산에도 최적의 알고리즘이 있을 것 같긴하다 ㅎㅎ</p>\n","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<p>이전 포스트에 이어서 DELEVERY했던 내용 중 5.회의실 입장 구현하기 항목까지 기록한다.</p>\n<ol>\n<li><del>git repository 생성 및 각 모듈 셋업하기</del></li>\n<li><del>화면 뼈대 구성하기</del></li>\n<li><del>맵 구성하기</del></li>\n<li><strong>캐릭터 이동 구현하기</strong></li>\n<li><strong>회의실 입장 구현하기</strong></li>\n<li>2인 음성 영상 챗 구현하기</li>\n<li>다자 음성 영상 챗 구현하기</li>\n<li>미디어 설정 기능 구현하기</li>\n</ol>\n<h2 id=\"4-캐릭터-이동-구현하기\"><a href=\"#4-캐릭터-이동-구현하기\" class=\"headerlink\" title=\"4. 캐릭터 이동 구현하기\"></a>4. 캐릭터 이동 구현하기</h2><p>캐릭터 이동도 사실은 이전 포스트에서 본 예제 코드에 친절히 있었다. create에 에셋을 로드하고 update에 이동 시 애니메이션을 표현해주면 된다.</p>\n<h2 id=\"5-회의실-입장-구현하기\"><a href=\"#5-회의실-입장-구현하기\" class=\"headerlink\" title=\"5. 회의실 입장 구현하기\"></a>5. 회의실 입장 구현하기</h2><p>대망의 회의실 입장 구현~ 이라고 해봤자 별거없다 ^_^<br>캐릭터가 이동할 때마다 회의실 사각형안에 캐릭터의 좌표가 포함되는지 계산하고, 회의실에 들어온 사람이 2명 이상이 되는 순간 WebRTC 커넥션을 열어주면 된다. 시간을 좀 더 써본다면 이 좌표 계산에도 최적의 알고리즘이 있을 것 같긴하다 ㅎㅎ</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:01:45 GMT+0900 (대한민국 표준시)","title":"[토이프로젝트] 개더타운 클론코딩 - 3","path":"2022/08/25/ToyProjects/Gather/gather-clonecoding-3/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-08-24T17:14:38.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-08-24T17:14:38.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"개발일지 > 개더타운 클론코딩","tags":["토이프로젝트","WebRTC","Phaser"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"[토이프로젝트] 개더타운 클론코딩 - 4","date":"2022-08-27T17:14:38.000Z","_content":"\n이전 포스트에 이어서 DELEVERY했던 내용 중 8.맵 구성하기 항목까지 기록한다.\n\n1. ~~git repository 생성 및 각 모듈 셋업하기~~\n2. ~~화면 뼈대 구성하기~~\n3. ~~맵 구성하기~~\n4. ~~캐릭터 이동 구현하기~~\n5. ~~회의실 입장 구현하기~~\n6. **2인 음성 영상 챗 구현하기**\n   🎁 WebRTC 예제 이해 및 응용\n7. **다자 음성 영상 챗 구현하기**\n8. **미디어 설정 기능 구현하기**\n\n## 6. 2인 음성 영상 챗 구현하기\n\n[codelab](https://codelabs.developers.google.com/codelabs/webrtc-web?hl=ko#0)\n\n## 7. 다자 음성 영상 챗 구현하기\n\n## 8. 미디어 설정 기능 구현하기\n","source":"_posts/ToyProjects/Gather/gather-clonecoding-4.md","raw":"---\ntitle: \"[토이프로젝트] 개더타운 클론코딩 - 4\"\ndate: 2022-08-28 02:14:38\ncategories: [개발일지, 개더타운 클론코딩]\ntags: [토이프로젝트, WebRTC, Phaser]\n---\n\n이전 포스트에 이어서 DELEVERY했던 내용 중 8.맵 구성하기 항목까지 기록한다.\n\n1. ~~git repository 생성 및 각 모듈 셋업하기~~\n2. ~~화면 뼈대 구성하기~~\n3. ~~맵 구성하기~~\n4. ~~캐릭터 이동 구현하기~~\n5. ~~회의실 입장 구현하기~~\n6. **2인 음성 영상 챗 구현하기**\n   🎁 WebRTC 예제 이해 및 응용\n7. **다자 음성 영상 챗 구현하기**\n8. **미디어 설정 기능 구현하기**\n\n## 6. 2인 음성 영상 챗 구현하기\n\n[codelab](https://codelabs.developers.google.com/codelabs/webrtc-web?hl=ko#0)\n\n## 7. 다자 음성 영상 챗 구현하기\n\n## 8. 미디어 설정 기능 구현하기\n","slug":"ToyProjects/Gather/gather-clonecoding-4","published":1,"updated":"2023-01-22T14:01:47.782Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cld7hh2s5001qtqwehvp6gpvm","content":"<p>이전 포스트에 이어서 DELEVERY했던 내용 중 8.맵 구성하기 항목까지 기록한다.</p>\n<ol>\n<li><del>git repository 생성 및 각 모듈 셋업하기</del></li>\n<li><del>화면 뼈대 구성하기</del></li>\n<li><del>맵 구성하기</del></li>\n<li><del>캐릭터 이동 구현하기</del></li>\n<li><del>회의실 입장 구현하기</del></li>\n<li><strong>2인 음성 영상 챗 구현하기</strong><br>🎁 WebRTC 예제 이해 및 응용</li>\n<li><strong>다자 음성 영상 챗 구현하기</strong></li>\n<li><strong>미디어 설정 기능 구현하기</strong></li>\n</ol>\n<h2 id=\"6-2인-음성-영상-챗-구현하기\"><a href=\"#6-2인-음성-영상-챗-구현하기\" class=\"headerlink\" title=\"6. 2인 음성 영상 챗 구현하기\"></a>6. 2인 음성 영상 챗 구현하기</h2><p><a href=\"https://codelabs.developers.google.com/codelabs/webrtc-web?hl=ko#0\">codelab</a></p>\n<h2 id=\"7-다자-음성-영상-챗-구현하기\"><a href=\"#7-다자-음성-영상-챗-구현하기\" class=\"headerlink\" title=\"7. 다자 음성 영상 챗 구현하기\"></a>7. 다자 음성 영상 챗 구현하기</h2><h2 id=\"8-미디어-설정-기능-구현하기\"><a href=\"#8-미디어-설정-기능-구현하기\" class=\"headerlink\" title=\"8. 미디어 설정 기능 구현하기\"></a>8. 미디어 설정 기능 구현하기</h2>","site":{"data":{"head":"<meta\n    name=\"google-site-verification\"\n    content=\"LTmJ0YPGF5Gbzsn3tie9k0UHemQLjwsS1NszONuhJII\"\n/>\n<script\n    async\n    src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4287897577887270\"\n    crossorigin=\"anonymous\"\n></script>    \n<script\n    crossorigin\n    src=\"https://unpkg.com/react@17/umd/react.production.min.js\"\n></script>\n<script\n    crossorigin\n    src=\"https://unpkg.com/react-dom@17/umd/react-dom.production.min.js\"\n></script>\n<script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@100;200;300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n","styles":".search-popup {\n  padding: 20px;\n}\n.collection-title {\n  display: none;\n}\n.site-description {\n  white-space: break-spaces;\n}\np + h1,\nfigure + h1 {\n  margin-top: 80px;\n}\narticle img {\n  width: 400px;\n}\narticle h1 {\n  font-size: 2rem;\n}\narticle .post-body p {\n  font-size: 1em;\n}\nbody {\n  font-size: 0.9em;\n}\n","variables":""}},"excerpt":"","more":"<p>이전 포스트에 이어서 DELEVERY했던 내용 중 8.맵 구성하기 항목까지 기록한다.</p>\n<ol>\n<li><del>git repository 생성 및 각 모듈 셋업하기</del></li>\n<li><del>화면 뼈대 구성하기</del></li>\n<li><del>맵 구성하기</del></li>\n<li><del>캐릭터 이동 구현하기</del></li>\n<li><del>회의실 입장 구현하기</del></li>\n<li><strong>2인 음성 영상 챗 구현하기</strong><br>🎁 WebRTC 예제 이해 및 응용</li>\n<li><strong>다자 음성 영상 챗 구현하기</strong></li>\n<li><strong>미디어 설정 기능 구현하기</strong></li>\n</ol>\n<h2 id=\"6-2인-음성-영상-챗-구현하기\"><a href=\"#6-2인-음성-영상-챗-구현하기\" class=\"headerlink\" title=\"6. 2인 음성 영상 챗 구현하기\"></a>6. 2인 음성 영상 챗 구현하기</h2><p><a href=\"https://codelabs.developers.google.com/codelabs/webrtc-web?hl=ko#0\">codelab</a></p>\n<h2 id=\"7-다자-음성-영상-챗-구현하기\"><a href=\"#7-다자-음성-영상-챗-구현하기\" class=\"headerlink\" title=\"7. 다자 음성 영상 챗 구현하기\"></a>7. 다자 음성 영상 챗 구현하기</h2><h2 id=\"8-미디어-설정-기능-구현하기\"><a href=\"#8-미디어-설정-기능-구현하기\" class=\"headerlink\" title=\"8. 미디어 설정 기능 구현하기\"></a>8. 미디어 설정 기능 구현하기</h2>","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sun Jan 22 2023 23:01:47 GMT+0900 (대한민국 표준시)","title":"[토이프로젝트] 개더타운 클론코딩 - 4","path":"2022/08/28/ToyProjects/Gather/gather-clonecoding-4/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2022-08-27T17:14:38.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2022-08-27T17:14:38.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"개발일지 > 개더타운 클론코딩","tags":["토이프로젝트","WebRTC","Phaser"],"internalLinks":[],"keywords":[],"keywordsLength":0}}],"PostAsset":[],"PostCategory":[{"post_id":"cld7hh2rn0003tqwe0ssw9ytt","category_id":"cld7hh2rp0006tqwe2g8d7kho","_id":"cld7hh2ru000jtqwe6m0bhb2s"},{"post_id":"cld7hh2rt000htqwehv9x2d7g","category_id":"cld7hh2rs000etqwedtjq71k6","_id":"cld7hh2rw000qtqwe44nnazdw"},{"post_id":"cld7hh2ro0005tqwe4v42e7f3","category_id":"cld7hh2rs000etqwedtjq71k6","_id":"cld7hh2rx000utqwe72uw4tcu"},{"post_id":"cld7hh2rq0009tqwe1pvr7wkg","category_id":"cld7hh2rs000etqwedtjq71k6","_id":"cld7hh2ry000ytqwefxxlaek1"},{"post_id":"cld7hh2rr000btqwe5nrfgk9g","category_id":"cld7hh2rs000etqwedtjq71k6","_id":"cld7hh2s00014tqwedjkucler"},{"post_id":"cld7hh2rs000dtqwe96a6eks8","category_id":"cld7hh2rs000etqwedtjq71k6","_id":"cld7hh2s10019tqwe19f54mps"},{"post_id":"cld7hh2s00016tqwe3wxcbwco","category_id":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2s80023tqwe4rzlazna"},{"post_id":"cld7hh2s00016tqwe3wxcbwco","category_id":"cld7hh2s7001ytqweenmy9hmw","_id":"cld7hh2s80026tqwe6k2j4drz"},{"post_id":"cld7hh2ru000itqwe4xp8dkqd","category_id":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2s8002atqwehjf9ao7u"},{"post_id":"cld7hh2ru000itqwe4xp8dkqd","category_id":"cld7hh2s70021tqwe0psfacbs","_id":"cld7hh2s8002ctqwe0d6hdflh"},{"post_id":"cld7hh2s10018tqwe2vc0caap","category_id":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2s9002ftqwe4fxq9w7h"},{"post_id":"cld7hh2s10018tqwe2vc0caap","category_id":"cld7hh2s7001ytqweenmy9hmw","_id":"cld7hh2s9002gtqwega9f6s3y"},{"post_id":"cld7hh2s1001ctqwe4pg593zy","category_id":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2s9002htqwe9ykg4iro"},{"post_id":"cld7hh2s1001ctqwe4pg593zy","category_id":"cld7hh2s7001ytqweenmy9hmw","_id":"cld7hh2s9002ltqwe13f44563"},{"post_id":"cld7hh2rv000ntqwe9ab0g000","category_id":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2sa002ptqwe92168ldc"},{"post_id":"cld7hh2rv000ntqwe9ab0g000","category_id":"cld7hh2s9002etqwe0fbfbnvo","_id":"cld7hh2sa002rtqwe763y5x9v"},{"post_id":"cld7hh2s2001etqweb9vt91qf","category_id":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2sa002stqwe7e6thl0u"},{"post_id":"cld7hh2s2001etqweb9vt91qf","category_id":"cld7hh2s7001ytqweenmy9hmw","_id":"cld7hh2sa002wtqwe3pr4abim"},{"post_id":"cld7hh2rw000ptqwec9yk3bxt","category_id":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2sb0032tqweei1ogm2q"},{"post_id":"cld7hh2rw000ptqwec9yk3bxt","category_id":"cld7hh2s9002etqwe0fbfbnvo","_id":"cld7hh2sb0035tqwe62xhhf9m"},{"post_id":"cld7hh2rx000ttqwe2wu7bhor","category_id":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2sc003etqwebh607xfc"},{"post_id":"cld7hh2rx000ttqwe2wu7bhor","category_id":"cld7hh2sb0036tqwe8od31w54","_id":"cld7hh2sc003gtqweh9h1atsm"},{"post_id":"cld7hh2ry000wtqwe1v4lccr4","category_id":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2sd003ntqwedb5ka6ls"},{"post_id":"cld7hh2ry000wtqwe1v4lccr4","category_id":"cld7hh2sc003itqwe9w4q4bbt","_id":"cld7hh2sd003ptqwe7ld8b0lh"},{"post_id":"cld7hh2rz0010tqwehhjubhtn","category_id":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2se003utqwed5saf7x0"},{"post_id":"cld7hh2rz0010tqwehhjubhtn","category_id":"cld7hh2s7001ytqweenmy9hmw","_id":"cld7hh2se003xtqwe2r284tje"},{"post_id":"cld7hh2rz0012tqweg9tag982","category_id":"cld7hh2s00013tqwegh0q9iad","_id":"cld7hh2se003ztqwefoxdct79"},{"post_id":"cld7hh2rz0012tqweg9tag982","category_id":"cld7hh2s7001ytqweenmy9hmw","_id":"cld7hh2sf0042tqwe4i4h89y3"},{"post_id":"cld7hh2s2001htqwebh2dcnsg","category_id":"cld7hh2sa002otqwe3pmvc6je","_id":"cld7hh2sf0045tqwebm9wg7zd"},{"post_id":"cld7hh2s2001htqwebh2dcnsg","category_id":"cld7hh2se003ttqwe78xahb7t","_id":"cld7hh2sf0048tqwe0wvf0wlu"},{"post_id":"cld7hh2s3001itqwebwby7gdm","category_id":"cld7hh2sa002otqwe3pmvc6je","_id":"cld7hh2sf0049tqweaqlrg9sg"},{"post_id":"cld7hh2s3001itqwebwby7gdm","category_id":"cld7hh2se003ttqwe78xahb7t","_id":"cld7hh2sg004ctqwe4tdt6mel"},{"post_id":"cld7hh2s4001ktqwe76cjdj9n","category_id":"cld7hh2sa002otqwe3pmvc6je","_id":"cld7hh2sg004etqwegridhzzs"},{"post_id":"cld7hh2s4001ktqwe76cjdj9n","category_id":"cld7hh2sf0044tqweeamwaiuk","_id":"cld7hh2sg004gtqwe3qtbbv25"},{"post_id":"cld7hh2s4001mtqwe3z6hfbj0","category_id":"cld7hh2sa002otqwe3pmvc6je","_id":"cld7hh2sg004jtqwe4csm2td4"},{"post_id":"cld7hh2s4001mtqwe3z6hfbj0","category_id":"cld7hh2sf0044tqweeamwaiuk","_id":"cld7hh2sg004mtqwegvxl9iv5"},{"post_id":"cld7hh2s5001otqweh0fghu7d","category_id":"cld7hh2sa002otqwe3pmvc6je","_id":"cld7hh2sh004otqwebg3b6t7t"},{"post_id":"cld7hh2s5001otqweh0fghu7d","category_id":"cld7hh2sf0044tqweeamwaiuk","_id":"cld7hh2sh004qtqwedjric7mg"},{"post_id":"cld7hh2s5001qtqwehvp6gpvm","category_id":"cld7hh2sa002otqwe3pmvc6je","_id":"cld7hh2sh004rtqwe7vtlf0l9"},{"post_id":"cld7hh2s5001qtqwehvp6gpvm","category_id":"cld7hh2sf0044tqweeamwaiuk","_id":"cld7hh2sh004ttqweaanzaw96"}],"PostTag":[{"post_id":"cld7hh2rn0003tqwe0ssw9ytt","tag_id":"cld7hh2rq0007tqwe8qlo63fd","_id":"cld7hh2rt000gtqweaf0e2817"},{"post_id":"cld7hh2rt000htqwehv9x2d7g","tag_id":"cld7hh2rt000ftqwe2x12ea8t","_id":"cld7hh2rv000mtqweblopfphq"},{"post_id":"cld7hh2ro0005tqwe4v42e7f3","tag_id":"cld7hh2rt000ftqwe2x12ea8t","_id":"cld7hh2rw000otqwe6y3zgugk"},{"post_id":"cld7hh2rq0009tqwe1pvr7wkg","tag_id":"cld7hh2rt000ftqwe2x12ea8t","_id":"cld7hh2ry000vtqweej6zfcre"},{"post_id":"cld7hh2rr000btqwe5nrfgk9g","tag_id":"cld7hh2rt000ftqwe2x12ea8t","_id":"cld7hh2rz0011tqwe2shybt5n"},{"post_id":"cld7hh2rs000dtqwe96a6eks8","tag_id":"cld7hh2rt000ftqwe2x12ea8t","_id":"cld7hh2s00017tqwe1b40gf9v"},{"post_id":"cld7hh2ru000itqwe4xp8dkqd","tag_id":"cld7hh2s00015tqwe3p18bvnk","_id":"cld7hh2s2001dtqwe1i8agzx7"},{"post_id":"cld7hh2rv000ntqwe9ab0g000","tag_id":"cld7hh2s1001btqwe52fzbu9u","_id":"cld7hh2s6001ttqwehyd6ajqz"},{"post_id":"cld7hh2rv000ntqwe9ab0g000","tag_id":"cld7hh2s2001gtqwegg42dv1c","_id":"cld7hh2s6001vtqwe9x8x2whj"},{"post_id":"cld7hh2rv000ntqwe9ab0g000","tag_id":"cld7hh2s4001ltqwe88516m69","_id":"cld7hh2s7001xtqwecdxbh0e0"},{"post_id":"cld7hh2rv000ntqwe9ab0g000","tag_id":"cld7hh2s5001ptqwefi2p5hgp","_id":"cld7hh2s7001ztqwe343bey44"},{"post_id":"cld7hh2rw000ptqwec9yk3bxt","tag_id":"cld7hh2s6001stqwe2b3e6m4c","_id":"cld7hh2s80025tqwe1rpvd0oy"},{"post_id":"cld7hh2rw000ptqwec9yk3bxt","tag_id":"cld7hh2s6001wtqwe1o592qn8","_id":"cld7hh2s80027tqwef4x5354x"},{"post_id":"cld7hh2rw000ptqwec9yk3bxt","tag_id":"cld7hh2s70020tqweaemx4x4d","_id":"cld7hh2s8002btqwefzf16mso"},{"post_id":"cld7hh2rx000ttqwe2wu7bhor","tag_id":"cld7hh2s70022tqwef6b63r2p","_id":"cld7hh2s9002ktqwe0yyhcq6r"},{"post_id":"cld7hh2rx000ttqwe2wu7bhor","tag_id":"cld7hh2s80028tqwe1a4o09az","_id":"cld7hh2s9002mtqwebq7n6qna"},{"post_id":"cld7hh2rx000ttqwe2wu7bhor","tag_id":"cld7hh2s9002dtqwe002fbmdt","_id":"cld7hh2sa002qtqwe7lab0m7t"},{"post_id":"cld7hh2ry000wtqwe1v4lccr4","tag_id":"cld7hh2s80028tqwe1a4o09az","_id":"cld7hh2sa002vtqwe2ka42wjo"},{"post_id":"cld7hh2ry000wtqwe1v4lccr4","tag_id":"cld7hh2s9002ntqwe5l4kcfgx","_id":"cld7hh2sa002xtqwe9ju840qf"},{"post_id":"cld7hh2rz0010tqwehhjubhtn","tag_id":"cld7hh2sa002ttqwedbqd37yi","_id":"cld7hh2sb0030tqwe1bf18xv2"},{"post_id":"cld7hh2rz0012tqweg9tag982","tag_id":"cld7hh2sa002ttqwedbqd37yi","_id":"cld7hh2sb0034tqwe3d0eg00r"},{"post_id":"cld7hh2s00016tqwe3wxcbwco","tag_id":"cld7hh2sa002ttqwedbqd37yi","_id":"cld7hh2sb0038tqwe971h7ntv"},{"post_id":"cld7hh2s10018tqwe2vc0caap","tag_id":"cld7hh2sa002ttqwedbqd37yi","_id":"cld7hh2sc003btqweaehr75un"},{"post_id":"cld7hh2s1001ctqwe4pg593zy","tag_id":"cld7hh2sa002ttqwedbqd37yi","_id":"cld7hh2sc003ftqwe95jhgo0l"},{"post_id":"cld7hh2s2001etqweb9vt91qf","tag_id":"cld7hh2sa002ttqwedbqd37yi","_id":"cld7hh2sd003jtqwe02km97qw"},{"post_id":"cld7hh2s2001htqwebh2dcnsg","tag_id":"cld7hh2sc003htqwe2qbg7pdv","_id":"cld7hh2se003stqwegeueeasv"},{"post_id":"cld7hh2s2001htqwebh2dcnsg","tag_id":"cld7hh2sd003ktqwedv4z5qfy","_id":"cld7hh2se003vtqwegdozbe10"},{"post_id":"cld7hh2s2001htqwebh2dcnsg","tag_id":"cld7hh2sd003otqweds7c29kw","_id":"cld7hh2se003ytqwe6mqjg8rr"},{"post_id":"cld7hh2s3001itqwebwby7gdm","tag_id":"cld7hh2sc003htqwe2qbg7pdv","_id":"cld7hh2sf0043tqwe7jxo11pi"},{"post_id":"cld7hh2s3001itqwebwby7gdm","tag_id":"cld7hh2se003wtqwe2ntt042e","_id":"cld7hh2sf0046tqwe8fy8b7xk"},{"post_id":"cld7hh2s4001ktqwe76cjdj9n","tag_id":"cld7hh2se0041tqwe7bchex6h","_id":"cld7hh2sg004htqwefra52lp4"},{"post_id":"cld7hh2s4001ktqwe76cjdj9n","tag_id":"cld7hh2sf0047tqwef4so1e3u","_id":"cld7hh2sg004ktqwe1zt0b4kh"},{"post_id":"cld7hh2s4001ktqwe76cjdj9n","tag_id":"cld7hh2sf004btqweboitgddv","_id":"cld7hh2sg004ntqwehvn556y5"},{"post_id":"cld7hh2s4001mtqwe3z6hfbj0","tag_id":"cld7hh2se0041tqwe7bchex6h","_id":"cld7hh2sh004utqwedsfdc65d"},{"post_id":"cld7hh2s4001mtqwe3z6hfbj0","tag_id":"cld7hh2sf0047tqwef4so1e3u","_id":"cld7hh2sh004vtqweb4xe70hq"},{"post_id":"cld7hh2s4001mtqwe3z6hfbj0","tag_id":"cld7hh2sf004btqweboitgddv","_id":"cld7hh2sh004xtqwe9yqkcidt"},{"post_id":"cld7hh2s5001otqweh0fghu7d","tag_id":"cld7hh2se0041tqwe7bchex6h","_id":"cld7hh2si0050tqwe98xreq7o"},{"post_id":"cld7hh2s5001otqweh0fghu7d","tag_id":"cld7hh2sf0047tqwef4so1e3u","_id":"cld7hh2si0051tqwedpdpc6ba"},{"post_id":"cld7hh2s5001otqweh0fghu7d","tag_id":"cld7hh2sf004btqweboitgddv","_id":"cld7hh2si0053tqwe85q122dp"},{"post_id":"cld7hh2s5001qtqwehvp6gpvm","tag_id":"cld7hh2se0041tqwe7bchex6h","_id":"cld7hh2si0055tqwe87d4ba87"},{"post_id":"cld7hh2s5001qtqwehvp6gpvm","tag_id":"cld7hh2sf0047tqwef4so1e3u","_id":"cld7hh2si0056tqwe3bkr73s5"},{"post_id":"cld7hh2s5001qtqwehvp6gpvm","tag_id":"cld7hh2sf004btqweboitgddv","_id":"cld7hh2si0057tqwe58z9ee44"}],"Tag":[{"name":"Flutter","_id":"cld7hh2rq0007tqwe8qlo63fd"},{"name":"Diary","_id":"cld7hh2rt000ftqwe2x12ea8t"},{"name":"JavaScript","_id":"cld7hh2s00015tqwe3p18bvnk"},{"name":"Spring Boot","_id":"cld7hh2s1001btqwe52fzbu9u"},{"name":"MySQL","_id":"cld7hh2s2001gtqwegg42dv1c"},{"name":"JPA","_id":"cld7hh2s4001ltqwe88516m69"},{"name":"Flyway","_id":"cld7hh2s5001ptqwefi2p5hgp"},{"name":"@Valid","_id":"cld7hh2s6001stqwe2b3e6m4c"},{"name":"Spring","_id":"cld7hh2s6001wtqwe1o592qn8"},{"name":"Annotation","_id":"cld7hh2s70020tqweaemx4x4d"},{"name":"MLOps","_id":"cld7hh2s70022tqwef6b63r2p"},{"name":"AI","_id":"cld7hh2s80028tqwe1a4o09az"},{"name":"Cloud","_id":"cld7hh2s9002dtqwe002fbmdt"},{"name":"javascript","_id":"cld7hh2s9002ntqwe5l4kcfgx"},{"name":"React Native","_id":"cld7hh2sa002ttqwedbqd37yi"},{"name":"Hexo","_id":"cld7hh2sc003htqwe2qbg7pdv"},{"name":"React","_id":"cld7hh2sd003ktqwedv4z5qfy"},{"name":"UI/UX","_id":"cld7hh2sd003otqweds7c29kw"},{"name":"NexT","_id":"cld7hh2se003wtqwe2ntt042e"},{"name":"토이프로젝트","_id":"cld7hh2se0041tqwe7bchex6h"},{"name":"WebRTC","_id":"cld7hh2sf0047tqwef4so1e3u"},{"name":"Phaser","_id":"cld7hh2sf004btqweboitgddv"}]}}